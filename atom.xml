<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eryoung2的个人博客</title>
  
  <subtitle>ErYoung2写字的地方</subtitle>
  <link href="http://eryoung2.github.io/atom.xml" rel="self"/>
  
  <link href="http://eryoung2.github.io/"/>
  <updated>2023-05-15T04:41:42.604Z</updated>
  <id>http://eryoung2.github.io/</id>
  
  <author>
    <name>ErYoung2</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>耻辱柱！</title>
    <link href="http://eryoung2.github.io/2023/05/15/%E8%80%BB%E8%BE%B1%E6%9F%B1%EF%BC%81/"/>
    <id>http://eryoung2.github.io/2023/05/15/%E8%80%BB%E8%BE%B1%E6%9F%B1%EF%BC%81/</id>
    <published>2023-05-15T04:41:42.000Z</published>
    <updated>2023-05-15T04:41:42.604Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>无线打印机设置</title>
    <link href="http://eryoung2.github.io/2023/05/09/%E6%97%A0%E7%BA%BF%E6%89%93%E5%8D%B0%E6%9C%BA%E8%AE%BE%E7%BD%AE/"/>
    <id>http://eryoung2.github.io/2023/05/09/%E6%97%A0%E7%BA%BF%E6%89%93%E5%8D%B0%E6%9C%BA%E8%AE%BE%E7%BD%AE/</id>
    <published>2023-05-09T14:29:46.000Z</published>
    <updated>2023-05-09T15:39:19.749Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Emm，没错，最近需要打印的东西有点多，所以在某爹爹上买了一台激光打印机。之所以不买喷墨打印机，是因为之前吃过亏，这玩意儿贼麻烦，墨盒坏了就gg，双墨盒害得搁那儿加墨，搞一手花里胡哨，捞不着一点儿好。最后狠心50包邮了。</p><p>我这台是二手打印机，惠普的P1008无线版本。说是无线，我其实也是连着线用的，只不过确实有无线打印的功能，我将其连在了服务器上，然后通过无线控制，远程打印。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>先讲配置环境，本次配置涉及3台设备：</p><ul><li><p>打印机（HP LaserJet P1008）</p></li><li><p>服务器（Win10系统）</p></li><li><p>远程客户端（MacOS）</p></li></ul><p>该有的设备都有了，我们开始配置。</p><h3 id="安装打印机"><a href="#安装打印机" class="headerlink" title="安装打印机"></a>安装打印机</h3><p>这一步跟配置无关，可以参考激光打印机安装矽鼓的过程，B站有详细视频解析，请自行翻阅：</p><p><a href="https://www.bilibili.com/video/BV1ze4y1f7bx/?spm_id_from=333.788.recommend_more_video.3&vd_source=27816c2400a8d15482b71cc9394e1c3a">安装&#x2F;更换打印机矽鼓</a></p><p><a href="https://www.bilibili.com/video/BV1Uv4y117nS/?spm_id_from=autoNext&vd_source=27816c2400a8d15482b71cc9394e1c3a">填充碳粉</a></p><h3 id="连接windows主机、安装驱动、有线连接、设置共享"><a href="#连接windows主机、安装驱动、有线连接、设置共享" class="headerlink" title="连接windows主机、安装驱动、有线连接、设置共享"></a>连接windows主机、安装驱动、有线连接、设置共享</h3><p>将B2A线的B端连在打印机上，A端连在windows主机上，然后去HP官网现在相关版本驱动并安装。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-22-50-32-win.jpg"></p><p>安装就好。</p><p>安装完毕之后，打开windows设置-设备-打印机与扫描仪-添加，刷新之后可以搜到，如果搜不到的话，可以手动添加。</p><p>添加完毕之后可看到这个：</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-22-58-54-add.jpg"></p><p>点击“管理”，可以打印测试页。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-00-13-setup.jpg"></p><p>选择“打印机属性”，设置共享。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-01-26-share.jpg"></p><p>设置其他共享配置：</p><p>控制面板—&gt;网络和共享中心—&gt;选择家庭组和共享选项—&gt;更改高级共享设置</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-08-34-config.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-10-07-config2.jpg"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-11-00-config3.jpg"></p><p>添加特定账户，设置账户密码。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-14-16-user.jpg"></p><p>至此，windows端服务配置完毕。windows通过samba协议将其暴露出来，具体格式：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">samba://ip/&lt;Printer name&gt;</span><br></pre></td></tr></table></figure><h3 id="Macos无线连接"><a href="#Macos无线连接" class="headerlink" title="Macos无线连接"></a>Macos无线连接</h3><p>安装Mac版驱动程序：</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-22-12-driver2.jpg"></p><p>打开设置-打印机与扫描仪-添加打印机、扫描仪或传真机，下载并安装。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-32-03-add2.jpg"></p><p>添加完毕。</p><h2 id="测试打印"><a href="#测试打印" class="headerlink" title="测试打印"></a>测试打印</h2><p>在Macos上打开一个PDF文件，使用Command+P，进行打印设置。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/05/09-23-32-56-test.jpg"></p><p>如果点击打印后，出现“保留以备认证”时，可以点击右侧更新按钮，重新使用上面建立的打印账户进行验证，并保存到钥匙串即可。</p><p><a href="https://www.feng.com/post/7744881">MacOS 解决“保留以备认证“问题</a></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本文图很多，但是也没截完全，不过大致过程如上，细微的系统差别也会有，但是不大，可根据自己版本进行配置。</p><h2 id="参考-amp-鸣谢"><a href="#参考-amp-鸣谢" class="headerlink" title="参考 &amp; 鸣谢"></a>参考 &amp; 鸣谢</h2><p><a href="https://support.hp.com/cn-zh/drivers/selfservice/hp-laserjet-p1008-printer/3435686">HP官网驱动下载</a></p><p><a href="https://www.bilibili.com/video/BV1ze4y1f7bx/?spm_id_from=333.788.recommend_more_video.3&vd_source=27816c2400a8d15482b71cc9394e1c3a">安装&#x2F;更换打印机矽鼓</a></p><p><a href="https://www.bilibili.com/video/BV1Uv4y117nS/?spm_id_from=autoNext&vd_source=27816c2400a8d15482b71cc9394e1c3a">填充碳粉</a></p><p><a href="https://www.feng.com/post/7744881">MacOS 解决“保留以备认证“问题</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Emm，没错，最近需要打印的东西有点多，所以在某爹爹上买了一台激光打印机。之所以不买喷墨打印机，是因为之前吃过亏，这玩意儿贼麻烦，墨盒坏了就</summary>
      
    
    
    
    <category term="通用技术" scheme="http://eryoung2.github.io/categories/%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="打印机" scheme="http://eryoung2.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>NBA 76人vs绿军</title>
    <link href="http://eryoung2.github.io/2023/05/08/NBA-76%E4%BA%BAvs%E7%BB%BF%E5%86%9B/"/>
    <id>http://eryoung2.github.io/2023/05/08/NBA-76%E4%BA%BAvs%E7%BB%BF%E5%86%9B/</id>
    <published>2023-05-07T23:33:09.000Z</published>
    <updated>2023-05-07T23:47:35.395Z</updated>
    
    <content type="html"><![CDATA[<p>G1 45分6助攻，客场带队赢球</p><p>G4 42分8板9助，艰难守下主场</p><p>两场赢球的比赛，登哥都爆发了。</p><p>我们也可以说，76人要想赢球，必须让登哥爆发。</p><p>作为登蜜，看到登哥爆发我很开心，但是也必须清楚地认识到，登哥在76人注定是一位客将，虽然表现上佳时会带领球队赢球，但是身份的差距表明了他只是一位客人，主将还得是软脚的恩比德。</p><p>登哥不可能场场超神，他的身体已经决定了他必然有低迷的时候，G2和G3就是例子。客将就是这样子，当一切顺风的时候，万事好说；一旦手风不顺，拿不下比赛，那么背锅的事大概率会给到客将。只能说这也是没办法的事情，身份所限。</p><p>登哥在76人不仅要carry球队拿下胜利，还要顶着球队老大和一个猪头教练的debuff，给我的话我早就崩了，而登哥还能带着球队赢球，没有强大的意志力以及对冠军的极度渴望，我真不知道他怎么顶下来的。</p><p>不愧是我喜欢的男人啊！</p><p>当然了，经典比赛能看到真的幸福，最后祝愿登哥本赛季得偿所愿，拿到那该死的总冠军！</p><p align="right">-----登哥首席带刀侍卫  生活不如意·中年男人·兔羊兔</p><p align="right">作于2023年5月8日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;G1 45分6助攻，客场带队赢球&lt;/p&gt;
&lt;p&gt;G4 42分8板9助，艰难守下主场&lt;/p&gt;
&lt;p&gt;两场赢球的比赛，登哥都爆发了。&lt;/p&gt;
&lt;p&gt;我们也可以说，76人要想赢球，必须让登哥爆发。&lt;/p&gt;
&lt;p&gt;作为登蜜，看到登哥爆发我很开心，但是也必须清楚地认识到，登哥在76人</summary>
      
    
    
    
    <category term="NBA" scheme="http://eryoung2.github.io/categories/NBA/"/>
    
    
    <category term="詹姆斯·哈登" scheme="http://eryoung2.github.io/tags/%E8%A9%B9%E5%A7%86%E6%96%AF%C2%B7%E5%93%88%E7%99%BB/"/>
    
  </entry>
  
  <entry>
    <title>openwrt - 间歇性断网 - 解决方法</title>
    <link href="http://eryoung2.github.io/2023/04/28/openwrt-%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E7%BD%91-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://eryoung2.github.io/2023/04/28/openwrt-%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E7%BD%91-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2023-04-28T05:07:02.000Z</published>
    <updated>2023-04-28T05:17:06.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于自己家的路由器使用了openwrt作为系统，但是我发现一个问题，就是它时不时就会出现断网情况。</p><p>其实也不是断网，内网都是通的，但是如果连接公网的话，就会出现DNS解析不出来的情况，非常奇怪，而且贼烦。</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>经过查找，原因是openwrt里边有mwan3这个套件，这是一个分流助手，可以用来做多运营商的负载均衡功能。但是在这里，就会影响到openwrt的正常使用。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>卸载mwan3这个套件，之后重启设备。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://laob.me/2436/">OpenWRT 间歇性断网&amp;#038;网络不稳定 的解决办法 | 毕扬博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于自己家的路由器使用了openwrt作为系统，但是我发现一个问题，就是它时不时就会出现断网情况。&lt;/p&gt;
&lt;p&gt;其实也不是断网，内网都是通</summary>
      
    
    
    
    <category term="工具使用" scheme="http://eryoung2.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="openwrt" scheme="http://eryoung2.github.io/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 第一个demo</title>
    <link href="http://eryoung2.github.io/2023/04/25/SpringBoot-%E7%AC%AC%E4%B8%80%E4%B8%AAdemo/"/>
    <id>http://eryoung2.github.io/2023/04/25/SpringBoot-%E7%AC%AC%E4%B8%80%E4%B8%AAdemo/</id>
    <published>2023-04-25T14:36:26.000Z</published>
    <updated>2023-04-26T08:22:46.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前奏"><a href="#前奏" class="headerlink" title="前奏"></a>前奏</h2><p>最近在面试，有一家公司在谈的时候，发了一份后端笔试题给我，是java的……</p><p>我TMD是个运维诶，你给我一套SRE题不行嘛……</p><p>玛德现在都这么卷了吗，SRE要去卷java啦……</p><h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h2><p>对于Java的很多东西我并不懂，但是我知道写java的后端都会用到Spring全家桶，包括SpringBoot、SpringCloud、SpringSecurity等等。</p><p>那怎么办呢，跟着卷呗。</p><p>于是我就查了SpringBoot官网，写出了第一个demo – helloworld</p><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>以下内容摘抄自<a href="https://spring.io/quickstart">Spring官网</a></p><p>运行环境：Ubuntu22.04</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ol><li>安装jdk17</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install openjdk-17-jre-headless -y</span><br></pre></td></tr></table></figure><p>    如果机器上有多个jdk版本，需要将其设置为jdk17</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu-linux-22-04-desktop:~# update-alternatives --config java</span><br><span class="line">There are 2 choices for the alternative java (providing /usr/bin/java).</span><br><span class="line"></span><br><span class="line">  Selection    Path                                            Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/lib/jvm/java-17-openjdk-arm64/bin/java      1711      auto mode</span><br><span class="line">  1            /usr/lib/jvm/java-17-openjdk-arm64/bin/java      1711      manual mode</span><br><span class="line">  2            /usr/lib/jvm/java-8-openjdk-arm64/jre/bin/java   1081      manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or type selection number: 0</span><br></pre></td></tr></table></figure><h3 id="正式步骤"><a href="#正式步骤" class="headerlink" title="正式步骤"></a>正式步骤</h3><ol><li><p>打开spring打包器(<a href="https://start.spring.io/">https://start.spring.io/</a>) ,选择相应的选项与版本，并选择Spring Web做为依赖并下载。<br><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/25-22-49-08-%E6%88%AA%E5%B1%8F2023-04-25%2022.48.35.png"><br>下载之后，是一个zip包，解压后得到项目本体。</p></li><li><p>修改src&#x2F;java&#x2F;com&#x2F;example&#x2F;demo&#x2F;DemoApplication.java，复制以下内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(<span class="meta">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;World&quot;)</span> String name)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> String.format(<span class="string">&quot;Hello %s!&quot;</span>, name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行，之后就会启动项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">young@ubuntu-linux-22-04-desktop:~/demo$ ./gradlew bootRun</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">Task :bootRun</span></span><br><span class="line"></span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___&#x27;_ __ _ _(_)_ __  __ _ \ \ \ \</span><br><span class="line">( ( )\___ | &#x27;_ | &#x27;_| | &#x27;_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  &#x27;  |____| .__|_| |_|_| |_\__, | / / / /</span><br><span class="line"> =========|_|==============|___/=/_/_/_/</span><br><span class="line"> :: Spring Boot ::                (v3.0.6)</span><br><span class="line"></span><br><span class="line">2023-04-25T22:53:19.088+08:00  INFO 4040654 --- [           main] com.example.demo.DemoApplication         : Starting DemoApplication using Java 17.0.6 with PID 4040654 (/home/young/demo/build/classes/java/main started by young in /home/young/demo)</span><br><span class="line">2023-04-25T22:53:19.090+08:00  INFO 4040654 --- [           main] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: &quot;default&quot;</span><br><span class="line">2023-04-25T22:53:19.838+08:00  INFO 4040654 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)</span><br><span class="line">2023-04-25T22:53:19.843+08:00  INFO 4040654 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]</span><br><span class="line">2023-04-25T22:53:19.843+08:00  INFO 4040654 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.8]</span><br><span class="line">2023-04-25T22:53:19.905+08:00  INFO 4040654 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext</span><br><span class="line">2023-04-25T22:53:19.912+08:00  INFO 4040654 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 693 ms</span><br><span class="line">2023-04-25T22:53:20.135+08:00  INFO 4040654 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path &#x27;&#x27;</span><br><span class="line">2023-04-25T22:53:20.139+08:00  INFO 4040654 --- [           main] com.example.demo.DemoApplication         : Started DemoApplication in 1.34 seconds (process running for 1.725)</span><br></pre></td></tr></table></figure></li><li><p>使用http:&#x2F;&#x2F;<server-ip>:8080&#x2F;hello去访问8080端口</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/25-22-55-44-%E6%88%AA%E5%B1%8F2023-04-25%2022.55.34.png"></p></li></ol><p>第一个项目就跑起来了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>目前这个就业环境真的很糟糕啊，裁员的裁员，降薪的降薪，作为一个小菜狗，能做的也只是提升自己的能力，扩展自己的眼界，开拓自己的心胸，保持良好的生活习惯，保持健康，保持向上，保持尊严。</p><p>与诸君共勉！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前奏&quot;&gt;&lt;a href=&quot;#前奏&quot; class=&quot;headerlink&quot; title=&quot;前奏&quot;&gt;&lt;/a&gt;前奏&lt;/h2&gt;&lt;p&gt;最近在面试，有一家公司在谈的时候，发了一份后端笔试题给我，是java的……&lt;/p&gt;
&lt;p&gt;我TMD是个运维诶，你给我一套SRE题不行嘛……&lt;</summary>
      
    
    
    
    <category term="后端" scheme="http://eryoung2.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="java" scheme="http://eryoung2.github.io/tags/java/"/>
    
    <category term="spring" scheme="http://eryoung2.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>github无提交记录</title>
    <link href="http://eryoung2.github.io/2023/04/17/github%E6%97%A0%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95/"/>
    <id>http://eryoung2.github.io/2023/04/17/github%E6%97%A0%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95/</id>
    <published>2023-04-17T05:07:37.000Z</published>
    <updated>2023-04-17T05:10:17.995Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间我修改了自己github账号的邮箱，后来发现一个尴尬的问题，提交之后在github的账号页看不到提交记录，很奇怪。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>需要更新github仓库配置，与新设置的github邮箱一致。</p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;your repository&gt;</span><br><span class="line">git config --global user.email &quot;Your new email address&quot;</span><br></pre></td></tr></table></figure><p>再提交就好了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前段时间我修改了自己github账号的邮箱，后来发现一个尴尬的问题，提交之后在github的账号页看不到提交记录，很奇怪。&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="版本控制" scheme="http://eryoung2.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="git" scheme="http://eryoung2.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Github 添加贪吃蛇动画</title>
    <link href="http://eryoung2.github.io/2023/04/12/Github-%E6%B7%BB%E5%8A%A0%E8%B4%AA%E5%90%83%E8%9B%87%E5%8A%A8%E7%94%BB/"/>
    <id>http://eryoung2.github.io/2023/04/12/Github-%E6%B7%BB%E5%8A%A0%E8%B4%AA%E5%90%83%E8%9B%87%E5%8A%A8%E7%94%BB/</id>
    <published>2023-04-12T02:23:01.000Z</published>
    <updated>2023-04-20T15:23:33.462Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们都知道，对于Github来说，当你选择你的账户时，可以看到自己的提交记录。</p><p>于是就有大神动脑筋了，这些commit记录都是一些豆，如果弄一条蛇来，不就可以搞个贪吃蛇了吗？</p><p>有道理有道理，本文就来讲一下如何弄一条蛇出来。</p><h2 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h2><h3 id="创建个人仓库"><a href="#创建个人仓库" class="headerlink" title="创建个人仓库"></a>创建个人仓库</h3><p>个人仓库是一个特殊的仓库，名字就是你的Github Account Name，比如我叫ErYoung2，我就建立一个叫做ErYoung2的仓库。</p><h3 id="创建Github-Actions"><a href="#创建Github-Actions" class="headerlink" title="创建Github Actions"></a>创建Github Actions</h3><p>创建.github&#x2F;workflow&#x2F;snake.yml文件，添加以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">generate</span> <span class="string">animation</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="comment"># run automatically every 12 hours</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&quot;0 2 * * *&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># allows to manually run the job at any time</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># run on every push on the master branch</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">generate:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">timeout-minutes:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># generates a snake game from a github user (&lt;github_user_name&gt;) contributions graph, output a svg animation at &lt;svg_out_path&gt;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">generate</span> <span class="string">github-contribution-grid-snake.svg</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">Platane/snk/svg-only@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_user_name:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository_owner</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">outputs:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            dist/github-contribution-grid-snake.svg</span></span><br><span class="line"><span class="string">            dist/github-contribution-grid-snake-dark.svg?palette=github-dark</span></span><br><span class="line"><span class="string"></span>      <span class="comment"># push the content of &lt;build_dir&gt; to a branch</span></span><br><span class="line">      <span class="comment"># the content will be available at https://raw.githubusercontent.com/&lt;github_user&gt;/&lt;repository&gt;/&lt;target_branch&gt;/&lt;file&gt; , or as github page</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">push</span> <span class="string">github-contribution-grid-snake.svg</span> <span class="string">to</span> <span class="string">the</span> <span class="string">output</span> <span class="string">branch</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">crazy-max/ghaction-github-pages@v2.6.0</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">target_branch:</span> <span class="string">output</span></span><br><span class="line">          <span class="attr">build_dir:</span> <span class="string">dist</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="生成SVG文件"><a href="#生成SVG文件" class="headerlink" title="生成SVG文件"></a>生成SVG文件</h3><p>点击Github Actions，选择上面添加的yml文件的workflow，进行构建。</p><p>构建完毕之后，会发现仓库多了一个output分支，下面有两个SVG文件。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/12-10-39-14-%E6%88%AA%E5%B1%8F2023-04-12%2010.38.51.png"></p><h3 id="添加README文件"><a href="#添加README文件" class="headerlink" title="添加README文件"></a>添加README文件</h3><p>编辑README.md文件，添加你想添加的内容。在最后一行，可以添加SVG文件来运行贪吃蛇，可选择亮色或者暗色。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">亮色</span>](<span class="link">https://raw.githubusercontent.com/&lt;你的账号名&gt;/&lt;你的仓库名&gt;/output/github-contribution-grid-snake.svg</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">暗色</span>](<span class="link">https://raw.githubusercontent.com/&lt;你的账号名&gt;/&lt;你的仓库名&gt;/output/github-contribution-grid-snake-dark.svg</span>)</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>然后就跑起来了，是不是很不错捏？</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/12-10-47-46-%E6%88%AA%E5%B1%8F2023-04-12%2010.47.38.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们都知道，对于Github来说，当你选择你的账户时，可以看到自己的提交记录。&lt;/p&gt;
&lt;p&gt;于是就有大神动脑筋了，这些commit记录都是</summary>
      
    
    
    
    <category term="奇怪的东西" scheme="http://eryoung2.github.io/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
    
    <category term="git" scheme="http://eryoung2.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>《晴天》-- 周杰伦</title>
    <link href="http://eryoung2.github.io/2023/04/12/%E3%80%8A%E6%99%B4%E5%A4%A9%E3%80%8B-%E5%91%A8%E6%9D%B0%E4%BC%A6/"/>
    <id>http://eryoung2.github.io/2023/04/12/%E3%80%8A%E6%99%B4%E5%A4%A9%E3%80%8B-%E5%91%A8%E6%9D%B0%E4%BC%A6/</id>
    <published>2023-04-11T16:08:40.000Z</published>
    <updated>2023-04-11T16:10:10.050Z</updated>
    
    <content type="html"><![CDATA[<p>故事的小黄花，从出生那年就飘着，<br>童年的荡秋千，随记忆一直晃到现在。<br>Rui sou sou xi dou xi la<br>Sou la xi xi xi xi la xi la sou<br>吹着前奏，望着天空，<br>我想起花瓣，试着掉落。    </p><p>    </p><p>为你翘课的那一天，花落的那一天，<br>教室的那一间，我怎么看不见。<br>消失的下雨天，我好想再淋一遍。</p><p>没想到失去的勇气，我还留着，好想再闻一遍，<br>你会等待，还是离开？</p><p>    </p><p>   </p><p>刮风这天，我试过握着你手，<br>但偏偏，雨渐渐，大到我看你不见。<br>还要多久，我才能在你身边，<br>等到放晴的那天，也许我会比较好一点。</p><p>    </p><p>从前从前，有个人爱你很久，<br>但偏偏，风渐渐，把距离吹得好远。<br>好不容易，又能在多爱一天，<br>但故事到最后，你好像还是说了，拜拜。</p><p>    </p><p>为你翘课的那一天，花落的那一天，<br>教室的那一间，我怎么看不见。<br>消失的下雨天，我好想再淋一遍。</p><p>没想到失去的勇气，我还留着，好想再闻一遍，<br>你会等待，还是离开？</p><p>    </p><p>刮风这天，我试过握着你手，<br>但偏偏，雨渐渐，大到我看你不见。</p><p>    </p><p>···················（大提琴声）···················</p><p>从前从前，有个人爱你很久，<br>偏偏，风渐渐，把距离吹得好远。<br>好不容易，又能在多爱一天，<br>但故事到最后，你好像还是说了，拜拜。</p><p>    </p><p>···················（RAP）···················</p><p>刮风这天，我试过握着你手，<br>但偏偏，雨渐渐，大到我看你不见。<br>还要多久，我才能在你身边，<br>等到放晴那天，也许我会比较好一点。</p><p>从前从前，有个人爱你很久，<br>但偏偏，风渐渐，把距离吹得好远。<br>好不容易，又能在多爱一天，<br>但故事到最后，你好像还是说了，拜。</p><p>    </p><p>···················（大提琴声）···················</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;故事的小黄花，从出生那年就飘着，&lt;br&gt;童年的荡秋千，随记忆一直晃到现在。&lt;br&gt;Rui sou sou xi dou xi la&lt;br&gt;Sou la xi xi xi xi la xi la sou&lt;br&gt;吹着前奏，望着天空，&lt;br&gt;我想起花瓣，试着掉落。    &lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>阿里云 连通不同VPC方案</title>
    <link href="http://eryoung2.github.io/2023/04/11/%E9%98%BF%E9%87%8C%E4%BA%91-%E8%BF%9E%E9%80%9A%E4%B8%8D%E5%90%8CVPC%E6%96%B9%E6%A1%88/"/>
    <id>http://eryoung2.github.io/2023/04/11/%E9%98%BF%E9%87%8C%E4%BA%91-%E8%BF%9E%E9%80%9A%E4%B8%8D%E5%90%8CVPC%E6%96%B9%E6%A1%88/</id>
    <published>2023-04-11T10:09:24.000Z</published>
    <updated>2023-04-11T16:15:56.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>阿里云不同VPC之间互通的方法，共4种，仅供参考。</p><h2 id="VPC互联"><a href="#VPC互联" class="headerlink" title="VPC互联"></a>VPC互联</h2><h3 id="云企业网-CEN"><a href="#云企业网-CEN" class="headerlink" title="云企业网(CEN)"></a>云企业网(CEN)</h3><p>在您使用云企业网进行跨VPC互联时，您需要提前做好网络规划，确保需要互通的网段没有重叠。</p><p>云企业网通过转发路由器帮助您在跨地域或同地域VPC之间搭建私网通信通道。转发路由器通过Hub-Spoke的连接方式，只需要VPC以网络连接的方式加入转发路由器，转发路由器便会自动同步路由。</p><p>转发路由器的配置复杂度比较低，同时支持丰富的路由策略及QoS机制，可以实现复杂的组网及访问控制。然而，转发路由器自身具有带宽限制，同时也会收取流量处理费等费用，使用成本高于VPC对等连接。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/11-18-22-39-%E6%88%AA%E5%B1%8F2023-04-11%2018.15.35.png"></p><h3 id="VPC对等连接-Peer-Connection"><a href="#VPC对等连接-Peer-Connection" class="headerlink" title="VPC对等连接(Peer Connection)"></a>VPC对等连接(Peer Connection)</h3><p>在您使用VPC对等连接进行跨VPC互联时，您需要提前做好网络规划，建议需要互通的CIDR地址段不要重叠。</p><p>通过VPC对等连接实现不同VPC私网互通时，由于VPC对等连接的配置方式以及点对点的路由配置，当需要互联的VPC数目增多时，相应地配置复杂度也会增大，因此不适合大量VPC全连通的场景。然而，VPC对等连接具备无带宽限制、延迟低、同地域不收费等优点。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/11-18-22-45-%E6%88%AA%E5%B1%8F2023-04-11%2018.15.46.png"></p><h3 id="私网连接"><a href="#私网连接" class="headerlink" title="私网连接"></a>私网连接</h3><p>私网连接能够将终端节点所在的VPC与终端节点服务所在VPC通过终端节点连接，建立安全稳定的私有连接，配置灵活，可满足不同的应用场景。私网连接不支持跨地域连接，只支持同可用区互联。</p><p>使用私网连接实现VPC互通时，需要互通的终端节点所在VPC与终端节点服务所在VPC的网段可以重叠且互不影响。</p><p>通过私网连接实现不同VPC互通时，无需考虑地址冲突和路由配置，网络配置简单。且私网连接本身提供了较强的网络隔离和访问控制能力，安全可控。但私网连接仅支持单向访问，即只允许特定方向的连接请求。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/11-18-22-50-%E6%88%AA%E5%B1%8F2023-04-11%2018.15.56.png"></p><h3 id="VPN网关"><a href="#VPN网关" class="headerlink" title="VPN网关"></a>VPN网关</h3><p>在您使用VPN网关进行跨VPC互联时，您需要提前做好网络规划，确保需要互通的网段没有重叠。</p><p>通过VPN网关实现不同VPC私网互通时，由于需要创建VPN网关、用户网关和IPSec连接，还需要为VPN网关配置路由，因此配置复杂度高，不适合大量VPC连通的场景。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/04/11-18-22-57-%E6%88%AA%E5%B1%8F2023-04-11%2018.16.04.png"></p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><table><thead><tr><th>对比项</th><th>VPC对等连接</th><th>转发路由器</th><th>私网连接</th><th>VPN网关</th></tr></thead><tbody><tr><td>连接方式</td><td>Full Mesh全连接方式，VPC两两之间建立对等连接。</td><td>Hub-Spoke连接方式，VPC以网络连接方式加入转发路由器。</td><td>基于业务网元的连接，类似于物理网络中负载均衡、防火墙等设备的连接。</td><td>VPC两两之间通过VPN建立连接。</td></tr><tr><td>路由传播</td><td>不支持</td><td>支持</td><td>不支持</td><td>支持</td></tr><tr><td>带宽限制</td><td>带宽无限制</td><td>受限于转发路由器的处理能力。</td><td>受限于终端节点服务侧的带宽。</td><td>受限于VPN网关的ECS实例，最高支持1 Gbps。</td></tr><tr><td>配置复杂度</td><td>复杂度高，需要两两建立对等关系并相互配置对端路由。</td><td>复杂度低，VPC只需要加入转发路由器并配置路由指向转发路由器的网络连接即可。</td><td>复杂度低，私网连接无需考虑地址冲突和路由配置，网络配置简单。</td><td>配置复杂度高，需要创建VPN网关、用户网关和IPSec连接，并为VPN网关配置路由。</td></tr><tr><td>支持互联VPC数目</td><td>最多支持20个</td><td>最多支持200个</td><td>无限制，超出配额可申请提升。</td><td>最多支持10个</td></tr><tr><td>延迟</td><td>延迟低</td><td>由于流量经过转发路由器，会增加额外一跳的延迟。</td><td>延迟低，私网连接只支持同可用区互联。</td><td>延迟高，跨地域需要经过公网转发。</td></tr><tr><td>收费</td><td>同地域不收费，跨地域统一由云数据传输CDT（Cloud DataTransfer）收取出方向流量传输费。更多信息，请参见<a href="https://help.aliyun.com/document_detail/328643.htm#topic-2127154">什么是云数据传输</a>。</td><td>同地域收取连接费、流量处理费，跨地域收取带宽包实例费、连接费和流量处理费。更多信息，请参见<a href="https://help.aliyun.com/document_detail/189836.htm#concept-1985505">计费说明</a>。</td><td>私网连接开通时不产生费用。开通成功后，根据私网连接服务的实际使用量进行计费，按每小时出账。费用包含实例费和流量处理费。更多信息，请参见<a href="https://help.aliyun.com/document_detail/198081.htm#concept-2021702">计费说明</a>。</td><td>收取IPsec-VPN实例费、带宽费。更多信息，请参见 <a href="https://help.aliyun.com/document_detail/64984.htm#concept-c2z-svx-wdb">计费说明</a>。</td></tr></tbody></table><h2 id="所有VPC互联方案配置总结"><a href="#所有VPC互联方案配置总结" class="headerlink" title="所有VPC互联方案配置总结"></a>所有VPC互联方案配置总结</h2><table><thead><tr><th>方案分类</th><th>配置方法</th></tr></thead><tbody><tr><td>云企业网</td><td>- 同地域VPC互通<a href="https://help.aliyun.com/document_detail/208591.htm#task-2047481">使用云企业网实现同地域云上云下网络互通（企业版）</a><br>- 跨地域VPC互通<br>  - <a href="https://help.aliyun.com/document_detail/404839.htm#task-2293645">使用云企业网实现跨地域跨账号VPC互通（企业版）</a><br>  - <a href="https://help.aliyun.com/document_detail/65901.htm#task-2293645">使用云企业网实现跨地域跨账号VPC互通（基础版）</a></td></tr><tr><td>VPC对等连接</td><td>- <a href="https://help.aliyun.com/document_detail/418508.htm#task-2198119">创建和管理VPC对等连接</a><br>- <a href="https://help.aliyun.com/document_detail/450505.htm#task-2225667">VPC对等连接使用示例</a></td></tr><tr><td>私网连接</td><td>- 同账号VPC互通<br>  - <a href="https://help.aliyun.com/document_detail/174058.htm#task-1512598">私网连接支持将CLB作为服务资源</a><br>  - <a href="https://help.aliyun.com/document_detail/425746.htm#task-2206671">私网连接支持将ALB作为服务资源</a><br>- 跨账号VPC互通<a href="https://help.aliyun.com/document_detail/174059.htm#task-1512598">跨账号VPC间的私网访问服务</a></td></tr><tr><td>VPN网关</td><td><a href="https://help.aliyun.com/document_detail/65073.htm?spm=a2c4g.97766.0.0.10e57571NTnyta#concept-c4h-slz-wdb">建立VPC到VPC的连接</a></td></tr></tbody></table><h2 id="文档来源"><a href="#文档来源" class="headerlink" title="文档来源"></a>文档来源</h2><p><a href="https://help.aliyun.com/document_detail/97766.html">云企业网和VPN网关连接不同VPC的优势和方法_专有网络VPC-阿里云帮助中心</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;阿里云不同VPC之间互通的方法，共4种，仅供参考。&lt;/p&gt;
&lt;h2 id=&quot;VPC互联&quot;&gt;&lt;a href=&quot;#VPC互联&quot; class=&quot;h</summary>
      
    
    
    
    <category term="文档" scheme="http://eryoung2.github.io/categories/%E6%96%87%E6%A1%A3/"/>
    
    
    <category term="阿里云" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>各云厂商常见服务对比</title>
    <link href="http://eryoung2.github.io/2023/04/07/%E5%90%84%E4%BA%91%E5%8E%82%E5%95%86%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1%E5%AF%B9%E6%AF%94/"/>
    <id>http://eryoung2.github.io/2023/04/07/%E5%90%84%E4%BA%91%E5%8E%82%E5%95%86%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1%E5%AF%B9%E6%AF%94/</id>
    <published>2023-04-06T18:14:50.000Z</published>
    <updated>2023-04-06T18:19:00.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><table><thead><tr><th></th><th>AWS</th><th>AZure</th><th>GCP</th><th>阿里云</th></tr></thead><tbody><tr><td>服务器</td><td>EC2</td><td>VM</td><td>Compute Engine</td><td>ECS</td></tr><tr><td>对象存储</td><td>S3</td><td>AZure Blob Storage</td><td>Cloud Storage</td><td>OSS</td></tr><tr><td>网络</td><td>VPC</td><td>AZure Virtual Network</td><td>VPC</td><td>VPC</td></tr><tr><td>镜像服务</td><td>ECS</td><td>AZure Container Registry</td><td>Container Registry</td><td>ACR</td></tr><tr><td>容器服务(K8S)</td><td>EKS</td><td>AKS</td><td>GKE</td><td>ACK</td></tr><tr><td>容器服务(Serverless)</td><td>Lambda</td><td>AZure functions</td><td>KNative</td><td>ASK</td></tr><tr><td>队列</td><td>SQS</td><td>AZure Queue</td><td>Cloud Pub&#x2F;Sub</td><td>MNS</td></tr><tr><td>…</td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>服务太多了，仅仅列举最常见的几项。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;AWS&lt;/th&gt;
&lt;th&gt;AZure&lt;/th&gt;
&lt;th&gt;GCP&lt;/th&gt;
&lt;</summary>
      
    
    
    
    <category term="云服务" scheme="http://eryoung2.github.io/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="AWS" scheme="http://eryoung2.github.io/tags/AWS/"/>
    
    <category term="AZure" scheme="http://eryoung2.github.io/tags/AZure/"/>
    
    <category term="GCP" scheme="http://eryoung2.github.io/tags/GCP/"/>
    
    <category term="阿里云" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>AWS IAM介绍</title>
    <link href="http://eryoung2.github.io/2023/04/04/AWS-IAM%E4%BB%8B%E7%BB%8D/"/>
    <id>http://eryoung2.github.io/2023/04/04/AWS-IAM%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-04-04T06:13:53.000Z</published>
    <updated>2023-04-08T15:40:07.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>AWS是世界上最大的云服务提供商，它提供了很多组件供消费者使用，其中进行访问控制的组件叫做IAM(Identity and Access Management)， 用来进行身份验证和对AWS资源的访问控制。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>IAM的功能总结来看，主要分两种：</p><ul><li><p>验证身份(Authentication)</p></li><li><p>授权访问(Authorization)</p></li></ul><h3 id="验证身份"><a href="#验证身份" class="headerlink" title="验证身份"></a>验证身份</h3><p>验证身份的主要目的就是验证你的身份。</p><p>主要的身份实体有3种：</p><ul><li><p>用户(user)，实体创建的用户，与用户组的关系为多对多 </p></li><li><p>用户组(group)，根据一定规则分类的抽象集合，与用户的关系为多对多</p></li><li><p>角色(role)，其余AWS资源，例如EC2实例、Lambda函数等</p></li></ul><p>对于用户来说，我们在控制台看到的是一个用户名，实际上在后台，它是一串资源字符串：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arn:aws:iam::account-ID-without-hyphens:user/User-name</span><br></pre></td></tr></table></figure><p>确认方式有以下几种：</p><ol><li><p>AWS管理控制台，使用username&#x2F;password方式进行认证</p></li><li><p>AWS命令行工具，使用Access Key&#x2F;Secret Key进行认证</p></li><li><p>AWS产品开发包(SDK)，使用Access Key&#x2F;Secret Key进行认证</p></li><li><p>Restful API，使用Access Key&#x2F;Secret Key进行认证</p></li></ol><h3 id="设定权限"><a href="#设定权限" class="headerlink" title="设定权限"></a>设定权限</h3><p>对于AWS来说，这部分是通过Policy来实现的。</p><p>Policy规定了被认证的实体可以访问什么权限，怎样访问权限的问题，主要由Statement来完成。而Statement是使用json格式来填写的。</p><p>针对不同的层级，我们将Policy分为两种：</p><ol><li><p>针对已认证用户的层级，我们称为“Identified-Based Policy”</p></li><li><p>针对资源层级，我们称为“Resource-Based Policy”</p></li></ol><p>Statement的写法如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s3:ListAllMyBuckets&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;s3:ListBucket&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;s3:GetBucketLocation&quot;</span></span><br><span class="line">       <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:s3:::productionapp&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;s3:GetObject&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;s3:PutObject&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;s3:DeleteObject&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:s3:::productionapp/*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="Identified-Based-Policy"><a href="#Identified-Based-Policy" class="headerlink" title="Identified-Based Policy"></a>Identified-Based Policy</h4><p>这里的Policy是针对被验证过用户的层级(此处的用户包含我上面讲的User、Group、Role)。</p><p>Policy和Statement是一对多的关系，也就是说，一个Policy可以包含多个Statement。</p><p>而Statement又包含以下内容：</p><ol><li><p>Effect，决定你能不能访问(Allow&#x2F;Deny)</p></li><li><p>Action，允许你对服务做什么动作</p></li><li><p>Resource，指明这次的Statement是对哪个资源做动作</p></li></ol><h4 id="Resource-Based-Policy"><a href="#Resource-Based-Policy" class="headerlink" title="Resource-Based Policy"></a>Resource-Based Policy</h4><p>这里的Policy是针对资源本身的层级。</p><p>Policy和Statement是一对多的关系，也就是说，一个Policy可以包含多个Statement。</p><p>而Statement又包含以下内容：</p><ol><li><p>Effect，决定你能不能访问(Allow&#x2F;Deny)</p></li><li><p>Action，允许你对服务做什么动作</p></li><li><p>Resource，指明这次的Statement是对哪个资源做动作，由于是针对自己的，所以要加上self</p></li><li><p>Principle，将自己的资源套用给谁</p></li></ol><h4 id="Identified-Based-Policy和Resource-Based-Policy的区别"><a href="#Identified-Based-Policy和Resource-Based-Policy的区别" class="headerlink" title="Identified-Based Policy和Resource-Based Policy的区别"></a>Identified-Based Policy和Resource-Based Policy的区别</h4><ol><li><p>Identified-Based Policy是Policy层级的，而Resource-Based Policy是Statement层级的，Identified-Based Policy比Resource-Based Policy高了一级</p></li><li><p>Identified-Based Policy是从用户角度来看待权限管理的，而Resource-Based Policy是从资源角度来看待权限管理的。</p></li></ol><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li><p>IAM是用来做什么的</p></li><li><p>用户、用户组、角色的介绍</p></li><li><p>Policy的介绍，Identified-Based Policy和Resource-Based Policy的介绍和对比</p></li></ol><h2 id="参考与鸣谢"><a href="#参考与鸣谢" class="headerlink" title="参考与鸣谢"></a>参考与鸣谢</h2><p><a href="https://docs.aws.amazon.com/iam/?icmpid=docs_homepage_security">官网 IAM</a></p><p><a href="https://www.youtube.com/watch?v=z9G5D4qtSGM&list=PLyjJWgSaJFYAn0smbg9fiLNuB_ni30RxO&index=1">01 IAM 是做什么的？ - YouTube</a></p><p><a href="https://www.youtube.com/watch?v=NBi66VNHW18">圖解AWS教學 - IAM - 整體架構 入門介紹 - YouTube</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;AWS是世界上最大的云服务提供商，它提供了很多组件供消费者使用，其中进行访问控制的组件叫做IAM(Identity and Access M</summary>
      
    
    
    
    <category term="云服务" scheme="http://eryoung2.github.io/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="AWS" scheme="http://eryoung2.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>Sailing</title>
    <link href="http://eryoung2.github.io/2023/03/24/Sailing/"/>
    <id>http://eryoung2.github.io/2023/03/24/Sailing/</id>
    <published>2023-03-23T16:01:53.000Z</published>
    <updated>2023-03-23T18:04:33.498Z</updated>
    
    <content type="html"><![CDATA[<p>I am sailing, I am sailing, home again, cross the sea.</p><p>I am sailing, stormy waters, to be near you, to be free.</p><p>I am flying, I am flying, like a bird, cross the sky.</p><p>I am flying, passing high clouds, to be with you, to be free.</p><p>    </p><p>Can you hear me, can you hear me?</p><p>Through the dark night, far away.</p><p>I am dying, forever crying. to be with you, who can say?</p><p>    </p><p>Can you hear me, can you hear me?</p><p>Through the dark night, far away.</p><p>I am dying, forever crying. to be with you, who can say?</p><p>We are sailing, we are sailing, home again, cross the sea.</p><p>We are sailing, stormy waters, to be near you, to be free.</p><p>Oh lord, to be near you, to be free. </p><p>Oh lord, to be near you, to be free.</p><p>Oh lord, to be near you, to be free.</p><p>Oh lord！ </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;I am sailing, I am sailing, home again, cross the sea.&lt;/p&gt;
&lt;p&gt;I am sailing, stormy waters, to be near you, to be free.&lt;/p&gt;
&lt;p&gt;I am flying</summary>
      
    
    
    
    <category term="歌词" scheme="http://eryoung2.github.io/categories/%E6%AD%8C%E8%AF%8D/"/>
    
    
    <category term="Classic" scheme="http://eryoung2.github.io/tags/Classic/"/>
    
  </entry>
  
  <entry>
    <title>Mac连接Win的方法</title>
    <link href="http://eryoung2.github.io/2023/03/22/Mac%E8%BF%9E%E6%8E%A5Win%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://eryoung2.github.io/2023/03/22/Mac%E8%BF%9E%E6%8E%A5Win%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2023-03-22T14:43:50.000Z</published>
    <updated>2023-03-22T15:13:43.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们都知道，Mac和Win还是非常不一样的，作为Macdows双修选手，我今天给大家介绍一些从Mac连接Win的方法。</p><h2 id="Win的RDP"><a href="#Win的RDP" class="headerlink" title="Win的RDP"></a>Win的RDP</h2><p>由于Win默认未安装ssh，我们最常使用的连接方式则是使用RDP(Remote Desktop Protocol)，其在windows上开启的方法为：</p><p>右键文件管理器-属性-远程桌面，点击开启。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/22-22-51-08-WX20230322-225022%402x.png"></p><p>这时Windows的3389端口启用，我们可以通过RDP协议进行连接。</p><h2 id="Mac连接Win"><a href="#Mac连接Win" class="headerlink" title="Mac连接Win"></a>Mac连接Win</h2><h3 id="不要用Mac平台的软件"><a href="#不要用Mac平台的软件" class="headerlink" title="不要用Mac平台的软件"></a>不要用Mac平台的软件</h3><p>由于Mac系统的封闭性，能使用的软件本来就少，还特娘的要钱，就不好用，就坑得要死。</p><p>因此我并不建议大家使用Mac平台的工具进行连接，很蠢。</p><p>尤其是这个，绝壁大蠢货。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/22-22-54-42-WX20230322-225402%402x.png"></p><h3 id="可以曲线救国使用虚拟机来连接"><a href="#可以曲线救国使用虚拟机来连接" class="headerlink" title="可以曲线救国使用虚拟机来连接"></a>可以曲线救国使用虚拟机来连接</h3><p>还是由于Mac系统的封闭性，我们通常需要扩展虚拟机来实现更多的功能。通常的虚拟机就两种，Linux和Windows。Linux有很多发行版，比如Centos、Ubuntu、Debian等；Windows的话，如果你是ARM架构，目前能用的也就是Win11 on Arm。</p><h3 id="哪个系统好用捏？"><a href="#哪个系统好用捏？" class="headerlink" title="哪个系统好用捏？"></a>哪个系统好用捏？</h3><p>我猜，能看到我文章的各位彦祖冰冰们，你们都是贼厉害的那种。</p><h3 id="如果你用Windows"><a href="#如果你用Windows" class="headerlink" title="如果你用Windows"></a>如果你用Windows</h3><p>如果你用Windows的话，需要注意Win11 on ARM非常吃内存，一般能用到6G左右。而且毕竟是ARM架构的，使用起来总是有种阉割版的感觉。我个人不推荐ARM架构安装Windows虚拟机，或者你装了，偶尔开一下，不能做主力机用。</p><p>对于Windows连接Windows，各位应该很熟悉，使用mstsc就可以。但是我发现ARM架构的Windows，mstsc应该是被阉割过的，用起来不如X86架构用起来丝滑。</p><h3 id="如果你用Linux"><a href="#如果你用Linux" class="headerlink" title="如果你用Linux"></a>如果你用Linux</h3><p>对于Linux各发行版，我个人觉得Ubuntu的图形界面比较好康，而且CentOS 7有点老了，CentOS 8没几个人用，所以优先使用Ubuntu。我当时用PD装的时候，默认给了22.04版本。</p><p>在Ubuntu中，有一个很强的工具：<strong>Remmina</strong>，肥肠强！</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/22-23-05-38-WX20230322-230523%402x.png"></p><h3 id="Remmina"><a href="#Remmina" class="headerlink" title="Remmina"></a>Remmina</h3><p>打开Remmina后，可添加RDP或者VNC来连接其他服务器。比如本文中的连接Win，就添加RDP来做配置。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/22-23-08-40-WX20230322-230826%402x.png"></p><p>填好信息之后，保存，连接即可。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li><p>Mac平台的连接软件都十分辣鸡</p></li><li><p>Win11 on ARM十分鸡肋，mstsc更是被阉割过的</p></li><li><p>Ubuntu 22.04的Remmina十分给力！！！</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们都知道，Mac和Win还是非常不一样的，作为Macdows双修选手，我今天给大家介绍一些从Mac连接Win的方法。&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="操作系统" scheme="http://eryoung2.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Mac" scheme="http://eryoung2.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>python if __name == __main__的详解</title>
    <link href="http://eryoung2.github.io/2023/03/20/python-if-name-main-%E7%9A%84%E8%AF%A6%E8%A7%A3/"/>
    <id>http://eryoung2.github.io/2023/03/20/python-if-name-main-%E7%9A%84%E8%AF%A6%E8%A7%A3/</id>
    <published>2023-03-20T08:55:47.000Z</published>
    <updated>2023-03-20T10:03:03.795Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于python来说，我们经常会见到一行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    balabala</span><br></pre></td></tr></table></figure><p>那这句话是啥意思呢？</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先要明白__name__是python当中的一个属性，代表现在主模块的引用。</p><p>如果调用的是本模块(python文件相当于模块)，那么默认的name就是_main__了。如果不是的话，name就会设置为引用模块的名称。</p><p>例如我有两个py文件，cal.py和hello.py，其中hello.py会引用cal.py。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cal.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">return_max</span>(<span class="params">num1, num2</span>):</span><br><span class="line">    <span class="keyword">if</span> num1 &gt;= num2:</span><br><span class="line">        <span class="keyword">return</span> num1</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> num2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num = return_max(<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(num)</span><br><span class="line"><span class="built_in">print</span>(__name__) <span class="comment">#显示为__main__</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#hello.py</span></span><br><span class="line"><span class="keyword">import</span> cal</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cal.__name__) <span class="comment">#显示为cal</span></span><br></pre></td></tr></table></figure><p>按照上面的说法，这时如果我们运行hello.py, 跑出来的就不是hello.py的内容而是cal.py内容了。</p><p>而如果我加了这行判断，就不会出现这个问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个概念对于python是非常重要的，主要是为了防止引用混乱的问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;对于python来说，我们经常会见到一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    <category term="编程语言" scheme="http://eryoung2.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="python" scheme="http://eryoung2.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Mac mini使用iphone摄像头</title>
    <link href="http://eryoung2.github.io/2023/03/19/Mac-mini%E4%BD%BF%E7%94%A8iphone%E6%91%84%E5%83%8F%E5%A4%B4/"/>
    <id>http://eryoung2.github.io/2023/03/19/Mac-mini%E4%BD%BF%E7%94%A8iphone%E6%91%84%E5%83%8F%E5%A4%B4/</id>
    <published>2023-03-19T12:21:46.000Z</published>
    <updated>2023-03-19T12:28:41.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间我将自己的Mac换成了M1芯片的Mac Mini，由于是个裸机，除了主机啥也没有，所以我都是需要自己diy配件的。键盘鼠标音响耳机啥的都好说，但是摄像头捏？</p><h2 id="正言"><a href="#正言" class="headerlink" title="正言"></a>正言</h2><p>之前就看到苹果的MacOS 13推出了一个功能，可以使用自己的iphone做为外置摄像头。</p><p>我试了很多次，姿势都不对，就很困惑。</p><p>后来查阅了很多资料之后，发现要满足以下条件：</p><ol><li><p>电脑和手机使用同一个apple id</p></li><li><p>手机开启接力功能</p></li><li><p>手机锁屏横放，后置摄像头对着自己（重要）</p></li><li><p>调整合理角度，打开相关软件即可使用</p></li></ol><p>已测试过的软件有：Facetime、Photo Booth、QuickTime Player、微信，配置正确且姿势合适即可调出摄像头使用。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>手机成像效果好于Mac摄像头，如果能持续使用的话都是不错的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前段时间我将自己的Mac换成了M1芯片的Mac Mini，由于是个裸机，除了主机啥也没有，所以我都是需要自己diy配件的。键盘鼠标音响耳机啥</summary>
      
    
    
    
    <category term="操作系统" scheme="http://eryoung2.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Mac" scheme="http://eryoung2.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - 应用案例</title>
    <link href="http://eryoung2.github.io/2023/03/18/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/"/>
    <id>http://eryoung2.github.io/2023/03/18/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</id>
    <published>2023-03-18T05:59:56.000Z</published>
    <updated>2023-03-18T06:49:45.843Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集群规划构建"><a href="#集群规划构建" class="headerlink" title="集群规划构建"></a>集群规划构建</h2><h3 id="容器部署中的ECS选型"><a href="#容器部署中的ECS选型" class="headerlink" title="容器部署中的ECS选型"></a>容器部署中的ECS选型</h3><ul><li>在创建Kubernetes实例时，物理部署实体的选型对上层应用的性能起着非常大的影响。通过大型客户在云容器部署实践的统计，很大一部分应用在容器部署中都没有采用正确的部署方式。</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-11-13-%E6%88%AA%E5%B1%8F2023-03-18%2014.11.05.png"></p><h3 id="容器集群的高可靠配置"><a href="#容器集群的高可靠配置" class="headerlink" title="容器集群的高可靠配置"></a>容器集群的高可靠配置</h3><ul><li><p>在容器集群部署规划中，除了ECS选型之外，哎呦很多配置方式会直接影响集群的可靠性，可总结为以下5点：</p><ul><li><p>消灭SPOF：SPOF单点故障是高可靠性大敌，因此尽量直接使用Pod部署</p></li><li><p>单进程容器：单进程容器便于容器内进行监控以及容器重启操作</p></li><li><p>配置探活：通过探活和重启策略的配置监控容器内进程的健康状态</p></li><li><p>资源声明：Pod的资源声明可以保证K8s对Node资源的有效分配</p></li><li><p>多可用区：通过多可用区避免物理故障</p></li></ul></li></ul><h3 id="容器节点操作系统选择"><a href="#容器节点操作系统选择" class="headerlink" title="容器节点操作系统选择"></a>容器节点操作系统选择</h3><ul><li>Alibaba Cloud Linux2是新一代阿里云Linux操作系统，为云上应用程序提供安全、稳定、高性能的定制化运行环境，并针对云基础设施进行了深度优化，并提供更好的运行时体验</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-10-32-%E6%88%AA%E5%B1%8F2023-03-18%2014.10.24.png"></p><h3 id="网络规划"><a href="#网络规划" class="headerlink" title="网络规划"></a>网络规划</h3><ul><li><p>在创建K8s集群时，根据网络插件的不同，需要指定专有网络VPC、虚拟交换机、Pod网络CIDR和Service CIDR，并做好ECS地址、K8s Pod地址和Service地址的规划工作</p></li><li><p>可选的网络插件：Flannel、Terway</p></li></ul><h3 id="集群接入服务网格ASM"><a href="#集群接入服务网格ASM" class="headerlink" title="集群接入服务网格ASM"></a>集群接入服务网格ASM</h3><ul><li>将部署容器集群中的应用接入阿里云服务网格ASM，可以简化服务的网格化治理，实现服务的可观测性，减轻开发与运维的工作负担</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-14-19-%E6%88%AA%E5%B1%8F2023-03-18%2014.14.10.png"></p><h2 id="集群核心组件配置与优化"><a href="#集群核心组件配置与优化" class="headerlink" title="集群核心组件配置与优化"></a>集群核心组件配置与优化</h2><h3 id="混合云部署K8s集群"><a href="#混合云部署K8s集群" class="headerlink" title="混合云部署K8s集群"></a>混合云部署K8s集群</h3><ul><li>对于企业客户而言，出于数据主权和安全隐私的考虑，大多会考虑使用多云混合云方式开展业务，以K8s为代表的技术屏蔽了基础设施的差异性，推动了以应用多云混合云新架构的到来</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-16-16-%E6%88%AA%E5%B1%8F2023-03-18%2014.16.09.png"></p><h3 id="使用Terraform创建K8s集群"><a href="#使用Terraform创建K8s集群" class="headerlink" title="使用Terraform创建K8s集群"></a>使用Terraform创建K8s集群</h3><ul><li>Terraform是HashiCorp公司提供的一种开源工具，用于安全高效地预览、配置、管理云基础架构和资源，帮助开发者自动化地创建、更新阿里云基础设施资源，并进行版本管理</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-17-55-%E6%88%AA%E5%B1%8F2023-03-18%2014.17.48.png"></p><h3 id="Kubernetes对接ECI"><a href="#Kubernetes对接ECI" class="headerlink" title="Kubernetes对接ECI"></a>Kubernetes对接ECI</h3><ul><li><p>ECI为K8s提供一种层次化的解决方案，即ECI负责底层Pod容器资源的调度和管理工作，K8s在ECI之上作为PaaS层来管理Deployment、Service、StatefulSet、CronJob等业务负载</p></li><li><p>ECI克承载ACK集群或者ASK集群</p></li><li><p>混合使用ECI和传统服务器</p></li></ul><h3 id="容器集群的高弹性架构实现"><a href="#容器集群的高弹性架构实现" class="headerlink" title="容器集群的高弹性架构实现"></a>容器集群的高弹性架构实现</h3><ul><li><p>对于有波峰波谷的在线业务，或者机器学习、基因测序等对实时性要求不高、但是对成本敏感的应用，可以通过容器高弹性架构，全自动实现动态创建或释放实例，达到成本的最优控制</p></li><li><p>ECI方式高弹性架构：适用于秒杀、爬虫等短期高峰值应用场景</p></li><li><p>使用ECS+ECI混合部署方式，保持互通</p></li></ul><h3 id="Ingress最佳实践"><a href="#Ingress最佳实践" class="headerlink" title="Ingress最佳实践"></a>Ingress最佳实践</h3><ul><li>在K8s集群中，Ingress是授权入站连接到达集群服务的规则几何，可以提供七层负载均衡能力，通过Ingress可以实现滚动升级、分批暂停发布、蓝绿发布以及灰度发布等发布方式。以及不同集群之间的流量复制。作为集群流量接入层，Ingress的高可靠显得尤为重要</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-23-52-%E6%88%AA%E5%B1%8F2023-03-18%2014.23.28.png"></p><h3 id="CoreDNS"><a href="#CoreDNS" class="headerlink" title="CoreDNS"></a>CoreDNS</h3><ul><li>容器集群中部署了CoreDNS作为内部DNS服务器，在集群中推荐使用Service名作为服务的访问地址，通过CoreDNS服务可以实现从Service到Service的ip地址的解析。同时Serverless集群中支持PrivateZone进行域名解析服务发现</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-25-38-%E6%88%AA%E5%B1%8F2023-03-18%2014.25.31.png"></p><h2 id="使用案例-聚石塔"><a href="#使用案例-聚石塔" class="headerlink" title="使用案例 - 聚石塔"></a>使用案例 - 聚石塔</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h4 id="聚石塔业务背景介绍"><a href="#聚石塔业务背景介绍" class="headerlink" title="聚石塔业务背景介绍"></a>聚石塔业务背景介绍</h4><ul><li>聚石塔最早上线于2012年，是阿里集团帮助商家打造的开放电商云工作平台。它汇聚包括淘宝、天猫、阿里云等整个平台资源和资源优势，同时依托于聚石塔，各种业务类型的服务商商家提供了如ERP、CRM、WMS等业务服务</li></ul><h4 id="聚石塔的业务痛点"><a href="#聚石塔的业务痛点" class="headerlink" title="聚石塔的业务痛点"></a>聚石塔的业务痛点</h4><ul><li><p>聚石塔的业务大致分为两部分：</p><ul><li><p>电商订单服务连路上的系统如ERP、CRM、WMS</p></li><li><p>电商行业中直接面向客户的小程序场景，如手淘与千牛的小程序</p></li></ul></li></ul><p>其业务痛点如下:</p><ul><li><p>标准化和稳定性问题</p></li><li><p>突发流量下的弹性问题</p></li><li><p>效率和成本问题</p></li></ul><h4 id="聚石塔技术特点-应用和发布标准化"><a href="#聚石塔技术特点-应用和发布标准化" class="headerlink" title="聚石塔技术特点 - 应用和发布标准化"></a>聚石塔技术特点 - 应用和发布标准化</h4><ul><li>K8s自带的滚动发布，虽然标准化了发布环节，但在发布期间无法暂停，即使服务起来了，可能功能和业务存在的问题，最终也会随着滚动不断扩大影响面；对此，聚石塔设计了支持暂停的分批发布，通过提前批的“金丝雀”发布，从而提升系统的稳定性</li></ul><h4 id="聚石塔技术特点-丰富的弹性扩容"><a href="#聚石塔技术特点-丰富的弹性扩容" class="headerlink" title="聚石塔技术特点 - 丰富的弹性扩容"></a>聚石塔技术特点 - 丰富的弹性扩容</h4><ul><li>对于电商等零流量波动较大的场景，用户一般会把集群资源维持在日常流量的规模，并在流量高峰再来林倩进行集群资源的扩容。ECI的价格与同等规格的ECS相近，且为按秒付费，秒级扩容</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-33-11-%E6%88%AA%E5%B1%8F2023-03-18%2014.33.02.png"></p><h4 id="聚石塔技术特点-应用监控"><a href="#聚石塔技术特点-应用监控" class="headerlink" title="聚石塔技术特点 - 应用监控"></a>聚石塔技术特点 - 应用监控</h4><ul><li>与传统应用相比，基于K8s容器实例是动态调度的、生命周期短，Deployment、Service等容器上层抽象组件更是难以监控的，此外还需要底层ECS计算资源、实例生命周期、K8s集群自身以及集群核心组件的各个维度的监控</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-35-08-%E6%88%AA%E5%B1%8F2023-03-18%2014.35.00.png"></p><h4 id="聚石塔技术特点-DNS生产环境优化"><a href="#聚石塔技术特点-DNS生产环境优化" class="headerlink" title="聚石塔技术特点 - DNS生产环境优化"></a>聚石塔技术特点 - DNS生产环境优化</h4><ul><li><p>聚石塔的用户大多是电商或小程序的场景，开发语言多样化，有些语言没有很好的连接池，导致DNS解析频繁。K8s默认的CoreDNS在高并发时会遇到性能瓶颈，因此聚石塔对DNS的性能做了深入的优化，优化的手段主要有两种，分别是Node Local DNS和SideCar DNS</p></li><li><p>Node Local DNS：通过DaemonSet方式在每个节点上运行一个DNS的Pod，设置相应转发规则，最大可能避免跨节点解析</p></li><li><p>SideCar DNS：在业务Pod中添加DNS解析服务容器，可当做DNS缓存，且只为当前Pod进行服务，做到资源隔离</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/18-14-44-50-%E6%88%AA%E5%B1%8F2023-03-18%2014.44.42.png"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>集群规划构建</p></li><li><p>集群核心组件配置及优化</p></li><li><p>使用案例介绍 - 聚石塔平台</p></li></ul><h2 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h2><p>ACP云原生容器工程师相关介绍自此完结，可以说这个证书相比云计算要困难一些，里边涉及到了大量云原生和K8s的内容，对于初学者并不友好，决定考取这个证书的同学也较少，但是我相信随着技术的不断发展、岗位不断内卷的大环境之下，这个与K8s高度相关的认证会有越来越多的人进行考取。</p><p>我这里也只是将自己的笔记整理之后进行的重新发布，如果对将来立志于此的同学们有些许帮助的话，那真是我莫大的荣幸！</p><p>以上，完结！</p><p>各位兄弟江湖再见~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集群规划构建&quot;&gt;&lt;a href=&quot;#集群规划构建&quot; class=&quot;headerlink&quot; title=&quot;集群规划构建&quot;&gt;&lt;/a&gt;集群规划构建&lt;/h2&gt;&lt;h3 id=&quot;容器部署中的ECS选型&quot;&gt;&lt;a href=&quot;#容器部署中的ECS选型&quot; class=&quot;header</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ACK@Edge边缘容器</title>
    <link href="http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK-Edge%E8%BE%B9%E7%BC%98%E5%AE%B9%E5%99%A8/"/>
    <id>http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK-Edge%E8%BE%B9%E7%BC%98%E5%AE%B9%E5%99%A8/</id>
    <published>2023-03-17T13:27:23.000Z</published>
    <updated>2023-03-17T14:04:52.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="边缘计算概述"><a href="#边缘计算概述" class="headerlink" title="边缘计算概述"></a>边缘计算概述</h2><ul><li><p>核心概念</p><ul><li><p>分布式架构</p></li><li><p>靠近物或数据源头的一侧</p></li><li><p>就近提供服务</p></li><li><p>计算、存储、网络一体化平台</p></li></ul></li><li><p>技术特性</p><ul><li><p>临近性、低时延、高带宽</p></li><li><p>分布式、位置认知、数据入口</p></li></ul></li><li><p>服务特点</p><ul><li><p>本地化、自组织</p></li><li><p>可定义、可调度</p></li><li><p>标准开放、安全</p></li></ul></li><li><p>计算在边缘终端，仅将计算结果送至中心处</p></li><li><p>适用于实时服务、安全与隐私保护等场景</p></li></ul><h2 id="边缘计算-应用"><a href="#边缘计算-应用" class="headerlink" title="边缘计算 - 应用"></a>边缘计算 - 应用</h2><ul><li><p>应用场景</p><ul><li><p>技术场景</p><ul><li><p>5G、物联网、工业物联网</p></li><li><p>人工智能、AR&#x2F;VR、云边协同</p></li></ul></li><li><p>业务场景</p><ul><li><p>智能制造</p></li><li><p>智慧城市</p></li><li><p>互动直播</p></li><li><p>车联网</p></li></ul></li><li><p>发展趋势</p><ul><li><p>超过500亿的终端设备联网</p></li><li><p>超过40%数据在边缘侧计算</p></li><li><p>超过90%的企业在边缘部署应用</p></li><li><p>时长规模预计到2025年超157亿美元</p></li></ul></li></ul></li></ul><h2 id="边缘计算-与云原生的融合"><a href="#边缘计算-与云原生的融合" class="headerlink" title="边缘计算 - 与云原生的融合"></a>边缘计算 - 与云原生的融合</h2><ul><li><p>边缘计算 + 云原生</p><ul><li><p>以Kubernetes为容器应用编排的标准</p></li><li><p>在任何基础设施上提供和云上一致的功能和体验</p></li><li><p>元-边-端一体化的应用分发</p></li><li><p>大规模应用交付、运维、管控的诉求</p></li><li><p>安全的工作负载运行环境</p></li><li><p>边缘服务治理</p></li><li><p>网络自恢复能力和兼容性</p></li><li><p>异构资源融合</p></li></ul></li><li><p>边缘容器</p><ul><li><p>原生Kubernetes容器服务能力</p></li><li><p>Serverless边缘容器服务</p></li><li><p>混合云场景</p></li></ul></li></ul><h2 id="阿里云边缘容器服务详细介绍"><a href="#阿里云边缘容器服务详细介绍" class="headerlink" title="阿里云边缘容器服务详细介绍"></a>阿里云边缘容器服务详细介绍</h2><h3 id="产品简介"><a href="#产品简介" class="headerlink" title="产品简介"></a>产品简介</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-21-51-28-%E6%88%AA%E5%B1%8F2023-03-17%2021.50.58.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-21-51-38-%E6%88%AA%E5%B1%8F2023-03-17%2021.51.07.png"></p><h3 id="功能优势"><a href="#功能优势" class="headerlink" title="功能优势"></a>功能优势</h3><ul><li><p>产品功能</p><ul><li><p>边缘Kubernetes集群和应用管理</p></li><li><p>多类型、异构边缘资源纳管</p></li><li><p>EdgeUnit管理</p></li><li><p>边缘节点自治</p></li></ul></li><li><p>产品优势</p><ul><li><p>边缘异构资源接入</p></li><li><p>边缘节点自治</p></li><li><p>安全</p></li><li><p>多运行时</p></li><li><p>云管边架构</p></li></ul></li></ul><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><h4 id="ENS节点服务"><a href="#ENS节点服务" class="headerlink" title="ENS节点服务"></a>ENS节点服务</h4><ul><li><p>场景需求</p><ul><li><p>边缘节点间网络互通</p></li><li><p>异构资源共享</p></li><li><p>成本合理</p></li></ul></li><li><p>方案扩展</p><ul><li><p>边缘节点服务ENS</p><ul><li><p>基于运营商边缘节点和网络构建</p></li><li><p>用户业务下沉至运营商侧边缘</p></li><li><p>降低计算时延和成本</p></li></ul></li></ul></li><li><p>方案优势</p><ul><li><p>全域覆盖</p></li><li><p>高性价比</p></li><li><p>融合开发</p></li><li><p>安全可靠</p></li></ul></li><li><p>CDN</p></li><li><p>互动直播</p></li><li><p>在线教育</p></li><li><p>视频监控</p></li><li><p>本地IT上云</p></li></ul><h3 id="IoT"><a href="#IoT" class="headerlink" title="IoT"></a>IoT</h3><ul><li><p>场景架构：边缘智能一体机</p><ul><li><p>完整的边缘应用</p></li><li><p>资源的生命周期管理</p></li><li><p>安全运行支撑</p></li><li><p>容灾容错保障</p></li><li><p>远程运维监控与报警等能力</p></li><li><p>云端AI能力服务下沉通道</p></li></ul></li></ul><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><ul><li><p>场景需求</p><ul><li><p>网络环境</p><ul><li><p>低延时</p></li><li><p>高性能</p></li><li><p>高稳定</p></li></ul></li></ul></li><li><p>用户痛点</p><ul><li><p>自建多地IDC机房成本高</p></li><li><p>上中心云网络性能不满足需求</p></li><li><p>带宽价格昂贵</p></li></ul></li><li><p>解决方案</p><ul><li>提供低成本优质上云算力和网络</li></ul></li><li><p>场景架构：CDN资源统一管理</p><ul><li><p>海量边缘容器基础节点管理</p></li><li><p>CDN业务全生命周期管理能力</p></li><li><p>云原生API助力构建CDN领域PaaS</p></li></ul></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>边缘计算概述</p></li><li><p>边缘计算 - 应用</p></li><li><p>边缘计算 - 与云原生的融合</p></li><li><p>边缘容器详细介绍</p><ul><li><p>产品介绍</p></li><li><p>功能优势</p></li><li><p>适用场景</p><ul><li><p>ENS节点服务</p></li><li><p>IoT</p></li><li><p>CDN</p></li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;边缘计算概述&quot;&gt;&lt;a href=&quot;#边缘计算概述&quot; class=&quot;headerlink&quot; title=&quot;边缘计算概述&quot;&gt;&lt;/a&gt;边缘计算概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;核心概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;分布式架构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;靠</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ACR进阶</title>
    <link href="http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACR%E8%BF%9B%E9%98%B6/"/>
    <id>http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACR%E8%BF%9B%E9%98%B6/</id>
    <published>2023-03-17T09:18:01.000Z</published>
    <updated>2023-03-17T10:34:24.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><p>DevOps是近年来非常火的概念，是一种重视开发人员和运维人员之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加快捷、频繁和可靠。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-16-10-%E6%88%AA%E5%B1%8F2023-03-17%2018.15.41.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-16-18-%E6%88%AA%E5%B1%8F2023-03-17%2018.15.50.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-17-04-%E6%88%AA%E5%B1%8F2023-03-17%2018.16.55.png"></p><p>CD的特点：自动化、持续、有效反馈</p><p>CD的主要问题：</p><ol><li><p>环境一致性问题</p></li><li><p>版本管理问题</p></li></ol><h2 id="通过容器镜像实现DevOps"><a href="#通过容器镜像实现DevOps" class="headerlink" title="通过容器镜像实现DevOps"></a>通过容器镜像实现DevOps</h2><h3 id="阿里云容器服务"><a href="#阿里云容器服务" class="headerlink" title="阿里云容器服务"></a>阿里云容器服务</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-18-36-%E6%88%AA%E5%B1%8F2023-03-17%2018.18.27.png"></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h4 id="通过容器镜像实现DevOps-1"><a href="#通过容器镜像实现DevOps-1" class="headerlink" title="通过容器镜像实现DevOps"></a>通过容器镜像实现DevOps</h4><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-19-48-%E6%88%AA%E5%B1%8F2023-03-17%2018.19.20.png"> </p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-19-58-%E6%88%AA%E5%B1%8F2023-03-17%2018.19.26.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-20-06-%E6%88%AA%E5%B1%8F2023-03-17%2018.19.32.png"></p><h3 id="利用ACR搭建DevOps"><a href="#利用ACR搭建DevOps" class="headerlink" title="利用ACR搭建DevOps"></a>利用ACR搭建DevOps</h3><h4 id="构建镜像仓库"><a href="#构建镜像仓库" class="headerlink" title="构建镜像仓库"></a>构建镜像仓库</h4><ol><li><p>在镜像仓库页面单击创建镜像仓库</p></li><li><p>在创建镜像仓库对话框中，设置命名空间、仓库名称、摘要和仓库类型</p></li><li><p>在设置代码源对话框中，选择已绑定的代码源，然后单击闯将镜像仓库</p></li></ol><h4 id="设置构建规则"><a href="#设置构建规则" class="headerlink" title="设置构建规则"></a>设置构建规则</h4><ol><li><p>在镜像仓库页面单击目标仓库右侧操作列中的管理</p></li><li><p>安吉左侧导航栏中的构建，在构建规则设置区域的左侧单击添加规则</p></li><li><p>在添加构建规则对话框中设置构建规则，然后单击确认</p></li></ol><h4 id="构建镜像仓库-1"><a href="#构建镜像仓库-1" class="headerlink" title="构建镜像仓库"></a>构建镜像仓库</h4><ol><li><p>手工构建</p></li><li><p>自动构建</p></li></ol><h4 id="绑定容器服务触发器"><a href="#绑定容器服务触发器" class="headerlink" title="绑定容器服务触发器"></a>绑定容器服务触发器</h4><ul><li>镜像信息页面，单击左侧操作栏中的触发器，新建一个触发器，病填入触发器的名称、URL、触发方式</li></ul><h3 id="使用免密组件拉取容器镜像"><a href="#使用免密组件拉取容器镜像" class="headerlink" title="使用免密组件拉取容器镜像"></a>使用免密组件拉取容器镜像</h3><h4 id="背景信息"><a href="#背景信息" class="headerlink" title="背景信息"></a>背景信息</h4><p>免密组件通过读取ACK集群中的Kube-system命名空间中的acr-configation的配置，进行私有镜像拉取。当前支持针对私有镜像仓库使用以下三种权限之一的策略进行配置：</p><ul><li><p>使用默认的ACK Worker RAM角色权限进行拉取</p></li><li><p>使用自定义RAM角色的AccessKey ID和AccessKey Secret的权限进行拉取</p></li><li><p>通过配置RAM AssumeRole权限，使用其他用户的权限进行拉取</p></li></ul><h4 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h4><ul><li><p>容器镜像服务企业版实例和默认实例中的私有镜像</p></li><li><p>集群当前用户和其他用户容器镜像服务中的私有镜像</p></li><li><p>跨地域拉取容器镜像服务中的私有镜像</p></li></ul><h4 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h4><ul><li><p>多命名空间免密拉取</p></li><li><p>专有版Kubernetes集群</p></li><li><p>托管版Kubernetes集群</p></li></ul><h3 id="使用免密组件拉取容器镜像-1"><a href="#使用免密组件拉取容器镜像-1" class="headerlink" title="使用免密组件拉取容器镜像"></a>使用免密组件拉取容器镜像</h3><ol><li><p>升级组件</p><ol><li><p>在集群列表页面，单击目标集群操作列下的更多 - 系统组件管理</p></li><li><p>在组件列表区域中找到aliyun-acr-credential-helper，单击升级</p></li></ol></li><li><p>配置组件</p><ol><li><p>在集群信息页面左侧导航栏，选择应用配置管理 - 配置项</p></li><li><p>在配置项额面，选择命名空间：kube-system，单击创建天假新配置项，或单击目标配置项右侧编辑</p></li></ol></li></ol><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-18-31-18-%E6%88%AA%E5%B1%8F2023-03-17%2018.31.11.png"></p><ol start="3"><li><p>配置当前账号拉取权限</p><ol><li><p>在集群信息页面，单击集群资源页签，单击Worker RAM角色右侧链接</p></li><li><p>在RAM角色基本信息的权限管理页签，单击目标权限策略名称</p></li><li><p>单击修改策略内容</p></li><li><p>在策略内容区域增加以下字段后，单击确定</p></li></ol></li></ol><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>了解DevOps和Continuous Delivery的概念</p></li><li><p>了解通过容器镜像实现DevOps的原理</p></li><li><p>了解搭建容器DevOps的流程</p></li><li><p>了解如何使用免密组件拉取容器镜像</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;DevOps&quot;&gt;&lt;a href=&quot;#DevOps&quot; class=&quot;headerlink&quot; title=&quot;DevOps&quot;&gt;&lt;/a&gt;DevOps&lt;/h2&gt;&lt;p&gt;DevOps是近年来非常火的概念，是一种重视开发人员和运维人员之间沟通合作的文化、运动或惯例。透过自动化“软</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ACR概述与使用</title>
    <link href="http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACR%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACR%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2023-03-17T01:41:26.000Z</published>
    <updated>2023-03-17T02:09:08.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="容器镜像基本概念"><a href="#容器镜像基本概念" class="headerlink" title="容器镜像基本概念"></a>容器镜像基本概念</h2><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-43-07-%E6%88%AA%E5%B1%8F2023-03-17%2009.42.51.png"></p><h2 id="阿里云容器镜像产品ACR"><a href="#阿里云容器镜像产品ACR" class="headerlink" title="阿里云容器镜像产品ACR"></a>阿里云容器镜像产品ACR</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><ul><li><p>容器镜像服务（ACR）</p><ul><li><p>提供云原生资产的安全托管和全生命周期管理</p></li><li><p>支持多场景下镜像的高效分发，与容器服务ACK无缝集成，大早云原生应用一站式解决方案</p></li><li><p>与阿里云容器服务、CodePipeline深度集成，自动完成从代码提交到应用部署的DevOps完整流程</p></li></ul></li></ul><h3 id="ACR默认实例（个人版）"><a href="#ACR默认实例（个人版）" class="headerlink" title="ACR默认实例（个人版）"></a>ACR默认实例（个人版）</h3><ul><li>容器镜像服务ACR默认实例提供基础的容器镜像服务</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-46-31-%E6%88%AA%E5%B1%8F2023-03-17%2009.46.23.png"></p><h3 id="ACR企业版"><a href="#ACR企业版" class="headerlink" title="ACR企业版"></a>ACR企业版</h3><ul><li><p>使用场景</p><ul><li><p>业务全球地域部署</p></li><li><p>业务大规模部署</p></li><li><p>容器化DevSecOps提效</p></li><li><p>搬站上云</p></li></ul></li></ul><h3 id="ACR企业版和个人版对比"><a href="#ACR企业版和个人版对比" class="headerlink" title="ACR企业版和个人版对比"></a>ACR企业版和个人版对比</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-48-44-%E6%88%AA%E5%B1%8F2023-03-17%2009.48.21.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-48-53-%E6%88%AA%E5%B1%8F2023-03-17%2009.48.34.png"></p><p>主要区别在于企业版支持：</p><ul><li><p>多样OCI制品托管</p></li><li><p>加速应用分发</p></li><li><p>多维度安全保障</p></li><li><p>提效云原生应用交付</p></li></ul><h2 id="ACR产品优势和应用场景"><a href="#ACR产品优势和应用场景" class="headerlink" title="ACR产品优势和应用场景"></a>ACR产品优势和应用场景</h2><h3 id="特点总结"><a href="#特点总结" class="headerlink" title="特点总结"></a>特点总结</h3><ul><li><p>简单易用</p><ul><li><p>无需自行搭建运维，一键创建镜像仓库</p></li><li><p>支持多地域，提供稳定快速的镜像上传、下载服务</p></li></ul></li><li><p>安全可控</p><ul><li><p>完善的镜像权限管理体系，保证镜像的分享安全、团队的协作便利</p></li><li><p>提供镜像安全扫描功能，保证镜像漏洞可识别，漏洞级别可提示</p></li></ul></li><li><p>无缝集成</p><ul><li><p>整合容器服务，实现新应用镜像生成后的持续部署</p></li><li><p>整合云Code、CodePipeline，实现源代码到编译测试后，自动生成应用镜像</p></li></ul></li></ul><h3 id="全球化自动部署"><a href="#全球化自动部署" class="headerlink" title="全球化自动部署"></a>全球化自动部署</h3><ul><li>业务镜像全球化自动部署，各地都需要购买ACR企业版，才能自动更新及自动化部署</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-53-04-%E6%88%AA%E5%B1%8F2023-03-17%2009.52.57.png"></p><ul><li>DevSecOps，可阻断未通过安全监测的上传和部署</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-54-25-%E6%88%AA%E5%B1%8F2023-03-17%2009.54.17.png"></p><h2 id="创建企业版容器实例"><a href="#创建企业版容器实例" class="headerlink" title="创建企业版容器实例"></a>创建企业版容器实例</h2><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li><p>已开通容器镜像服务企业版所依赖的云产品OSS</p></li><li><p>如需查询实例的实时数据，请开通云监控</p></li><li><p>如需通过VPC访问实例，请开通VPC</p></li><li><p>如需记录控制台操作，请开通ActionTrail</p></li><li><p>已为容器镜像服务企业版授权您的OSS、VPC、云监控等资源权限</p></li></ul><h3 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h3><ul><li><p>登录容器镜像服务控制</p></li><li><p>在左侧导航栏，选择实例列表</p></li><li><p>在实例列表页面，单击创建企业版实例</p></li><li><p>在创建企业版实例页面，完成基本信息的配置，然后单击立即购买</p></li></ul><h2 id="容器实例配置-x2F-管理"><a href="#容器实例配置-x2F-管理" class="headerlink" title="容器实例配置&#x2F;管理"></a>容器实例配置&#x2F;管理</h2><ul><li><p>绑定源代码托管平台，在实例管理页面选择仓库管理 - 代码源，注意以下代码平台的使用细节：</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-10-00-12-%E6%88%AA%E5%B1%8F2023-03-17%2010.00.04.png"></p></li><li><p>创建镜像仓库，设置命名空间、仓库名称、仓库类型和摘要</p></li><li><p>创建镜像仓库</p></li><li><p>设置构建规则</p></li><li><p>构建镜像</p></li><li><p>查看镜像</p></li></ul><h3 id="ACR镜像分发加速器"><a href="#ACR镜像分发加速器" class="headerlink" title="ACR镜像分发加速器"></a>ACR镜像分发加速器</h3><h4 id="官方镜像加速"><a href="#官方镜像加速" class="headerlink" title="官方镜像加速"></a>官方镜像加速</h4><ul><li><p>登录容器镜像服务控制台</p></li><li><p>在左侧导航栏选择镜像工具 - 镜像加速器</p></li><li><p>在镜像加速器页面就会显示为您独立分配的加速器地址</p></li><li><p>使用配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json进行docker配置</p></li><li><p>重启Docker Daemon</p></li></ul><h4 id="P2P加速"><a href="#P2P加速" class="headerlink" title="P2P加速"></a>P2P加速</h4><ul><li><p>当集群规模很大，达到300节点以上时，使用效果很好</p></li><li><p>推荐使用多可用区VSwitch打散集群ECS节点</p></li><li><p>推荐使用本地SSD或者可分配内存较大的ECS实例</p></li><li><p>当集群规模较小或可分配内存不足时，可能起不到加速效果</p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>阿里云容器镜像产品ACR</p><ul><li><p>基本介绍</p></li><li><p>ACR个人版</p></li><li><p>ACR企业版，与个人版对比</p></li></ul></li><li><p>产品优势和应用场景</p><ul><li><p>特点总结</p></li><li><p>全球化自动部署</p></li></ul></li><li><p>创建企业版容器实例</p><ul><li><p>前提条件</p></li><li><p>创建步骤</p></li></ul></li><li><p>容器实例配置&#x2F;管理</p><ul><li><p>使用步骤</p></li><li><p>ACR镜像分发加速器</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;容器镜像基本概念&quot;&gt;&lt;a href=&quot;#容器镜像基本概念&quot; class=&quot;headerlink&quot; title=&quot;容器镜像基本概念&quot;&gt;&lt;/a&gt;容器镜像基本概念&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Er</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASM服务网格使用</title>
    <link href="http://eryoung2.github.io/2023/03/16/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASM%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%BD%BF%E7%94%A8/"/>
    <id>http://eryoung2.github.io/2023/03/16/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASM%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%BD%BF%E7%94%A8/</id>
    <published>2023-03-16T07:40:13.000Z</published>
    <updated>2023-03-17T14:39:46.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ASM入门指引"><a href="#ASM入门指引" class="headerlink" title="ASM入门指引"></a>ASM入门指引</h2><ul><li><p>部署ASM的基础环境</p><ul><li><p>阿里云ECS弹性计算云服务器</p></li><li><p>阿里云Kubernetes集群(ACK&#x2F;ASK)</p></li></ul></li><li><p>部署ASM的主要步骤</p><ul><li><p>创建一个服务网格ASM实例</p></li><li><p>添加一个Kubernetes集群到服务网格ASM实例中</p></li><li><p>为服务网格ASM实例中的集群部署入口网关</p></li><li><p>将应用部署到上述服务网格ASM实例的ACK Kubernetes集群中</p></li><li><p>为服务网格ASM实例定义虚拟服务和istio网关</p></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-21-41-15-%E6%88%AA%E5%B1%8F2023-03-16%2021.40.21.png"></p><h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><h3 id="创建ASM实例"><a href="#创建ASM实例" class="headerlink" title="创建ASM实例"></a>创建ASM实例</h3><ul><li><p>前提条件</p><ul><li><p>已开通以下服务，服务网格ASM、容器服务、弹性伸缩服务、访问控制服务、链路追踪服务</p></li><li><p>已获得以下角色授权：AliyunServiceMeshDefaultRole、AliyunCSClusterRole、AliyunCSMagedKubernetesRole</p></li></ul></li><li><p>背景信息</p><ul><li><p>创建ASM可能会进行如下操作：</p><ul><li><p>创建安全组</p></li><li><p>创建VPC路由规则</p></li><li><p>创建弹性公网IP</p></li><li><p>创建专有网的负载均衡</p></li><li><p>暴露6443端口</p></li><li><p>暴露15011端口</p></li><li><p>收集被托管管控组件的日志信息</p></li></ul></li></ul></li><li><p>基本步骤</p><ol><li><p>登录ASM控制台</p></li><li><p>在左侧导航栏，选择服务网格 - 网格管理</p></li><li><p>在网格管理页面单击创建新网格</p></li><li><p>在创建新网格页面，完成网格配置</p><ul><li><p>设置网格基础选项</p></li><li><p>设置网格高级选项</p></li></ul></li><li><p>了解和接受服务协议</p></li><li><p>单击确定，开始创建</p></li></ol></li><li><p>执行结果</p><ul><li><p>网格实例页面显示实例列表</p></li><li><p>查看已创建的实例摘要信息</p></li><li><p>查看实例相关的日志细节</p></li><li><p>查看实例相关的管理细节</p><ul><li><p>基本信息</p></li><li><p>连接配置</p></li><li><p>数据平面集群信息</p></li><li><p>虚拟服务</p></li><li><p>目标规则</p></li><li><p>istio资源定义</p></li></ul></li></ul></li></ul><h3 id="添加集群"><a href="#添加集群" class="headerlink" title="添加集群"></a>添加集群</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已创建至少一个集群</p><ul><li><p>Kubernetes专有版集群</p></li><li><p>Kubernetes托管版集群</p></li><li><p>ECS虚拟机</p></li></ul></li><li><p>待添加的集群与ASM实例位于同一VPC</p></li></ul></li><li><p>操作步骤</p><ul><li><p>在网格管理页面单击目标ASM实例名称</p><ul><li>或目标ASM实例右侧操作列下的管理</li></ul></li><li><p>在数据平面区域，单击集群页签</p></li><li><p>在集群页签，单击添加</p></li><li><p>在弹出页选中需要添加的集群，并确定</p></li><li><p>在重要提示对话框中单击确定</p></li></ul></li><li><p>执行结果</p><ul><li><p>添加集群之后，ASM实例的状态变为更新中</p><ul><li><p>黄：更新中</p></li><li><p>青：运行中</p></li></ul></li><li><p>数秒之后，刷新信息，网格状态会变为运行中</p><ul><li>等待时长与添加的集群数量有关</li></ul></li><li><p>在数据平面区域，可以查看已添加集群的信息</p></li></ul></li></ul><h3 id="添加入口网关"><a href="#添加入口网关" class="headerlink" title="添加入口网关"></a>添加入口网关</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已添加至少一个集群到该实例中</p></li></ul></li><li><p>背景信息</p><ul><li><p>七层网关功能</p></li><li><p>对外提供一个统一的七层服务入欧</p></li><li><p>HTTP请求分发&#x2F;负载均衡</p></li></ul></li><li><p>操作步骤</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-22-55-00-%E6%88%AA%E5%B1%8F2023-03-16%2022.54.52.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-22-55-27-%E6%88%AA%E5%B1%8F2023-03-16%2022.55.19.png"></p><h3 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已添加至少一个集群到该实例中</p></li><li><p>通过kubectl连接到ASM实例中新添加的集群</p></li><li><p>已添加入口网管到该集群</p></li></ul></li><li><p>背景信息案例：Bookinfo书评应用</p><ul><li><p>4个微服务构成</p></li><li><p>不同的技术栈</p></li><li><p>Reviews微服务有3个版本</p></li></ul></li><li><p>操作步骤</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-01-08-%E6%88%AA%E5%B1%8F2023-03-16%2023.00.43.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-01-38-%E6%88%AA%E5%B1%8F2023-03-16%2023.01.20.png"></p></li></ul><h3 id="定义资源"><a href="#定义资源" class="headerlink" title="定义资源"></a>定义资源</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已添加至少一个集群到该集群中</p></li><li><p>已添加入口网管到该集群</p></li><li><p>已部署应用到该集群</p></li></ul></li><li><p>背景信息</p><ul><li><p>定义istio资源的目的</p><ul><li><p>策略路由</p></li><li><p>流量治理</p></li><li><p>鉴权</p></li><li><p>安全保护</p></li></ul></li></ul></li><li><p>定义istio资源类型</p><ul><li><p>服务网关Gateway</p><ul><li><p>暴露服务</p></li><li><p>绑定端口、协议、域名</p></li></ul></li><li><p>虚拟服务VirtualService</p><ul><li><p>URL匹配</p></li><li><p>服务版本</p></li><li><p>流量权重</p></li></ul></li><li><p>目标规则DestinationRule</p><ul><li><p>负载均衡策略</p></li><li><p>流控规则</p></li></ul></li><li><p>服务入口ServiceEntry</p><ul><li><p>外部服务发现</p></li><li><p>流量拦截</p></li></ul></li></ul></li><li><p>部署步骤</p><ul><li>定义Gateway资源</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2393289/1665816978967-3e892183-2ef2-40d1-9022-1ca6548bccd5.png"></p><ul><li>定义虚拟服务</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2393289/1665816978967-3e892183-2ef2-40d1-9022-1ca6548bccd5.png"></p><ul><li>访问入口网管</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-08-36-%E6%88%AA%E5%B1%8F2023-03-16%2023.08.29.png"></p><ul><li><p>定义目标规则</p><ul><li>负载均衡策略：轮询、最小连接数、随机</li></ul></li><li><p>增加新的虚拟服务</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-08-36-%E6%88%AA%E5%B1%8F2023-03-16%2023.08.29.png"></p><ul><li>执行结果</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-10-54-%E6%88%AA%E5%B1%8F2023-03-16%2023.10.40.png"></p></li></ul><h3 id="流程总结"><a href="#流程总结" class="headerlink" title="流程总结"></a>流程总结</h3><ul><li><p>服务网格ASM的部署流程</p><ul><li><p>创建一个服务网格ASM实例</p></li><li><p>添加一个集群到服务网格ASM实例中</p></li><li><p>为服务网格ASM实例中的集群部署入口网关</p></li><li><p>将应用部署到上述服务网格ASM实例中的集群中</p></li><li><p>为服务网格ASM实例定义虚拟服务和istio服务网关</p></li></ul></li><li><p>服务网格ASM的移除流程</p><ul><li><p>在ASM实例管理页面移除所有关联的集群</p></li><li><p>集群中部署的入口网关服务将被自动卸载</p></li><li><p>在列表页面删除ASM实例</p></li></ul></li></ul><h3 id="ASM使用问题"><a href="#ASM使用问题" class="headerlink" title="ASM使用问题"></a>ASM使用问题</h3><ul><li><p>不能再ASM实例中部署应用</p><ul><li><p>控制台提供的配置用于连接ASM实例</p></li><li><p>istio资源在控制平面操作，无法在控制平面部署应用</p></li></ul></li><li><p>不能再ASM管理的集群中部署istio的虚拟服务等CRD资源</p><ul><li>istio资源在控制平面操作，连接的kubeconfig同样是控制平面提供的配置</li></ul></li><li><p>不直接使用集群的连接配置操作istio资源</p><ul><li>istio CRD对应的资源保存在控制平面，控制平面完成规则转换并应用</li></ul></li><li><p>服务网格控制平台的命名空间yu数据平面集群的命名空间的区别</p><ul><li><p>通过控制台或Kubeconfig定义的命名空间隶属于ASM实例</p></li><li><p>与该ASM实例管理的数据平面集群相互独立</p></li><li><p>在实例和数据平面集群中的管理与维护操作互不影响</p></li></ul></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>ASM入门指引</p></li><li><p>部署过程</p><ul><li><p>创建ASM实例</p></li><li><p>添加集群</p></li><li><p>添加入口网关</p></li><li><p>部署应用</p></li><li><p>定义资源</p></li></ul></li><li><p>流程总结</p></li><li><p>ASM使用问题</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ASM入门指引&quot;&gt;&lt;a href=&quot;#ASM入门指引&quot; class=&quot;headerlink&quot; title=&quot;ASM入门指引&quot;&gt;&lt;/a&gt;ASM入门指引&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;部署ASM的基础环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;阿里云ECS弹性计算云服务器</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
</feed>
