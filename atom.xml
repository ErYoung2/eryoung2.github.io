<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eryoung2的个人博客</title>
  
  <subtitle>ErYoung2写字的地方</subtitle>
  <link href="http://eryoung2.github.io/atom.xml" rel="self"/>
  
  <link href="http://eryoung2.github.io/"/>
  <updated>2022-06-14T16:15:33.772Z</updated>
  <id>http://eryoung2.github.io/</id>
  
  <author>
    <name>ErYoung2</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用发布方式总结</title>
    <link href="http://eryoung2.github.io/2022/06/14/%E5%B8%B8%E7%94%A8%E5%8F%91%E5%B8%83%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://eryoung2.github.io/2022/06/14/%E5%B8%B8%E7%94%A8%E5%8F%91%E5%B8%83%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/</id>
    <published>2022-06-14T15:23:16.000Z</published>
    <updated>2022-06-14T16:15:33.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们都知道，在IT公司中，如果要发布新版本的话，需要考虑上线的安全性与稳定性。传统的方法是先停机，然后做新版本发布，最后重新上线。但我们都知道，这样做会导致服务中断，可能会造成业务丢失，从而造成损失。</p><p>所以我们通常会使用一些不会造成服务中断的发布方式，即边发布新版本，边提供服务，使得发布过程变得较为平滑。</p><p>常用的发布方式有：蓝绿发布、滚动发布、灰度发布(金丝雀发布)三种。</p><h2 id="蓝绿发布"><a href="#蓝绿发布" class="headerlink" title="蓝绿发布"></a>蓝绿发布</h2><p>蓝绿发布中，一共有两套系统。一套运行旧版本应用，被称为“绿色”；一套运行新版本应用，被称为“蓝色”。两套系统均功能完善，并且正在运行的系统，只是系统版本和对外服务情况不同。正在对外提供服务的老系统是绿色系统，新部署的系统是蓝色系统。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2022/06/15-00-15-14-lanlv.png"></p><p>两套系统互不干扰，我们可以单独对蓝色系统进行调试，而不影响绿色系统提供服务。</p><p>在蓝色系统调试好后，可将流量导至蓝色系统，进行用户测试；若出现问题，则切回绿色系统。</p><p>在用户测试没问题后，升级绿色系统。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1）蓝绿部署的目的是<strong>减少发布时的中断时间</strong>、<strong>能够快速撤回发布</strong>。</p><p>2）两套系统没有耦合的时候才能百分百保证不干扰。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>蓝绿发布是发布方式中的一种，需要根据特定情况进行选择。蓝绿部署能够简单快捷实施的前提假设是目标系统是非常内聚的，如果目标系统相当复杂，那么如何切换、两套系统的数据是否需要以及如何同步等，都需要仔细考虑。</p><p>当你切换到蓝色环境时，需要妥当处理未完成的业务和新的业务。如果你的数据库后端无法处理，会是一个比较麻烦的问题；</p><ul><li>可能会出现需要同时处理“微服务架构应用”和“传统架构应用”的情况，如果在蓝绿部署中协调不好这两者，还是有可能会导致服务停止。</li><li>需要提前考虑数据库与应用部署同步迁移 &#x2F;回滚的问题。</li><li>蓝绿部署需要有基础设施支持。</li><li>在非隔离基础架构（ VM 、 Docker 等）上执行蓝绿部署，蓝色环境和绿色环境有被摧毁的风险。</li></ul><h2 id="滚动发布"><a href="#滚动发布" class="headerlink" title="滚动发布"></a>滚动发布</h2><p>相比蓝绿发布将机器分为两拨，滚动发布会分得更细。每次只升级一小部分机器，然后滚动升级，最终完成全部升级。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2022/06/15-00-15-01-gundong.png"></p><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>1）这种部署方式相对于蓝绿部署，更加节约资源——它不需要运行两个集群、两倍的实例数。我们可以部分部署，例如每次只取出集群的20%进行升级。</p><p>2）回滚困难。</p><h3 id="滚动发布注意事项"><a href="#滚动发布注意事项" class="headerlink" title="滚动发布注意事项"></a>滚动发布注意事项</h3><p>1）滚动发布没有一个确定可行的环境。蓝绿部署我们知道老版本是可行的，但是滚动发布不行。</p><p>2）修改了现有环境。</p><p>3）回滚困难。举个例子，在某一次发布中，我们需要更新100个实例，每次更新10个实例，每次部署需要5分钟。当滚动发布到第80个实例时，发现了问题，需要回滚，这个回滚却是一个痛苦，并且漫长的过程。</p><p>4）有的时候，我们还可能对系统进行动态伸缩，如果部署期间，系统自动扩容&#x2F;缩容了，我们还需判断到底哪个节点使用的是哪个代码。尽管有一些自动化的运维工具，但是依然令人心惊胆战。</p><p>5）因为是逐步更新，那么我们在上线代码的时候，就会短暂出现新老版本不一致的情况，如果对上线要求较高的场景，那么就需要考虑如何做好兼容的问题。 </p><h2 id="灰度发布（金丝雀发布）"><a href="#灰度发布（金丝雀发布）" class="headerlink" title="灰度发布（金丝雀发布）"></a>灰度发布（金丝雀发布）</h2><p>灰度发布，也叫金丝雀发布。是指在黑与白之间平滑过渡的一种发布方式。AB test就是一种灰度发布方式，让一部分用户继续用A，一部分用户开始用B，如果用户对B没有什么反对意见，那么逐步扩大范围，把所有用户都迁移到B上面来。灰度发布可以保证整体系统的稳定，在初始灰度的时候就可以发现、调整问题，以保证其影响度，而我们平常所说的金丝雀部署也就是灰度发布的一种方式。</p><p>具体到服务器上, 实际操作中还可以做更多控制，譬如说，给最初更新的10台服务器设置较低的权重、控制发送给这10台服务器的请求数，然后逐渐提高权重、增加请求数。一种平滑过渡的思路, 这个控制叫做“流量切分”。</p><p>关于金丝雀发布这个名字的来源，可以参考以下故事：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17世纪，英国矿井工人发现，金丝雀对瓦斯这种气体十分敏感。空气中哪怕有极其微量的瓦斯，金丝雀也会停止歌唱；而当瓦斯含量超过一定限度时，虽然鲁钝的人类毫无察觉，金丝雀却早已毒发身亡。当时在采矿设备相对简陋的条件下，工人们每次下井都会带上一只金丝雀作为“瓦斯检测指标”，以便在危险状况下紧急撤离。</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2022/06/15-00-14-49-huidu.png"></p><p>过程:</p><p>1）准备好部署各个阶段的工件，包括：构建工件，测试脚本，配置文件和部署清单文件。</p><p>2）将“金丝雀”服务器部署进服务器中, 测试。</p><p>3）从负载均衡列表中移除掉“金丝雀”服务器。</p><p>4）升级“金丝雀”应用（排掉原有流量并进行部署）。</p><p>5）对应用进行自动化测试。</p><p>6）将“金丝雀”服务器重新添加到负载均衡列表中（连通性和健康检查）。</p><p>7）如果“金丝雀”在线使用测试成功，升级剩余的其他服务器。（否则就回滚）</p><h2 id="A-x2F-B测试"><a href="#A-x2F-B测试" class="headerlink" title="A&#x2F;B测试"></a>A&#x2F;B测试</h2><p>顾名思义，上面三个都是发布策略，而A&#x2F;B是个测试策略。二者侧重点不同，发布策略主要关注新系统的程序bug和隐患，而测试策略主要关注新旧版本之间的使用对比，关注实际效果，如转化率、订单情况等。</p><p>A&#x2F;B测试时，线上同时运行多个版本的服务，这些服务通常会有一些体验上的差异，譬如说页面样式、颜色、操作流程不同。相关人员通过分析各个版本服务的实际效果，选出效果最好的版本。</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2022/06/15-00-14-35-ab.png"></p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p><a href="https://www.cnblogs.com/Courage129/p/14498788.html">微服务部署之蓝绿发布、滚动发布、灰度发布区别与特点</a></p><p><a href="https://zh.wikipedia.org/wiki/A/B%E6%B8%AC%E8%A9%A6">AB测试</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们都知道，在IT公司中，如果要发布新版本的话，需要考虑上线的安全性与稳定性。传统的方法是先停机，然后做新版本发布，最后重新上线。但我们都知</summary>
      
    
    
    
    <category term="IT概念" scheme="http://eryoung2.github.io/categories/IT%E6%A6%82%E5%BF%B5/"/>
    
    
    <category term="发布方式" scheme="http://eryoung2.github.io/tags/%E5%8F%91%E5%B8%83%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Sourcetree 跳过注册环节</title>
    <link href="http://eryoung2.github.io/2022/06/12/Sourcetree-%E8%B7%B3%E8%BF%87%E6%B3%A8%E5%86%8C%E7%8E%AF%E8%8A%82/"/>
    <id>http://eryoung2.github.io/2022/06/12/Sourcetree-%E8%B7%B3%E8%BF%87%E6%B3%A8%E5%86%8C%E7%8E%AF%E8%8A%82/</id>
    <published>2022-06-12T02:23:40.000Z</published>
    <updated>2022-06-14T15:27:12.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几天在电脑上装了个sourcetree，结果它硬要我注册，烦得很。<br>于是查了一下怎么跳过注册环节，结果还真有，试了一下，真给力！<br>特此记录。</p><h3 id="MAC版本："><a href="#MAC版本：" class="headerlink" title="MAC版本："></a>MAC版本：</h3><ol><li><p>打开sourcetree</p></li><li><p>关闭sourcetree</p></li><li><p>命令终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.torusknot.SourceTreeNotMAS completedWelcomeWizardVersion 3</span><br></pre></td></tr></table></figure></li><li><p>打开sourcetree即可跳过登录</p></li></ol><p> </p><h3 id="Windows版本："><a href="#Windows版本：" class="headerlink" title="Windows版本："></a>Windows版本：</h3><ol><li><p>打开我的电脑，输入“%LocalAppData%\Atlassian\SourceTree\”，并新建一个<strong>accounts.json</strong>文件</p></li><li><p>在<strong>accounts.json</strong>文件中输入以下内容后，重新登录，即可跳过注册&#x2F;登陆环节，直接使用。</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;$id&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span><span class="string">&quot;SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Authenticate&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span> <span class="attr">&quot;HostInstance&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>  <span class="attr">&quot;$id&quot;</span><span class="punctuation">:</span><span class="string">&quot;2&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span><span class="string">&quot;SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;Host&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>   <span class="attr">&quot;$id&quot;</span><span class="punctuation">:</span><span class="string">&quot;3&quot;</span><span class="punctuation">,</span>   <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span><span class="string">&quot;SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount&quot;</span><span class="punctuation">,</span>   <span class="attr">&quot;Id&quot;</span><span class="punctuation">:</span><span class="string">&quot;atlassian account&quot;</span>  <span class="punctuation">&#125;</span><span class="punctuation">,</span>  <span class="attr">&quot;BaseUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://id.atlassian.com/&quot;</span>  <span class="punctuation">&#125;</span><span class="punctuation">,</span>  <span class="attr">&quot;Credentials&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>   <span class="attr">&quot;$id&quot;</span><span class="punctuation">:</span><span class="string">&quot;4&quot;</span><span class="punctuation">,</span>   <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span><span class="string">&quot;SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account&quot;</span><span class="punctuation">,</span>   <span class="attr">&quot;Username&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span>   <span class="attr">&quot;Email&quot;</span><span class="punctuation">:</span><span class="keyword">null</span>  <span class="punctuation">&#125;</span><span class="punctuation">,</span>  <span class="attr">&quot;IsDefault&quot;</span><span class="punctuation">:</span><span class="keyword">false</span> <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前几天在电脑上装了个sourcetree，结果它硬要我注册，烦得很。&lt;br&gt;于是查了一下怎么跳过注册环节，结果还真有，试了一下，真给力！&lt;b</summary>
      
    
    
    
    <category term="工具使用" scheme="http://eryoung2.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Sourcetree" scheme="http://eryoung2.github.io/tags/Sourcetree/"/>
    
  </entry>
  
  <entry>
    <title>hexo 改变主题的问题</title>
    <link href="http://eryoung2.github.io/2022/06/06/hexo-%E6%94%B9%E5%8F%98%E4%B8%BB%E9%A2%98%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://eryoung2.github.io/2022/06/06/hexo-%E6%94%B9%E5%8F%98%E4%B8%BB%E9%A2%98%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-06-06T02:23:08.000Z</published>
    <updated>2022-06-06T17:11:10.799Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo改变主题后部署报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial</span><br></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>1 安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p>2 清空缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>3 重新部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Hexo改变主题后部署报错：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="错误排查" scheme="http://eryoung2.github.io/categories/%E9%94%99%E8%AF%AF%E6%8E%92%E6%9F%A5/"/>
    
    
    <category term="hexo" scheme="http://eryoung2.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
