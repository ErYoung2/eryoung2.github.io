<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eryoung2的个人博客</title>
  
  <subtitle>ErYoung2写字的地方</subtitle>
  <link href="http://eryoung2.github.io/atom.xml" rel="self"/>
  
  <link href="http://eryoung2.github.io/"/>
  <updated>2023-03-17T02:09:08.552Z</updated>
  <id>http://eryoung2.github.io/</id>
  
  <author>
    <name>ErYoung2</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ACP云原生容器工程师 - ACR概述与使用</title>
    <link href="http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACR%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://eryoung2.github.io/2023/03/17/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACR%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2023-03-17T01:41:26.000Z</published>
    <updated>2023-03-17T02:09:08.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="容器镜像基本概念"><a href="#容器镜像基本概念" class="headerlink" title="容器镜像基本概念"></a>容器镜像基本概念</h2><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-43-07-%E6%88%AA%E5%B1%8F2023-03-17%2009.42.51.png"></p><h2 id="阿里云容器镜像产品ACR"><a href="#阿里云容器镜像产品ACR" class="headerlink" title="阿里云容器镜像产品ACR"></a>阿里云容器镜像产品ACR</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><ul><li><p>容器镜像服务（ACR）</p><ul><li><p>提供云原生资产的安全托管和全生命周期管理</p></li><li><p>支持多场景下镜像的高效分发，与容器服务ACK无缝集成，大早云原生应用一站式解决方案</p></li><li><p>与阿里云容器服务、CodePipeline深度集成，自动完成从代码提交到应用部署的DevOps完整流程</p></li></ul></li></ul><h3 id="ACR默认实例（个人版）"><a href="#ACR默认实例（个人版）" class="headerlink" title="ACR默认实例（个人版）"></a>ACR默认实例（个人版）</h3><ul><li>容器镜像服务ACR默认实例提供基础的容器镜像服务</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-46-31-%E6%88%AA%E5%B1%8F2023-03-17%2009.46.23.png"></p><h3 id="ACR企业版"><a href="#ACR企业版" class="headerlink" title="ACR企业版"></a>ACR企业版</h3><ul><li><p>使用场景</p><ul><li><p>业务全球地域部署</p></li><li><p>业务大规模部署</p></li><li><p>容器化DevSecOps提效</p></li><li><p>搬站上云</p></li></ul></li></ul><h3 id="ACR企业版和个人版对比"><a href="#ACR企业版和个人版对比" class="headerlink" title="ACR企业版和个人版对比"></a>ACR企业版和个人版对比</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-48-44-%E6%88%AA%E5%B1%8F2023-03-17%2009.48.21.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-48-53-%E6%88%AA%E5%B1%8F2023-03-17%2009.48.34.png"></p><p>主要区别在于企业版支持：</p><ul><li><p>多样OCI制品托管</p></li><li><p>加速应用分发</p></li><li><p>多维度安全保障</p></li><li><p>提效云原生应用交付</p></li></ul><h2 id="ACR产品优势和应用场景"><a href="#ACR产品优势和应用场景" class="headerlink" title="ACR产品优势和应用场景"></a>ACR产品优势和应用场景</h2><h3 id="特点总结"><a href="#特点总结" class="headerlink" title="特点总结"></a>特点总结</h3><ul><li><p>简单易用</p><ul><li><p>无需自行搭建运维，一键创建镜像仓库</p></li><li><p>支持多地域，提供稳定快速的镜像上传、下载服务</p></li></ul></li><li><p>安全可控</p><ul><li><p>完善的镜像权限管理体系，保证镜像的分享安全、团队的协作便利</p></li><li><p>提供镜像安全扫描功能，保证镜像漏洞可识别，漏洞级别可提示</p></li></ul></li><li><p>无缝集成</p><ul><li><p>整合容器服务，实现新应用镜像生成后的持续部署</p></li><li><p>整合云Code、CodePipeline，实现源代码到编译测试后，自动生成应用镜像</p></li></ul></li></ul><h3 id="全球化自动部署"><a href="#全球化自动部署" class="headerlink" title="全球化自动部署"></a>全球化自动部署</h3><ul><li>业务镜像全球化自动部署，各地都需要购买ACR企业版，才能自动更新及自动化部署</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-53-04-%E6%88%AA%E5%B1%8F2023-03-17%2009.52.57.png"></p><ul><li>DevSecOps，可阻断未通过安全监测的上传和部署</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-09-54-25-%E6%88%AA%E5%B1%8F2023-03-17%2009.54.17.png"></p><h2 id="创建企业版容器实例"><a href="#创建企业版容器实例" class="headerlink" title="创建企业版容器实例"></a>创建企业版容器实例</h2><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li><p>已开通容器镜像服务企业版所依赖的云产品OSS</p></li><li><p>如需查询实例的实时数据，请开通云监控</p></li><li><p>如需通过VPC访问实例，请开通VPC</p></li><li><p>如需记录控制台操作，请开通ActionTrail</p></li><li><p>已为容器镜像服务企业版授权您的OSS、VPC、云监控等资源权限</p></li></ul><h3 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h3><ul><li><p>登录容器镜像服务控制</p></li><li><p>在左侧导航栏，选择实例列表</p></li><li><p>在实例列表页面，单击创建企业版实例</p></li><li><p>在创建企业版实例页面，完成基本信息的配置，然后单击立即购买</p></li></ul><h2 id="容器实例配置-x2F-管理"><a href="#容器实例配置-x2F-管理" class="headerlink" title="容器实例配置&#x2F;管理"></a>容器实例配置&#x2F;管理</h2><ul><li><p>绑定源代码托管平台，在实例管理页面选择仓库管理 - 代码源，注意以下代码平台的使用细节：</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/17-10-00-12-%E6%88%AA%E5%B1%8F2023-03-17%2010.00.04.png"></p></li><li><p>创建镜像仓库，设置命名空间、仓库名称、仓库类型和摘要</p></li><li><p>创建镜像仓库</p></li><li><p>设置构建规则</p></li><li><p>构建镜像</p></li><li><p>查看镜像</p></li></ul><h3 id="ACR镜像分发加速器"><a href="#ACR镜像分发加速器" class="headerlink" title="ACR镜像分发加速器"></a>ACR镜像分发加速器</h3><h4 id="官方镜像加速"><a href="#官方镜像加速" class="headerlink" title="官方镜像加速"></a>官方镜像加速</h4><ul><li><p>登录容器镜像服务控制台</p></li><li><p>在左侧导航栏选择镜像工具 - 镜像加速器</p></li><li><p>在镜像加速器页面就会显示为您独立分配的加速器地址</p></li><li><p>使用配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json进行docker配置</p></li><li><p>重启Docker Daemon</p></li></ul><h4 id="P2P加速"><a href="#P2P加速" class="headerlink" title="P2P加速"></a>P2P加速</h4><ul><li><p>当集群规模很大，达到300节点以上时，使用效果很好</p></li><li><p>推荐使用多可用区VSwitch打散集群ECS节点</p></li><li><p>推荐使用本地SSD或者可分配内存较大的ECS实例</p></li><li><p>当集群规模较小或可分配内存不足时，可能起不到加速效果</p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>阿里云容器镜像产品ACR</p><ul><li><p>基本介绍</p></li><li><p>ACR个人版</p></li><li><p>ACR企业版，与个人版对比</p></li></ul></li><li><p>产品优势和应用场景</p><ul><li><p>特点总结</p></li><li><p>全球化自动部署</p></li></ul></li><li><p>创建企业版容器实例</p><ul><li><p>前提条件</p></li><li><p>创建步骤</p></li></ul></li><li><p>容器实例配置&#x2F;管理</p><ul><li><p>使用步骤</p></li><li><p>ACR镜像分发加速器</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;容器镜像基本概念&quot;&gt;&lt;a href=&quot;#容器镜像基本概念&quot; class=&quot;headerlink&quot; title=&quot;容器镜像基本概念&quot;&gt;&lt;/a&gt;容器镜像基本概念&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Er</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASM服务网格使用</title>
    <link href="http://eryoung2.github.io/2023/03/16/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASM%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%BD%BF%E7%94%A8/"/>
    <id>http://eryoung2.github.io/2023/03/16/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASM%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%BD%BF%E7%94%A8/</id>
    <published>2023-03-16T07:40:13.000Z</published>
    <updated>2023-03-16T15:19:45.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ASM入门指引"><a href="#ASM入门指引" class="headerlink" title="ASM入门指引"></a>ASM入门指引</h2><ul><li><p>部署ASM的基础环境</p><ul><li><p>阿里云ECS弹性计算云服务器</p></li><li><p>阿里云Kubernetes集群(ACK&#x2F;ASK)</p></li></ul></li><li><p>部署ASM的主要步骤</p><ul><li><p>创建一个服务网格ASM实例</p></li><li><p>添加一个Kubernetes集群到服务网格ASM实例中</p></li><li><p>为服务网格ASM实例中的集群部署入口网关</p></li><li><p>将应用部署到上述服务网格ASM实例的ACK Kubernetes集群中</p></li><li><p>为服务网格ASM实例定义虚拟服务和istio网关</p></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-21-41-15-%E6%88%AA%E5%B1%8F2023-03-16%2021.40.21.png"></p><h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><h3 id="创建ASM实例"><a href="#创建ASM实例" class="headerlink" title="创建ASM实例"></a>创建ASM实例</h3><ul><li><p>前提条件</p><ul><li><p>已开通以下服务，服务网格ASM、容器服务、弹性伸缩服务、访问控制服务、链路追踪服务</p></li><li><p>已获得以下角色授权：AliyunServiceMeshDefaultRole、AliyunCSClusterRole、AliyunCSMagedKubernetesRole</p></li></ul></li><li><p>背景信息</p><ul><li><p>创建ASM可能会进行如下操作：</p><ul><li><p>创建安全组</p></li><li><p>创建VPC路由规则</p></li><li><p>创建弹性公网IP</p></li><li><p>创建专有网的负载均衡</p></li><li><p>暴露6443端口</p></li><li><p>暴露15011端口</p></li><li><p>收集被托管管控组件的日志信息</p></li></ul></li></ul></li><li><p>基本步骤</p><ol><li><p>登录ASM控制台</p></li><li><p>在左侧导航栏，选择服务网格 - 网格管理</p></li><li><p>在网格管理页面单击创建新网格</p></li><li><p>在创建新网格页面，完成网格配置</p><ul><li><p>设置网格基础选项</p></li><li><p>设置网格高级选项</p></li></ul></li><li><p>了解和接受服务协议</p></li><li><p>单击确定，开始创建</p></li></ol></li><li><p>执行结果</p><ul><li><p>网格实例页面显示实例列表</p></li><li><p>查看已创建的实例摘要信息</p></li><li><p>查看实例相关的日志细节</p></li><li><p>查看实例相关的管理细节</p><ul><li><p>基本信息</p></li><li><p>连接配置</p></li><li><p>数据平面集群信息</p></li><li><p>虚拟服务</p></li><li><p>目标规则</p></li><li><p>istio资源定义</p></li></ul></li></ul></li></ul><h3 id="添加集群"><a href="#添加集群" class="headerlink" title="添加集群"></a>添加集群</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已创建至少一个集群</p><ul><li><p>Kubernetes专有版集群</p></li><li><p>Kubernetes托管版集群</p></li><li><p>ECS虚拟机</p></li></ul></li><li><p>待添加的集群与ASM实例位于同一VPC</p></li></ul></li><li><p>操作步骤</p><ul><li><p>在网格管理页面单击目标ASM实例名称</p><ul><li>或目标ASM实例右侧操作列下的管理</li></ul></li><li><p>在数据平面区域，单击集群页签</p></li><li><p>在集群页签，单击添加</p></li><li><p>在弹出页选中需要添加的集群，并确定</p></li><li><p>在重要提示对话框中单击确定</p></li></ul></li><li><p>执行结果</p><ul><li><p>添加集群之后，ASM实例的状态变为更新中</p><ul><li><p>黄：更新中</p></li><li><p>青：运行中</p></li></ul></li><li><p>数秒之后，刷新信息，网格状态会变为运行中</p><ul><li>等待时长与添加的集群数量有关</li></ul></li><li><p>在数据平面区域，可以查看已添加集群的信息</p></li></ul></li></ul><h3 id="添加入口网关"><a href="#添加入口网关" class="headerlink" title="添加入口网关"></a>添加入口网关</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已添加至少一个集群到该实例中</p></li></ul></li><li><p>背景信息</p><ul><li><p>七层网关功能</p></li><li><p>对外提供一个统一的七层服务入欧</p></li><li><p>HTTP请求分发&#x2F;负载均衡</p></li></ul></li><li><p>操作步骤</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-22-55-00-%E6%88%AA%E5%B1%8F2023-03-16%2022.54.52.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-22-55-27-%E6%88%AA%E5%B1%8F2023-03-16%2022.55.19.png"></p><h3 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已添加至少一个集群到该实例中</p></li><li><p>通过kubectl连接到ASM实例中新添加的集群</p></li><li><p>已添加入口网管到该集群</p></li></ul></li><li><p>背景信息案例：Bookinfo书评应用</p><ul><li><p>4个微服务构成</p></li><li><p>不同的技术栈</p></li><li><p>Reviews微服务有3个版本</p></li></ul></li><li><p>操作步骤</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-01-08-%E6%88%AA%E5%B1%8F2023-03-16%2023.00.43.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-01-38-%E6%88%AA%E5%B1%8F2023-03-16%2023.01.20.png"></p></li></ul><h3 id="定义资源"><a href="#定义资源" class="headerlink" title="定义资源"></a>定义资源</h3><ul><li><p>前提条件</p><ul><li><p>已创建至少一个ASM实例</p></li><li><p>已添加至少一个集群到该集群中</p></li><li><p>已添加入口网管到该集群</p></li><li><p>已部署应用到该集群</p></li></ul></li><li><p>背景信息</p><ul><li><p>定义istio资源的目的</p><ul><li><p>策略路由</p></li><li><p>流量治理</p></li><li><p>鉴权</p></li><li><p>安全保护</p></li></ul></li></ul></li><li><p>定义istio资源类型</p><ul><li><p>服务网关Gateway</p><ul><li><p>暴露服务</p></li><li><p>绑定端口、协议、域名</p></li></ul></li><li><p>虚拟服务VirtualService</p><ul><li><p>URL匹配</p></li><li><p>服务版本</p></li><li><p>流量权重</p></li></ul></li><li><p>目标规则DestinationRule</p><ul><li><p>负载均衡策略</p></li><li><p>流控规则</p></li></ul></li><li><p>服务入口ServiceEntry</p><ul><li><p>外部服务发现</p></li><li><p>流量拦截</p></li></ul></li></ul></li><li><p>部署步骤</p><ul><li>定义Gateway资源</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2393289/1665816978967-3e892183-2ef2-40d1-9022-1ca6548bccd5.png"></p><ul><li>定义虚拟服务</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2393289/1665816978967-3e892183-2ef2-40d1-9022-1ca6548bccd5.png"></p><ul><li>访问入口网管</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-08-36-%E6%88%AA%E5%B1%8F2023-03-16%2023.08.29.png"></p><ul><li><p>定义目标规则</p><ul><li>负载均衡策略：轮询、最小连接数、随机</li></ul></li><li><p>增加新的虚拟服务</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-08-36-%E6%88%AA%E5%B1%8F2023-03-16%2023.08.29.png"></p><ul><li>执行结果</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-23-10-54-%E6%88%AA%E5%B1%8F2023-03-16%2023.10.40.png"></p></li></ul><h3 id="流程总结"><a href="#流程总结" class="headerlink" title="流程总结"></a>流程总结</h3><ul><li><p>服务网格ASM的部署流程</p><ul><li><p>创建一个服务网格ASM实例</p></li><li><p>添加一个集群到服务网格ASM实例中</p></li><li><p>为服务网格ASM实例中的集群部署入口网关</p></li><li><p>将应用部署到上述服务网格ASM实例中的集群中</p></li><li><p>为服务网格ASM实例定义虚拟服务和istio服务网关</p></li></ul></li><li><p>服务网格ASM的移除流程</p><ul><li><p>在ASM实例管理页面移除所有关联的集群</p></li><li><p>集群中部署的入口网关服务将被自动卸载</p></li><li><p>在列表页面删除ASM实例</p></li></ul></li></ul><h3 id="ASM使用问题"><a href="#ASM使用问题" class="headerlink" title="ASM使用问题"></a>ASM使用问题</h3><ul><li><p>不能再ASM实例中部署应用</p><ul><li><p>控制台提供的配置用于连接ASM实例</p></li><li><p>istio资源在控制平面操作，无法在控制平面部署应用</p></li></ul></li><li><p>不能再ASM管理的集群中部署istio的虚拟服务等CRD资源</p><ul><li>istio资源在控制平面操作，连接的kubeconfig同样是控制平面提供的配置</li></ul></li><li><p>不直接使用集群的连接配置操作istio资源</p><ul><li>istio CRD对应的资源保存在控制平面，控制平面完成规则转换并应用</li></ul></li><li><p>服务网格控制平台的命名空间yu数据平面集群的命名空间的区别</p><ul><li><p>通过控制台或Kubeconfig定义的命名空间隶属于ASM实例</p></li><li><p>与该ASM实例管理的数据平面集群相互独立</p></li><li><p>在实例和数据平面集群中的管理与维护操作互不影响</p></li></ul></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>ASM入门指引</p></li><li><p>部署过程</p><ul><li><p>创建ASM实例</p></li><li><p>添加集群</p></li><li><p>添加入口网关</p></li><li><p>部署应用</p></li><li><p>定义资源</p></li></ul></li><li><p>流程总结</p></li><li><p>ASM使用问题</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ASM入门指引&quot;&gt;&lt;a href=&quot;#ASM入门指引&quot; class=&quot;headerlink&quot; title=&quot;ASM入门指引&quot;&gt;&lt;/a&gt;ASM入门指引&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;部署ASM的基础环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;阿里云ECS弹性计算云服务器</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASM服务网格概述</title>
    <link href="http://eryoung2.github.io/2023/03/16/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASM%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E6%A6%82%E8%BF%B0/"/>
    <id>http://eryoung2.github.io/2023/03/16/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASM%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E6%A6%82%E8%BF%B0/</id>
    <published>2023-03-16T01:50:43.000Z</published>
    <updated>2023-03-16T04:35:04.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="技术概要"><a href="#技术概要" class="headerlink" title="技术概要"></a>技术概要</h3><h4 id="第一代服务网格"><a href="#第一代服务网格" class="headerlink" title="第一代服务网格"></a>第一代服务网格</h4><ul><li><p>服务网格</p><ul><li><p>基础设施层</p></li><li><p>微服务通信</p><ul><li><p>保证请求可靠传递</p></li><li><p>隐藏通信细节</p></li><li><p>减少框架耦合</p></li><li><p>预言无关</p></li></ul></li><li><p>数据平面</p><ul><li><p>边车模式</p></li><li><p>通信代理服务</p></li><li><p>独立、平行、同步、透明</p></li></ul></li><li><p>控制平面</p><ul><li><p>集中式控制面板</p></li><li><p>统一运维管理</p></li></ul></li></ul></li></ul><p>此时的服务网格面临的问题：</p><ol><li><p>开发者需要更多地关注框架本身</p></li><li><p>框架本身只支持一种或多种特定语言，通用性并不好</p></li><li><p>框架耦合过大，不升级对服务无法透明</p></li></ol><h4 id="第二代服务网格"><a href="#第二代服务网格" class="headerlink" title="第二代服务网格"></a>第二代服务网格</h4><ul><li><p>服务网格平台istio</p><ul><li><p>连接 </p><ul><li><p>通信撸油</p></li><li><p>流量管理</p></li></ul></li><li><p>安全</p><ul><li><p>加密通信</p></li><li><p>身份验证</p></li></ul></li><li><p>控制</p><ul><li><p>自动策略</p></li><li><p>分布式资源调配</p></li></ul></li><li><p>观察</p><ul><li><p>量度指标</p></li><li><p>日志</p></li><li><p>追踪</p></li></ul></li></ul></li></ul><p>ASM是对istio进行优化开发的产品</p><h4 id="阿里云服务网格"><a href="#阿里云服务网格" class="headerlink" title="阿里云服务网格"></a>阿里云服务网格</h4><ul><li><p>统一管理微服务应用流量，兼容istio的托管式平台</p></li><li><p>通过流量控制、网格观测以及服务间通信安全等功能，服务网格可以全方位简化服务治理</p></li><li><p>在运行异构计算基础设施上的服务提供统一的管理能力</p></li><li><p>适用于Kubernetes集群、Serverless Kubernetes集群、ECS虚拟机以及自建集群</p></li><li><p>与阿里云产品深度融合，历经数个版本迭代优化，多区域覆盖</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-10-09-38-%E6%88%AA%E5%B1%8F2023-03-16%2010.08.23.png"></p><h3 id="产品架构"><a href="#产品架构" class="headerlink" title="产品架构"></a>产品架构</h3><ul><li><p>控制平面</p><ul><li><p>完全托管的istio实例</p></li><li><p>与开源社区兼容</p></li><li><p>声明式定义路由规则</p></li><li><p>统一服务流量管理</p></li><li><p>阿里云组件集成</p></li></ul></li><li><p>数据平面</p><ul><li><p>Kubernetes集群的应用服务</p></li><li><p>ECI Pod上的应用服务</p></li><li><p>声明式定义路由规则</p></li><li><p>统一服务流量管理</p></li></ul></li><li><p>扩展与集成</p><ul><li><p>可观测性服务</p></li><li><p>网络互联CEN</p></li><li><p>整合社区开源软件</p><ul><li><p>OPA</p></li><li><p>授权服务</p></li></ul></li><li><p>WebAssembly</p><ul><li><p>协议</p></li><li><p>指标</p></li><li><p>日志</p></li><li><p>过滤器</p></li></ul></li><li><p>GitOps</p><ul><li>CI&#x2F;CD</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-10-11-29-%E6%88%AA%E5%B1%8F2023-03-16%2010.11.21.png"></p><h3 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h3><ul><li><p>一致的管理方式</p><ul><li><p>以一致的方式来管理运行于不统计群的应用服务</p></li><li><p>支持混合云、多云场景和异构环境</p></li><li><p>提供一致的可观测性和流量控制</p></li></ul></li><li><p>统一的流量管理</p><ul><li>支持容器或者虚拟机混合环境下统一的流量管理</li></ul></li><li><p>控制平面核心组件托管化</p><ul><li><p>托管控制平面的核心组件</p></li><li><p>最大限度地降低用户资源开销和运维成本</p></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-10-15-37-%E6%88%AA%E5%B1%8F2023-03-16%2010.15.21.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-10-16-20-%E6%88%AA%E5%B1%8F2023-03-16%2010.16.10.png"></p><h3 id="产品优势"><a href="#产品优势" class="headerlink" title="产品优势"></a>产品优势</h3><ul><li><p>使用便捷</p><ul><li><p>部署挑战</p><ul><li><p>复杂的架构和组件关系</p></li><li><p>大量个性化配置</p></li><li><p>多集群、混合云、异构应用</p></li></ul></li><li><p>基于托管组件</p><ul><li><p>提高社区兼容性</p></li><li><p>高可用、免运维、内建安全</p></li><li><p>数据平面可观测性</p></li><li><p>统一管理异构混合云</p></li></ul></li><li><p>一键式使用</p><ul><li><p>创建服务网格</p></li><li><p>升级服务网格</p></li></ul></li><li><p>灵活定义资源</p><ul><li><p>istio虚拟服务</p></li><li><p>目标规则</p></li><li><p>入口网管</p></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-11-24-39-%E6%88%AA%E5%B1%8F2023-03-16%2011.24.17.png"></p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-11-26-12-%E6%88%AA%E5%B1%8F2023-03-16%2011.25.02.png"></h3><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li><p>多语言应用微服务之治理</p><ul><li><p>金丝雀发布</p></li><li><p>无损上下线</p></li><li><p>服务鉴权</p></li><li><p>标签路由</p></li></ul></li><li><p>多集群应用统一流量管理</p><ul><li><p>多地域</p></li><li><p>混合云</p></li><li><p>灵活灾备</p></li></ul></li><li><p>应用容器化平滑上云</p><ul><li><p>存量应用迁移</p></li><li><p>无服务状态架构升级</p></li></ul></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>技术概要</p><ul><li><p>第一代服务网格</p></li><li><p>第二代服务网格</p></li><li><p>阿里云服务网格ASM</p></li></ul></li><li><p>产品架构</p></li><li><p>功能特点</p></li><li><p>产品优势</p></li><li><p>应用场景</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;技术概要&quot;&gt;&lt;a href=&quot;#技术概要&quot; class=&quot;headerlink&quot; title=&quot;技术概要&quot;&gt;&lt;/a&gt;技术概要&lt;/h</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASK应用场景</title>
    <link href="http://eryoung2.github.io/2023/03/15/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>http://eryoung2.github.io/2023/03/15/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/</id>
    <published>2023-03-15T15:42:18.000Z</published>
    <updated>2023-03-15T16:42:15.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ASK在线业务弹性伸缩的概况"><a href="#ASK在线业务弹性伸缩的概况" class="headerlink" title="ASK在线业务弹性伸缩的概况"></a>ASK在线业务弹性伸缩的概况</h2><h3 id="弹性伸缩特性"><a href="#弹性伸缩特性" class="headerlink" title="弹性伸缩特性"></a>弹性伸缩特性</h3><ul><li><p>特性</p><ul><li><p>根据业务需求和策略</p></li><li><p>经济地自动调整弹性计算资源</p></li></ul></li><li><p>维度</p><ul><li><p>调度层弹性：修改负载的调度容量变化</p></li><li><p>资源层弹性：补充ECI和集群容量规划</p></li></ul></li><li><p>场景</p><ul><li><p>在线业务弹性</p></li><li><p>大规模计算训练</p></li><li><p>深度学习或共享GPU的训练与推理</p></li><li><p>定时周期性负载变化</p></li></ul></li></ul><h3 id="容器水平伸缩"><a href="#容器水平伸缩" class="headerlink" title="容器水平伸缩"></a>容器水平伸缩</h3><ul><li><p>容器水平伸缩制作步骤</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-00-09-08-%E6%88%AA%E5%B1%8F2023-03-16%2000.08.51.png"></p></li><li><p>查看应用详情，单击容器组水平伸缩，可在部署的详情中查看伸缩组信息</p></li><li><p>在实际使用环境中，应用汇根据CPU负载进行伸缩</p></li></ul><h3 id="容器定时伸缩"><a href="#容器定时伸缩" class="headerlink" title="容器定时伸缩"></a>容器定时伸缩</h3><ul><li><p>kubernetes-cronhpa-controller: 按照类似Crontab的策略，定时对容器服务进行扩缩容</p></li><li><p>kubernetes-cronhpa-controller包括三项参数</p><ul><li><p>scaleTargetRef: 制定扩缩容对象</p></li><li><p>excludeDates: 日期数组，分、时、日、月、周、要做的事情</p></li><li><p>jobs: 支持在一个spec中设定多个cronhpa任务，其中name为必填项</p></li></ul></li><li><p>kubernetes-cronhpa-controller组件安装</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-00-13-44-%E6%88%AA%E5%B1%8F2023-03-16%2000.13.35.png"></p></li></ul><h3 id="指标容器水平伸缩"><a href="#指标容器水平伸缩" class="headerlink" title="指标容器水平伸缩"></a>指标容器水平伸缩</h3><ul><li><p>alibaba-cloud-metrics-adapter: 由检测指标来直到集群的扩缩容</p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-00-14-45-%E6%88%AA%E5%B1%8F2023-03-16%2000.14.37.png"></p></li></ul><h2 id="大数据Spark-on-Kubernetes"><a href="#大数据Spark-on-Kubernetes" class="headerlink" title="大数据Spark on Kubernetes"></a>大数据Spark on Kubernetes</h2><h3 id="Apache-Spark概述"><a href="#Apache-Spark概述" class="headerlink" title="Apache Spark概述"></a>Apache Spark概述</h3><ul><li><p>应用角色</p><ul><li><p>数据分析领域快速构建计算框架</p></li><li><p>大数据和机器学习工作负载</p></li></ul></li><li><p>应用架构</p><ul><li><p>Spark SQL&#x2F;DF: 处理结构化和半结构化数据</p></li><li><p>Spark Streaming: 处理实时流数据</p></li><li><p>Mlib: 机器学习库</p></li><li><p>GraphX: 图形计算库</p></li><li><p>Apache Spark Core API: 应用程序的平台</p></li></ul></li></ul><h3 id="ASK运行Spark的优势"><a href="#ASK运行Spark的优势" class="headerlink" title="ASK运行Spark的优势"></a>ASK运行Spark的优势</h3><ul><li><p>在Kubernetes上运行Spark工作负载</p><ul><li><p>应用的快速部署</p></li><li><p>集成化生命周期管理</p></li><li><p>解决版本匹配、兼容和依赖问题</p></li><li><p>重用基础架构、减少运维成本</p></li><li><p>支持多租户和用户力度的资源调度</p></li><li><p>基于Kubernetes的权限控制</p></li></ul></li><li><p>在ASK集群上运行Spark工作负载</p><ul><li><p>按需按量创建Pod</p></li><li><p>结束后停止计费</p></li><li><p>无需为Spark计算任务预留计算资源</p></li><li><p>无须担心集群计算力扩容问题</p></li></ul></li></ul><h3 id="运行Apache-Spark的工具"><a href="#运行Apache-Spark的工具" class="headerlink" title="运行Apache Spark的工具"></a>运行Apache Spark的工具</h3><ul><li><p>Spark Operator</p><ul><li><p>由Google官方支持的产品spark-on-k8s-operator</p></li><li><p>在Kubernetes上像其他工作负载一样用通用的方式方便地运行Spark应用</p></li><li><p>使用Kubernetes custom resource来配置、运行Spark应用，并展现其状态</p></li></ul></li><li><p>Alluxio</p><ul><li><p>面向云的数据分析和人工智能的开源的数据编排技术</p></li><li><p>为数据驱动型应用和存储系统构建桥梁，是数据更容易被访问</p></li></ul></li><li><p>TPC-DS Benchmark</p><ul><li>社区支持的第三方性能压测工具，协助确定解决方案的工业标准</li></ul></li></ul><h2 id="Knative-Serverless应用"><a href="#Knative-Serverless应用" class="headerlink" title="Knative Serverless应用"></a>Knative Serverless应用</h2><h3 id="Knative简介"><a href="#Knative简介" class="headerlink" title="Knative简介"></a>Knative简介</h3><ul><li><p>角色</p><ul><li><p>基于Kubernetes的Serverless解决方案</p></li><li><p>标准化Serverless技术架构</p></li><li><p>简化学习成本</p></li></ul></li><li><p>组件</p><ul><li><p>Build: 源到容器的构建和编排</p></li><li><p>Event: 消息传递层，事件交付管理 </p></li><li><p>Serving: 请求计算，基于负载自动伸缩</p></li></ul></li><li><p>优势</p><ul><li><p>便利性</p></li><li><p>标准化</p></li><li><p>服务间解耦</p></li><li><p>生态成熟</p></li><li><p>自动伸缩</p></li><li><p>应用监控</p></li></ul></li><li><p>Knative虽然开源，但是会称为Serverless的实施标准</p></li></ul><h3 id="ASK-Knative相比社区版优势"><a href="#ASK-Knative相比社区版优势" class="headerlink" title="ASK Knative相比社区版优势"></a>ASK Knative相比社区版优势</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-00-31-00-%E6%88%AA%E5%B1%8F2023-03-16%2000.30.52.png"></p><h3 id="ASK-Knative最佳实践"><a href="#ASK-Knative最佳实践" class="headerlink" title="ASK Knative最佳实践"></a>ASK Knative最佳实践</h3><ul><li><p>观测服务的QPS、RT和Pod扩缩容趋势</p><ul><li><p>配置Logstore</p></li><li><p>配置QPS统计</p></li><li><p>配置RT统计</p></li><li><p>配置Pod扩缩容趋势统计</p></li><li><p>观测服务运行状况</p></li></ul></li><li><p>观测服务的CPU和Memory使用情况</p><ul><li><p>ASK集群已开通Knative功能</p></li><li><p>集群已开通阿里云Prometheus监控功能</p></li><li><p>配置Prometheus监控目标ASK集群</p></li></ul></li></ul><h2 id="CI-x2F-CD流水线解决方案"><a href="#CI-x2F-CD流水线解决方案" class="headerlink" title="CI&#x2F;CD流水线解决方案"></a>CI&#x2F;CD流水线解决方案</h2><h3 id="方案背景"><a href="#方案背景" class="headerlink" title="方案背景"></a>方案背景</h3><ul><li><p>场景需求</p><ul><li><p>基于Jenkins构建自动化CI&#x2F;CD集群系统</p></li><li><p>集群资源合理利用，控制成本</p></li><li><p>集群高可用性需求</p></li><li><p>集群资源快速弹性伸缩</p></li></ul></li><li><p>方案优势</p><ul><li><p>高可用服务</p></li><li><p>自动弹性伸缩，资源合理应用</p></li><li><p>可扩展性好</p></li></ul></li><li><p>解决问题</p><ul><li><p>集群Master节点单点故障</p></li><li><p>集群资源利用率低</p></li><li><p>资源集群可扩展性差</p></li></ul></li><li><p>方案流程</p><ul><li><p>Git源码上传</p></li><li><p>Jenkins自动构建</p></li><li><p>K8s测试环境</p></li><li><p>Registry镜像存储</p></li><li><p>生产环境部署</p></li></ul></li></ul><h3 id="方案架构"><a href="#方案架构" class="headerlink" title="方案架构"></a>方案架构</h3><ul><li><p>服务高可用</p><ul><li>避免Master单点故障导致集群流程不可用</li></ul></li><li><p>弹性伸缩</p><ul><li><p>每次运行Job时，自动构建Jenkins Slave</p></li><li><p>Job完成之后，自动注销并删除容器</p></li><li><p>资源自动释放，节省成本</p></li></ul></li><li><p>资源合理应用</p><ul><li><p>动态分配Slave到空闲节点</p></li><li><p>降低出现由于节点资源限制的排队等待情况</p></li></ul></li><li><p>扩展性好</p><ul><li><p>集群资源严重不足时，可以快速添加节点</p></li><li><p>降低集群资源不足导致Job排队等情况</p></li></ul></li></ul><h3 id="事件概要"><a href="#事件概要" class="headerlink" title="事件概要"></a>事件概要</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/16-00-41-07-%E6%88%AA%E5%B1%8F2023-03-16%2000.40.59.png"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>ASK弹性伸缩特性</p></li><li><p>ASK弹性伸缩部署流程</p></li><li><p>Apache Spark在ASK上的部署方案</p></li><li><p>ASK Knative的优势和最佳实践</p></li><li><p>ASK上部署CI&#x2F;CD流水线的解决方案</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ASK在线业务弹性伸缩的概况&quot;&gt;&lt;a href=&quot;#ASK在线业务弹性伸缩的概况&quot; class=&quot;headerlink&quot; title=&quot;ASK在线业务弹性伸缩的概况&quot;&gt;&lt;/a&gt;ASK在线业务弹性伸缩的概况&lt;/h2&gt;&lt;h3 id=&quot;弹性伸缩特性&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASK弹性伸缩管理</title>
    <link href="http://eryoung2.github.io/2023/03/15/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E7%AE%A1%E7%90%86/"/>
    <id>http://eryoung2.github.io/2023/03/15/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E7%AE%A1%E7%90%86/</id>
    <published>2023-03-15T14:09:04.000Z</published>
    <updated>2023-03-15T14:24:32.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><ul><li><p>弹性伸缩式ASK上被广泛采用的功能，典型的场景包含在线业务弹性、大规模计算训练、深度学习GPU或共享GPU的训练与推理、定时周期负载变化等</p></li><li><p>弹性层次包括调度层和资源层</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/15-22-13-19-%E6%88%AA%E5%B1%8F2023-03-15%2022.12.28.png"></p><h3 id="容器水平伸缩HPA"><a href="#容器水平伸缩HPA" class="headerlink" title="容器水平伸缩HPA"></a>容器水平伸缩HPA</h3><ul><li><p>通过容器服务控制台创建HPA应用</p><ul><li><p>在集群列表页面中，单击目标集群名称或者目标集群右侧操作列下的详情</p></li><li><p>在工作负载 - 无状态页面中，单击使用镜像创建</p></li><li><p>在应用基本信息页面填写应用的名称，设置应用部署集群和命名空间，单击下一步</p></li><li><p>在高级设置页的访问设置区域，单击服务的创建，设置服务的相关信息</p></li><li><p>在高级设置页面中容器组水平伸缩的开启，设置伸缩的条件和配置</p></li><li><p>单击右下角的创建，一个支持HPA的Deployment就已经创建完毕</p></li></ul></li><li><p>验证结果</p><ul><li>在工作负载 - 无状态中单击应用名称或操作列的详情，单击容器伸缩，在详情中查看指标伸缩信息</li></ul></li></ul><h3 id="容器定时伸缩CronHPA"><a href="#容器定时伸缩CronHPA" class="headerlink" title="容器定时伸缩CronHPA"></a>容器定时伸缩CronHPA</h3><ul><li><p>通过容器服务控制台创建HPA应用</p><ul><li><p>创建一个新的Deployment并设置相关信息</p></li><li><p>在高级设置页选中定时伸缩的开启</p></li><li><p>设置定时任务名称、目标副本数、调度周期</p></li><li><p>单击右下角的创建，一个支持定时伸缩的Deployment就已经创建完毕</p></li></ul></li><li><p>验证结果</p><ul><li>在工作负载 - 无状态中单击应用名称或者操作列的详情，单击容器伸缩，在详情中查看定时伸缩CronHPA信息</li></ul></li><li><p>部署alibaba-cloud-metrics-adapter组件</p><ul><li>在右侧创建区域配置集群信息，并单击创建</li></ul></li></ul><h3 id="阿里云指标容器水平伸缩"><a href="#阿里云指标容器水平伸缩" class="headerlink" title="阿里云指标容器水平伸缩"></a>阿里云指标容器水平伸缩</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/15-22-21-45-%E6%88%AA%E5%B1%8F2023-03-15%2022.21.37.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/15-22-22-56-%E6%88%AA%E5%B1%8F2023-03-15%2022.22.28.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/15-22-23-17-%E6%88%AA%E5%B1%8F2023-03-15%2022.23.09.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/15-22-23-41-%E6%88%AA%E5%B1%8F2023-03-15%2022.23.33.png"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>ASK弹性伸缩管理模块的主要功能</p></li><li><p>ASK弹性伸缩的两种种类和实现</p></li><li><p>ASK弹性伸缩的定制化实现</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;背景介绍&quot;&gt;&lt;a href=&quot;#背景介绍&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASK网络、存储、日志、监控管理</title>
    <link href="http://eryoung2.github.io/2023/03/14/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E7%BD%91%E7%BB%9C%E3%80%81%E5%AD%98%E5%82%A8%E3%80%81%E6%97%A5%E5%BF%97%E3%80%81%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/"/>
    <id>http://eryoung2.github.io/2023/03/14/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E7%BD%91%E7%BB%9C%E3%80%81%E5%AD%98%E5%82%A8%E3%80%81%E6%97%A5%E5%BF%97%E3%80%81%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/</id>
    <published>2023-03-14T15:33:36.000Z</published>
    <updated>2023-03-14T16:07:14.139Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>包含网络容器CNI、服务Service、路由Ingress、安全组4项</p><h3 id="容器CNI"><a href="#容器CNI" class="headerlink" title="容器CNI"></a>容器CNI</h3><ul><li><p>阿里云Serverless Kubernetes服务、虚拟节点推出Pod挂载弹性公网ip功能，此功能使某些Serverless容器应用的部署和服务访问变得更加简单和便利</p><ul><li><p>无需创建VPC NAT网关即可让单个Pod访问公网</p></li><li><p>无需创建Service也可以让单个Pod暴露公网服务</p></li><li><p>可以更加灵活而且动态绑定Pod和EIP</p></li></ul></li></ul><h3 id="服务Service"><a href="#服务Service" class="headerlink" title="服务Service"></a>服务Service</h3><ul><li><p>Kubernetes Service定义了这样一种抽象：一个Pod的逻辑分组，一种可以访问它们的策略，通常称为微服务。</p></li><li><p>由于Pod会被频繁创建和删除，无法堆外直接进行服务，因此需要一个Pod的逻辑分组+访问策略，也就是Service</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/14-23-50-29-%E6%88%AA%E5%B1%8F2023-03-14%2023.49.14.png"></p><h3 id="路由Ingress"><a href="#路由Ingress" class="headerlink" title="路由Ingress"></a>路由Ingress</h3><ul><li><p>在kubernetes集群中，Ingress是Kubernetes中的一个资源对象，用来管理集群外部访问集群内部服务的方式</p></li><li><p>集群反向代理器，用ingress controller来解析转发规则，转发http&#x2F;https请求</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/14-23-52-14-%E6%88%AA%E5%B1%8F2023-03-14%2023.52.06.png"></p><h3 id="安全组"><a href="#安全组" class="headerlink" title="安全组"></a>安全组</h3><ul><li><p>安全组是一个逻辑上的分组，由同一地域内具有相同安全保护需求并相互信任的实例组成</p></li><li><p>一台ECI实例至少属于一个安全组</p></li><li><p>一个安全组可以管理同一个地域内的多台ECI实例</p></li><li><p>不同安全组内的ECI实例之间默认内网不通</p></li></ul><h2 id="管理配置"><a href="#管理配置" class="headerlink" title="管理配置"></a>管理配置</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>容器服务ASK支持自动绑定阿里云云盘(EBS)、阿里云文件存储NAS、阿里云对象存储OSS存储服务</p></li><li><p>容器服务支持静态存储卷和动态存储卷，具体如下：</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/14-23-56-03-%E6%88%AA%E5%B1%8F2023-03-14%2023.55.42.png"></p><ul><li>阿里云容器服务ASK集群支持Flexolume和CSI两种存储插件</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/14-23-57-37-%E6%88%AA%E5%B1%8F2023-03-14%2023.57.29.png"></p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="通过阿里云日志服务采集日志"><a href="#通过阿里云日志服务采集日志" class="headerlink" title="通过阿里云日志服务采集日志"></a>通过阿里云日志服务采集日志</h3><ul><li><p>打开集群工作负载下无状态页面，点击使用模板创建</p></li><li><p>新建并部署YAML模板，通过环境变量创建采集配置，所有与配置相关的环境变量都采用aliyun_logs_作为前缀</p></li><li><p>当YAML编写完成后，单击创建，即可将相应的配置交由集群执行</p></li></ul><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><ul><li><p>打开日志服务控制台，在Project列表区域选择Kubernetes集群对应的Project，进入日志库列表页签</p></li><li><p>在列表中找到相应的Logstore，打击，在下拉框中选择查询分析</p></li></ul><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="阿里云Prometheus监控"><a href="#阿里云Prometheus监控" class="headerlink" title="阿里云Prometheus监控"></a>阿里云Prometheus监控</h3><ul><li><p>阿里云Prometheus监控全面对接开源Prometheus生态</p></li><li><p>支持类型丰富的组件监控</p></li><li><p>提供多种开箱即用的预置监控大盘</p></li><li><p>提供全面托管的Proetheus服务</p></li><li><p>更轻量、更稳定、更准确的重试机制</p></li><li><p>数据量无上限</p></li><li><p>完全兼容开源生态</p></li><li><p>节省成本</p></li></ul><h3 id="开启阿里云Prometheus监控"><a href="#开启阿里云Prometheus监控" class="headerlink" title="开启阿里云Prometheus监控"></a>开启阿里云Prometheus监控</h3><ul><li><p>登录容器服务管理控制台</p></li><li><p>在控制台左侧导航栏中，选择市场 - 应用目录</p></li><li><p>在应用目录页面的阿里云应用页签中，搜索并单击ack-arms-prometheus</p></li><li><p>在右侧的创建区域中，选择目标集群，然后单击创建</p></li></ul><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><ul><li>单击ARMS控制台右侧的Prometheus监控，找到目标集群并单击已安装的插件进入大盘查看监控数据</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>ASK各个管理模块：</p><ul><li><p>网络管理</p></li><li><p>存储管理</p></li><li><p>日志管理</p></li><li><p>监控管理</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;网络&quot;&gt;&lt;a href=&quot;#网络&quot; class=&quot;headerlink&quot; title=&quot;网络&quot;&gt;&lt;/a&gt;网络&lt;/h2&gt;&lt;p&gt;包含网络容器CNI、服务Service、路由Ingress、安全组4项&lt;/p&gt;
&lt;h3 id=&quot;容器CNI&quot;&gt;&lt;a href=&quot;#容器CNI</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>整个宇宙只为你闪烁 - 陈雪然</title>
    <link href="http://eryoung2.github.io/2023/03/14/%E6%95%B4%E4%B8%AA%E5%AE%87%E5%AE%99%E5%8F%AA%E4%B8%BA%E4%BD%A0%E9%97%AA%E7%83%81-%E9%99%88%E9%9B%AA%E7%84%B6/"/>
    <id>http://eryoung2.github.io/2023/03/14/%E6%95%B4%E4%B8%AA%E5%AE%87%E5%AE%99%E5%8F%AA%E4%B8%BA%E4%BD%A0%E9%97%AA%E7%83%81-%E9%99%88%E9%9B%AA%E7%84%B6/</id>
    <published>2023-03-14T07:44:14.000Z</published>
    <updated>2023-03-14T07:57:36.723Z</updated>
    
    <content type="html"><![CDATA[<p>If I were gone tomorrow, would they wonder where I am?</p><p>If I were gone tomorrow, would they wonder how I am? </p><p>又奔波在，一样的路上，追赶来来往往的夕阳。</p><p>又停留在，一样的方向，有着多多少少已经忘记的梦想。 </p><p>当整个宇宙，它为你而闪烁，</p><p>请别走，因为是你值得拥有。</p><p>当整个宇宙，它为你而闪烁，    </p><p>请别走，因为是只为你闪烁。   </p><p>When the universe, it shine for you,</p><p>Please don’t go, it’s only for you, it’s only for you.</p><p>    </p><p>当整个宇宙，它为你而闪烁，</p><p>请别走，因为是你值得拥有。</p><p>当整个宇宙，它为你而闪烁，</p><p>请别走，因为是只为你闪烁。 </p><p>只为你闪烁……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;If I were gone tomorrow, would they wonder where I am?&lt;/p&gt;
&lt;p&gt;If I were gone tomorrow, would they wonder how I am? &lt;/p&gt;
&lt;p&gt;又奔波在，一样的路上，追赶来</summary>
      
    
    
    
    <category term="歌词" scheme="http://eryoung2.github.io/categories/%E6%AD%8C%E8%AF%8D/"/>
    
    
    <category term="三体" scheme="http://eryoung2.github.io/tags/%E4%B8%89%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>苹果电脑进入恢复模式</title>
    <link href="http://eryoung2.github.io/2023/03/14/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91%E8%BF%9B%E5%85%A5%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%BC%8F/"/>
    <id>http://eryoung2.github.io/2023/03/14/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91%E8%BF%9B%E5%85%A5%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-03-14T03:03:50.000Z</published>
    <updated>2023-03-14T04:16:15.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="Intel架构"><a href="#Intel架构" class="headerlink" title="Intel架构"></a>Intel架构</h2><p>重启电脑，按住Command+R，直到进入恢复模式。</p><h2 id="Arm架构"><a href="#Arm架构" class="headerlink" title="Arm架构"></a>Arm架构</h2><p>开机后一直按住电源键，即可进入恢复模式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;Intel架构&quot;&gt;&lt;a href=&quot;#Intel架构&quot; class=&quot;headerlink&quot; title=&quot;Intel架构&quot;&gt;&lt;/a&gt;Intel架</summary>
      
    
    
    
    <category term="操作系统" scheme="http://eryoung2.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Mac" scheme="http://eryoung2.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASK集群管理</title>
    <link href="http://eryoung2.github.io/2023/03/13/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/"/>
    <id>http://eryoung2.github.io/2023/03/13/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/</id>
    <published>2023-03-13T14:56:46.000Z</published>
    <updated>2023-03-13T15:14:26.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ASK操作"><a href="#ASK操作" class="headerlink" title="ASK操作"></a>ASK操作</h2><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><h4 id="通过容器服务控制台创建"><a href="#通过容器服务控制台创建" class="headerlink" title="通过容器服务控制台创建"></a>通过容器服务控制台创建</h4><ul><li><p>单击ASK集群页签，然后完成集群配置</p></li><li><p>在页面右侧，单击创建集群，在弹出的当前配置确认页面，单击确定，启动部署</p></li></ul><h4 id="通过CLI创建ASK集群"><a href="#通过CLI创建ASK集群" class="headerlink" title="通过CLI创建ASK集群"></a>通过CLI创建ASK集群</h4><ul><li><p>登录阿里云Cloud Shell</p></li><li><p>创建工作目录和配置文件</p></li><li><p>执行命令创建ASK集群</p></li></ul><h3 id="查看ASK集群信息"><a href="#查看ASK集群信息" class="headerlink" title="查看ASK集群信息"></a>查看ASK集群信息</h3><ul><li><p>通过容器服务控制台查看</p></li><li><p>在集群页面的控制台左侧导航栏中，单机集群信息</p></li><li><p>在集群的详情信息页面，可通过切换页签查看以下信息</p><ul><li><p>基本信息：查看集群ID、地域、API Server连接端点以及其他网络信息</p></li><li><p>连接信息：获取公网和内网环境下KubeConfig文件的配置内容</p></li><li><p>集群资源：查看集群所使用的相关云资源，通过单击相应的资源ID可以跳转至对应的控制台</p></li><li><p>集群日志：查看集群日志</p></li></ul></li></ul><h4 id="删除ASK集群"><a href="#删除ASK集群" class="headerlink" title="删除ASK集群"></a>删除ASK集群</h4><ul><li>通过容器服务控制台删除，阅读并选中“我已知晓以上信息并确认删除集群”，单击确定</li></ul><h4 id="管理和访问"><a href="#管理和访问" class="headerlink" title="管理和访问"></a>管理和访问</h4><ul><li><p>通过Kubectl链接Kubernetes集群</p></li><li><p>可以通过登录容器服务控制台，在集群信息页面查看集群凭据</p><ul><li><p>在控制台左侧导航栏中，单击集群</p></li><li><p>在集群列表页面中，单击目标机群名称或者目标集群右侧的详情</p></li><li><p>在基本信息页签，可以在集群信息处查看集群的链接地址</p></li><li><p>在连接信息页签，可以在配置集群凭据查看集群凭据</p></li></ul></li><li><p>通过Cloud Shell上通过kubectl管理Kubernetes集群</p><ul><li><p>登录容器服务控制台</p></li><li><p>在控制器左侧导航栏中，单击集群</p></li><li><p>在集群列表页面中，单击目标集群右侧操作列下的更多 - 通过Cloudshell管理集群</p></li></ul></li><li><p>通过公网访问集群API Server</p><ul><li><p>使用弹性公网EIP暴露ASK集群的API Server后，将获得从公网访问集群API Server的能力</p></li><li><p>可在创建集群的时候，选中使用EIP暴露API Server选项以启用该功能</p></li></ul></li></ul><h4 id="通过命令管理应用"><a href="#通过命令管理应用" class="headerlink" title="通过命令管理应用"></a>通过命令管理应用</h4><ol><li><p>在集群的Cloudshell中运行简单的容器</p></li><li><p>为该容器创建一个服务入口</p></li><li><p>通过命令查看容器</p></li></ol><h4 id="使用镜像创建应用"><a href="#使用镜像创建应用" class="headerlink" title="使用镜像创建应用"></a>使用镜像创建应用</h4><ul><li><p>配置应用基本信息</p><ul><li><p>登录容器服务控制台</p></li><li><p>在控制器左侧导航栏中，单击集群</p></li><li><p>在集群列表页面中，单击目标集群名称或者目标集群右侧操作列下的详情</p></li><li><p>在集群管理页左侧导航栏中，单击工作负载</p></li><li><p>在无状态页签中，单击使用镜像创建</p></li><li><p>在应用基本信息页面，设置应用的基本信息</p></li><li><p>单击下一步，进入容器配置页面</p></li><li><p>配置容器、设置端口、环境变量、健康检查区域</p></li><li><p>配置容器的生命周期</p></li><li><p>配置数据卷</p></li><li><p>高级配置，包括伸缩功能</p></li></ul></li><li><p>查看应用</p></li></ul><h4 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h4><ul><li><p>背景信息</p></li><li><p>创建服务</p></li><li><p>查看服务</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ASK操作&quot;&gt;&lt;a href=&quot;#ASK操作&quot; class=&quot;headerlink&quot; title=&quot;ASK操作&quot;&gt;&lt;/a&gt;ASK操作&lt;/h2&gt;&lt;h3 id=&quot;创建集群&quot;&gt;&lt;a href=&quot;#创建集群&quot; class=&quot;headerlink&quot; title=&quot;创建集群&quot;</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ECI介绍</title>
    <link href="http://eryoung2.github.io/2023/03/13/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ECI%E4%BB%8B%E7%BB%8D/"/>
    <id>http://eryoung2.github.io/2023/03/13/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ECI%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-03-13T06:35:34.000Z</published>
    <updated>2023-03-13T07:50:22.381Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ECI概述"><a href="#ECI概述" class="headerlink" title="ECI概述"></a>ECI概述</h2><ul><li><p>弹性容器实例ECI是阿里云在云原生时代为用户提供的基础计算服务，是阿里云云原生时代下的云计算基础设施。</p></li><li><p>ECI改变了以往计算服务以整台机器作为交付形态的传统，通过结合容器技术与无服务器技术为用户提供了一套安全便捷的Serverless服务。</p></li><li><p>使用ECI的过程中用户不再需要关注繁冗的底层基础设施维护工作，仅需提供打包好的容器镜像即可运行用户服务。</p></li><li><p>在颠覆传统资源交付形态的同事，用户还可以享受按实际消耗资源付费等便利，降低用户的实际使用成本。</p></li><li><p>ECI为Kubernetes提供了基础的容器Pod运行环境，但业务间的依赖、负载均衡、弹性伸缩、定期调度等能力依然需要Kubernetes来提供。</p></li><li><p>阿里云弹性容器实例ECI是面向容器的无服务器弹性计算服务；提供免运维、强隔离、快速启动的容器运行环境；使用ECI无需购买和管理底层ECS服务器，让您更加关注在容器应用而非底层基础设施的维护工作。</p></li></ul><h2 id="ECI-vs-ECS"><a href="#ECI-vs-ECS" class="headerlink" title="ECI vs ECS"></a>ECI vs ECS</h2><ul><li>对于整体的云原生基础设施来说，ECI和ECS是同级别的计算资源来产品。</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-14-47-46-%E6%88%AA%E5%B1%8F2023-03-13%2014.45.49.png"></p><ul><li><p>ECI相比ECS的优势：</p><ul><li><p>更低的计算成本：弹性成本低于ECS</p></li><li><p>更高的弹性效率：ECI扩容速度优于ECS</p></li><li><p>更大的弹性规模：ECI可直接、迅速对容器进行伸缩</p></li><li><p>持平的计算性能：ECI的计算效能与ECS差不多</p></li><li><p>更低的迁移成本：与现有容器应用生态完美集成</p></li><li><p>更低的使用成本：全自动化安全与运维能力</p></li></ul></li></ul><h2 id="ECI关键技术"><a href="#ECI关键技术" class="headerlink" title="ECI关键技术"></a>ECI关键技术</h2><ul><li><p>基于轻量化Micro VM的安全容器运行时，pod底层沙箱给与Micro VM而非ECS的cgroup namespace</p></li><li><p>基于Pod的基本调度单位和标准、开放的API接口</p></li><li><p>ECI与ECS并池架构，使得ECI的使用方式更多样、成本更低</p></li></ul><h2 id="ECI的优势"><a href="#ECI的优势" class="headerlink" title="ECI的优势"></a>ECI的优势</h2><h3 id="弹性"><a href="#弹性" class="headerlink" title="弹性"></a>弹性</h3><ul><li><p>弹性是云计算带给用户的最大价值之一，通过将业务部署在云上，用户基础设施的扩缩容等方面能够更加灵活。</p></li><li><p>当前ECI服务完全构建在弹性计算整体资源调度平台之上，在ECS服务使用相同的困村管理与调度策略。依托弹性计算强大的库存管理系统，ECI服务能够切实保证充足的库存，满足用户对极致弹性的需求。</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-06-02-%E6%88%AA%E5%B1%8F2023-03-13%2015.05.44.png"></p><h3 id="Serverless"><a href="#Serverless" class="headerlink" title="Serverless"></a>Serverless</h3><ul><li><p>Serverless技术的核心是将用户从繁冗的基础设施运维问题中拯救出来，让用户能够将精力专注于自身业务和服务上。</p></li><li><p>ECI通过结合容器技术和无服务器技术，将云厂商的运维边界从基础设施的整机层面提升到了容器运行时层面。</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-06-10-%E6%88%AA%E5%B1%8F2023-03-13%2015.05.55.png"></p><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><ul><li><p>安全问题可以细化为两个层面的问题：</p><ul><li><p>云平台自身的安全</p></li><li><p>用户自身的安全问题</p></li></ul></li><li><p>ECI选择基于袋鼠云云生容器引擎和轻量化Micro VM来实现安全、隔离的容器运行时。除了运行时的资源隔离之外，不同用户之间的网络、存储、库存、弹性SLO等一系列能力也就阿里云基础设施，实现了严格的多租隔离。</p></li><li><p>在性能方面，除了袋鼠容器引擎在OS&#x2F;容器方面的高度优化之外，ECI在容器执行上优化集成了现有阿里云基础设施能力。</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-10-14-%E6%88%AA%E5%B1%8F2023-03-13%2015.10.06.png"></p><h3 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h3><ul><li><p>ECI服务在管控、虚拟化、镜像拉取等多个层面在交付时间进行了优化。</p></li><li><p>借助于ECS服务共生的关系，通过优化ECI的管控系统能够更快地获取各类底层基础资源的情况，着重对创建链路进行优化，加快管控系统中ECI相关创建时间的处理速度。</p></li><li><p>在容器运行环境的创建中也采用了特殊的虚拟化技术，快速批量创建实例。</p></li><li><p>对容器镜像的拉去过程也进行了一定优化。</p></li></ul><h2 id="ECI-Pod"><a href="#ECI-Pod" class="headerlink" title="ECI Pod"></a>ECI Pod</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>安全隔离</p><ul><li>每个ECI实例底层通过轻量级安全沙箱技术完全墙隔离，实例间互不影响。</li></ul></li><li><p>ECI支持多种规格配置的方式来申请资源和计费</p><ul><li><p>指定CPU&#x2F;Memory，默认1c2g，按照单核单G * 使用规格 * 使用时长计费，按照秒来计费</p></li><li><p>制定Pod的ECS规格，按照规格单价 * 运行时长计费，按照秒来计费</p></li><li><p>抢占式实例：通过配置Annotation来使用</p></li></ul></li></ul><h3 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h3><ul><li>支持NFS、FlexVolume、PV&#x2F;PVC</li></ul><h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><ul><li><p>ECI Pod默认使用Host网络模式，占用交换机vSwitch的一个弹性网卡ENI资源</p></li><li><p>从外部连接Pod的方式包括：LoadBalancer Service、ClusterIP Service、EIP</p></li></ul><h3 id="镜像拉取和日志管理"><a href="#镜像拉取和日志管理" class="headerlink" title="镜像拉取和日志管理"></a>镜像拉取和日志管理</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-35-27-%E6%88%AA%E5%B1%8F2023-03-13%2015.35.19.png"></p><h3 id="创建ECI-Pod"><a href="#创建ECI-Pod" class="headerlink" title="创建ECI Pod"></a>创建ECI Pod</h3><ul><li><p>制定ECI实例内容器规格</p><ul><li><p>通过Kubernetes标准方式配置单个容器的CPU和内存，ECI的资源则是Pod内所有容器所需资源的总和。</p></li><li><p>每个ECI实例支持最多20个容器，实例内每个容器的资源支持自定义配置，但汇总到ECI实例级别需要满足CPU和内存约束。</p></li></ul></li><li><p>指定ECI Pod规格</p><ul><li>在指定ECI Pod级别的CPU和内存模式下，对于指定的CPU和内存规格，ECI会尝试使用多种ECS规格进行支撑，以提供比ECS单规格更好地库存和弹性能力。</li></ul></li><li><p>抢占式实例</p><ul><li>抢占式实例是一种低成本竞价型实例，您可以对阿里云当前闲置的资源出价，获得资源后运行容器，直到因为其他客户的更高出价而被回收容器资源，从而降低部分场景下使用ECI实例的成本</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-40-59-%E6%88%AA%E5%B1%8F2023-03-13%2015.40.50.png"></p></li></ul><h3 id="特殊实例"><a href="#特殊实例" class="headerlink" title="特殊实例"></a>特殊实例</h3><ul><li><p>抢占式实例</p><ul><li><p>抢占式实例适用于无状态的应用场景，例如可弹性伸缩的Web站点服务、图像渲染、大数据分析和大规模并行计算等。</p></li><li><p>应用程序的分布度、可扩展性和容错能力越高，越适合使用抢占式实例节省成本和提升吞吐量。</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-43-01-%E6%88%AA%E5%B1%8F2023-03-13%2015.42.52.png"></p></li><li><p>GPU实例</p><ul><li><p>ECI支持通过指定ECS GPU规格来创建ECI GPU实例。</p></li><li><p>GPU实例内置了对应的Docker镜像，因此使用ECI GPU实例时无需安装Tensorflow、CUDA Toolkit等实例。</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/13-15-44-44-%E6%88%AA%E5%B1%8F2023-03-13%2015.44.35.png"></p></li><li><p>AMD实例</p><ul><li><p>ECI支持通过制定ECS AMD规格进行实例的创建。</p></li><li><p>AMD实例依托神龙架构，将大量虚拟化功能卸载到专用软件，降低虚拟化开销，提供稳定可预期的超高性能。</p></li><li><p>AMD实例的适用范围：视频编解码、高网络包收发场景、Web前端服务器、MMO前端、测试开发</p></li></ul></li><li><p>多可用区的ECI Pod</p><ul><li>使用ASK的多可用区特性可以提高ECI实例的创建成功率。</li></ul></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>ECI概述</p><ul><li><p>ECI vs ECS</p></li><li><p>ECI关键技术</p></li><li><p>ECI优势</p></li></ul></li><li><p>ECI Pod概述</p><ul><li><p>ECI存储管理</p></li><li><p>ECI网络管理</p></li><li><p>创建ECI Pod</p></li><li><p>ECI特殊实例</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ECI概述&quot;&gt;&lt;a href=&quot;#ECI概述&quot; class=&quot;headerlink&quot; title=&quot;ECI概述&quot;&gt;&lt;/a&gt;ECI概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;弹性容器实例ECI是阿里云在云原生时代为用户提供的基础计算服务，是阿里云云原生时代下的云计算基础设</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ACK对比ASK</title>
    <link href="http://eryoung2.github.io/2023/03/12/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E5%AF%B9%E6%AF%94ASK/"/>
    <id>http://eryoung2.github.io/2023/03/12/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E5%AF%B9%E6%AF%94ASK/</id>
    <published>2023-03-12T06:36:38.000Z</published>
    <updated>2023-03-12T07:02:34.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们都知道，ACK与ASK是阿里云两种不同的业务形态，那么它们有何异同呢？</p><h2 id="ASK的容器是一等公民"><a href="#ASK的容器是一等公民" class="headerlink" title="ASK的容器是一等公民"></a>ASK的容器是一等公民</h2><p>由于ACK需要先部署ECS，然后在ECS上部署应用容器，这时容器就是二等公民；</p><p>而ASK无需部署ECS，可以直接在ECI上部署应用容器，因此容器是一等公民。</p><h2 id="ASK适用场景"><a href="#ASK适用场景" class="headerlink" title="ASK适用场景"></a>ASK适用场景</h2><p>由于ASK的弹性伸缩能力较ACK更强更灵活，所以适用场景均为弹性相关。</p><ol><li><p>应用托管</p></li><li><p>在线业务弹性</p></li><li><p>数据计算</p></li><li><p>CI&#x2F;CD持续集成</p></li><li><p>定时任务</p></li><li><p>测试环境</p></li></ol><h2 id="ASK核心功能"><a href="#ASK核心功能" class="headerlink" title="ASK核心功能"></a>ASK核心功能</h2><h3 id="虚拟节点"><a href="#虚拟节点" class="headerlink" title="虚拟节点"></a>虚拟节点</h3><ul><li><p>ASK集群中基于虚拟节点创建Pod</p><ul><li>虚拟节点实现了Kubernetes与弹性容器实例ECI的无缝连接，让Kubernetes集群获得极大的弹性能力，而不必关心底层计算虚拟容量。可通过客户端查看服务情况，虚拟节点不占用任何计算资源。</li></ul></li></ul><h3 id="Pod安全隔离"><a href="#Pod安全隔离" class="headerlink" title="Pod安全隔离"></a>Pod安全隔离</h3><ul><li><p>ASK集群中的Pod基于阿里云弹性容器实例ECI运行在安全隔离的容器运行环境中。</p></li><li><p>每个容器实例底层通过轻量级虚拟化安全沙箱技术完全强隔离，容器实例间互不影响。</p></li><li><p>实例在调度时尽可能分布在不同的物理机上，进一步保障了高可用性。</p></li><li><p>ECI的容器实例底层运行在Allibaba Cloud Linux2操作系统之上，ASK集群作为Serverless容器服务，您无法访问ECI底层OS运行环境。另外，此系统可免费使用。</p></li></ul><h3 id="Pod配置"><a href="#Pod配置" class="headerlink" title="Pod配置"></a>Pod配置</h3><ul><li><p>Pod基于弹性容器实例ECI创建，支持原生的Kubernetes Pod功能，包括启动多个容器、设置启动多个容器、设置环境变量、设置RestartPolicy、设置健康检查命令和挂载Volume、preStop等。</p></li><li><p>同时支持执行命令kubectl logs访问容器日志和智行kubectl exec进入容器</p></li><li><p>ECI支持多种规格配置的方式来申请资源和计费</p><ul><li><p>制定CPU和Memory，包括容器和pod两种</p></li><li><p>制定Pod的ECS规格</p></li><li><p>抢占式实例</p></li></ul></li></ul><h3 id="应用负载管理"><a href="#应用负载管理" class="headerlink" title="应用负载管理"></a>应用负载管理</h3><ul><li><p>支持Deployment、StatefulSet、Job&#x2F;CronJob、Pod、CRD等原生Kubernetes负载类型。</p></li><li><p>不支持DaemonSet，Serverless集群中不支持节点相关的功能</p></li></ul><h3 id="弹性伸缩"><a href="#弹性伸缩" class="headerlink" title="弹性伸缩"></a>弹性伸缩</h3><ul><li><p>ASK集群中没有真实节点</p><ul><li><p>无需考虑节点的容量规划</p></li><li><p>无需考虑基于cluster-autoscaler的节点扩容</p></li><li><p>只考虑应用的按需扩容</p></li></ul></li><li><p>可配置HPA或CronHPA策略进行Pod的灵活按需扩容</p></li></ul><h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><ul><li><p>群众的ECI Pod默认使用Host网络模式，占用交换机VSwitch的一个弹性网卡ENI资源，与VPC内的ECS、RDS互联互通。</p><ul><li><p>Service：不支持Nodeport模式</p></li><li><p>Ingress：需要先安装Ingress Controller</p></li><li><p>服务发现：需要先开启PrivateZone</p></li><li><p>弹性公网：支持给ECI Node挂载EIP，或自动创建然后绑定到EIP实例上</p></li></ul></li></ul><h3 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h3><ul><li><p>Pod支持挂载阿里云块存储和文件存储</p><ul><li><p>阿里云块存储(EBS)，需要先创建DiskController</p></li><li><p>阿里云文件存储(NAS)，可使用NFS方式挂载NAS目录，无需安装flex-volume插件，可直接制定NAS目录</p></li></ul></li></ul><h3 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h3><ul><li><p>在ASK集群中无需部署logtail daemonset即可收集Pod的stdout和文件输出日志</p></li><li><p>在Serverless Kubernetes集群中将业务容器的标准输出和日志文件收集到阿里云日志服务</p></li><li><p>ECI模式下不支持DaemonSet，通过将Job类任务挂载NAS盘，把输出的日志存储在NAS盘，在通过另一个同样挂载NAS盘的Pod来采集Job任务标准输出到日志系统中</p></li><li><p>日志服务支持在ECI中通过Sidecar模式采集日志</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/12-15-02-27-%E6%88%AA%E5%B1%8F2023-03-12%2015.02.04.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们都知道，ACK与ASK是阿里云两种不同的业务形态，那么它们有何异同呢？&lt;/p&gt;
&lt;h2 id=&quot;ASK的容器是一等公民&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ASK概述与产品介绍</title>
    <link href="http://eryoung2.github.io/2023/03/11/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/"/>
    <id>http://eryoung2.github.io/2023/03/11/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ASK%E6%A6%82%E8%BF%B0%E4%B8%8E%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-03-11T07:35:23.000Z</published>
    <updated>2023-03-11T09:23:00.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Serverless基本概念"><a href="#Serverless基本概念" class="headerlink" title="Serverless基本概念"></a>Serverless基本概念</h3><p>对于传统云服务来说，我们需要购买的基础设施是服务器节点ECS，然后在ECS上自行部署应用或者部署其余付费应用，但是我们为了更好地适应应用的使用情况，有时并不需要ECS支持，这样可以更轻量地部署应用，成本也会更低。这就是阿里云无服务Kubernetes(ASK)的基本概念。</p><ul><li><p>特点：</p><ul><li><p>用户无需购买和管理服务器</p></li><li><p>直接部署容器应用</p></li><li><p>提高容器应用部署的敏捷度和弹性能力</p></li><li><p>降低用户计算成本</p></li><li><p>让用户聚焦业务应用</p></li></ul></li><li><p>优势：</p><ul><li><p>敏捷部署、安全隔离、生态链接、高移植性</p></li><li><p>无需节点容量规划</p></li><li><p>无需OS和系统软件维护</p></li><li><p>零基础设施运维</p></li><li><p>“无限”容量、秒级扩容、基于容器扩容</p></li><li><p>更高的资源利用率、更低计算成本</p></li></ul></li></ul><h3 id="发展趋势"><a href="#发展趋势" class="headerlink" title="发展趋势"></a>发展趋势</h3><ul><li><p>两种技术趋势的整合</p><ul><li><p>云平台托管的后台服务BaaS</p></li><li><p>无状态计算模型：函数服务FaaS</p></li></ul></li><li><p>Gartner</p><ul><li>到2023年，70% AI任务会通过容器、Serverless等计算模型构建</li></ul></li><li><p>AWS</p><ul><li>在2019年 40%的ECS新客户采用Serverless Container</li></ul></li><li><p>采纳Serverless技术的行业广泛</p><ul><li>外包经济、金融业、服务业</li></ul></li><li><p>Serverless是云计算必经的一场革命，会越来越流行</p></li></ul><h3 id="架构思考"><a href="#架构思考" class="headerlink" title="架构思考"></a>架构思考</h3><ul><li><p>Serverless场景的容器不是部署在传统的ECS上，而是部署在ECI上。然而ECS和ECI并不冲突，可以混合使用</p></li><li><p>不同于标准K8s，Serverless K8s与IaaS基础设施深度融合，其产品模式更利于公有云厂商通过技术创新，提升规模、效率和能力</p></li><li><p>Serverless也分成容器编排和计算资源池两层。</p></li><li><p>Serverless的几个技术要点：声明式API、可扩展性架构、可移植性</p></li></ul><h3 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h3><ul><li><p>Serverless并不是一个单独的技术，必须兼容Kuubernetes生态，提供K8s的核心价值，此外要能和云的能力深度整合。</p></li><li><p>用户可以直接使用Kubernetes的声明式API，Deployment、StatefulSet、Job、Service等无需修改</p></li><li><p>全兼容Kuberenetes的扩展机制，这样才能让Serverless Kubernetes支持更多的工作负载，此外Serverless K8s自身的组件也是严格遵守K8s的状态逼近的控制模式</p></li><li><p>Kubernetes的能力尽可能充分利用云的能力来实现，比如资源的调度、负载均衡、服务发现等。根本性简化容器平台的设计，提升规模，降低用户运维复杂性</p></li><li><p>这些实现应该对用户透明，保证可移植性，让用户现有应用可以平滑部署在Serverless K8s之上，也应该允许用户应用混合部署在传统容器和Serverless容器之上</p></li></ul><h3 id="Nodeless"><a href="#Nodeless" class="headerlink" title="Nodeless"></a>Nodeless</h3><ul><li><p>对于传统的Kubernetes来说，采用以节点为中心的架构设计：</p><ul><li><p>节点是Pod的运行载体，Kubernetes调度器在工作节点池中选择合适的node来运行pod，并利用kubelet完成对pod进行生命周期管理和自动化运维</p></li><li><p>当节电池资源不够时，需要对节点池进行扩容，再对容器化应用进行扩容</p></li></ul></li><li><p>对于Serverless Kubernetes来说</p><ul><li><p>没有节点这个概念</p></li><li><p>容器化应用是一等公民</p></li><li><p>极大简化容器弹性实现，无需按照容量规划，按需创建容器应用pod即可</p></li><li><p>Serverless容器运行时可以被整个晕弹性计算基础设施所支撑，保障整体弹性的成本和规模</p></li></ul></li></ul><h3 id="现有产品的架构"><a href="#现有产品的架构" class="headerlink" title="现有产品的架构"></a>现有产品的架构</h3><h4 id="初始架构-Viking"><a href="#初始架构-Viking" class="headerlink" title="初始架构-Viking"></a>初始架构-Viking</h4><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/11-16-21-12-%E6%88%AA%E5%B1%8F2023-03-11%2016.20.47.png"></p><h4 id="优化方向"><a href="#优化方向" class="headerlink" title="优化方向"></a>优化方向</h4><ol><li><p>可伸缩性 - ECI</p></li><li><p>基于云的控制器实现 - PrivateZone、SLB、SLB&#x2F;ALB</p></li><li><p>面向负载的深度优化 - Knative、垂直优化</p></li></ol><h2 id="ASK产品介绍"><a href="#ASK产品介绍" class="headerlink" title="ASK产品介绍"></a>ASK产品介绍</h2><ul><li><p>是阿里云推出的无服务器Kubernetes容器服务</p></li><li><p>无需购买节点即可直接部署容器应用，无需对集群进行节点维护和容量规划，并且饿根据应用配置的CPU和内存资源量进行按需付费（非包年包月，因为没有制程规格的节点）</p></li><li><p>提供完善的Kubernetes兼容能力，同时降低了Kubernetes使用门槛，更专注于应用本身，而不是基础设施</p></li><li><p>ASK集群中的Pod给予阿里云弹性容器实例ECI运行在安全隔离的容器运行环境中</p></li><li><p>每个Pod容器实例底层通过轻量级虚拟化安全沙箱技术完全抢格力，容器实例间互不影响。</p></li></ul><h3 id="核心优势"><a href="#核心优势" class="headerlink" title="核心优势"></a>核心优势</h3><ol><li><p>简单易用：无门槛，秒级部署容器应用</p></li><li><p>秒级伸缩：无需担心集群容量规划</p></li><li><p>安全隔离：通敌底层沙箱进行强安全隔离</p></li><li><p>降低成本：按需计费，无资源闲置费用</p></li><li><p>原生兼容：支持原生k8s应用和生态，service、helm、ingress等</p></li><li><p>服务集成：支持与其他云组件(数据库、vpc中现有应用直接交汇)</p></li></ol><h3 id="无节点管理-nodeless"><a href="#无节点管理-nodeless" class="headerlink" title="无节点管理(nodeless)"></a>无节点管理(nodeless)</h3><ul><li><p>更多专注于应用的开发，而不是基础设施的维护。更多关注pod&#x2F;service&#x2F;ingress&#x2F;job等应用编排语义上，更少对底层node进行关注。</p></li><li><p>无需管理节点也可以显著降低集群的运维管理成本，比如node的安全管理、监控&#x2F;日志管理、基础系统软件的升级和维护</p></li><li><p>在ASK集群中，我们使用虚拟节点virtual-kubelet代替ECS节点，此virtual-kubelet节点的容量可以认为是“无限大”，用户无需为集群的容量担忧，无需预先做容量规划</p></li></ul><h3 id="Serverless-kubernetes-vs-Classic-Kubernetes"><a href="#Serverless-kubernetes-vs-Classic-Kubernetes" class="headerlink" title="Serverless kubernetes vs Classic Kubernetes"></a>Serverless kubernetes vs Classic Kubernetes</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/11-16-38-33-%E6%88%AA%E5%B1%8F2023-03-11%2016.38.25.png"></p><h3 id="无Master管理与极简的K8s"><a href="#无Master管理与极简的K8s" class="headerlink" title="无Master管理与极简的K8s"></a>无Master管理与极简的K8s</h3><ul><li><p>与ACK托管版一样，ASK的Master等资源(apiserver, ccm, kcm等)被容器服务平台托管，用户无需管理这些核心组件的升级和运维，也不需要成本</p></li><li><p>ASK对Kubernetes进行大量简化，包括默认托管很多addon，用户无需在管理一些基础的addon，也不需要对此付费</p></li><li><p>依赖阿里元原生的网络和存储等能力，以及独特的托管架构设计，ASK提供了极简但功能完备的Kubernetes基础运行环境</p></li></ul><h3 id="简化弹性伸缩"><a href="#简化弹性伸缩" class="headerlink" title="简化弹性伸缩"></a>简化弹性伸缩</h3><ul><li><p>因为无需管理节点和容量规划，当集群需要扩容时也就不需要考虑节点层面的扩容，只需要关注pod的扩容，这对于扩容的速度和效率都是极大的提升</p></li><li><p>ASK&#x2F;ECI的方式被刻意用来快速应对业务流量高峰</p></li><li><p>当前ASK&#x2F;ECI支持30s完全启动500个pod，单个pod启动可以达到10s以内</p></li></ul><h3 id="更低的成本"><a href="#更低的成本" class="headerlink" title="更低的成本"></a>更低的成本</h3><ul><li><p>除去ASK集群本身的低成本创建外，pod的按需使用也让很多场景下资源利用率达到最优。对于很多Jobs或者数据计算场景而言，用户并不需要长期维护一个固定的资源池，这时ASK&#x2F;ECI可以很好地支持这些诉求</p></li><li><p>若pod一天运行少于16小时，使用ASK更加经济实惠；若超过16小时，使用ACK更加经济实惠。</p></li></ul><h3 id="ECI-快速交付容器资源的弹性计算服务"><a href="#ECI-快速交付容器资源的弹性计算服务" class="headerlink" title="ECI: 快速交付容器资源的弹性计算服务"></a>ECI: 快速交付容器资源的弹性计算服务</h3><ul><li><p>ECI是阿里云基于ECS IaaS资源池提供的稳定、高效、高弹性容器实例服务</p></li><li><p>ECI让容器成为了公有云的一等公民，用户无需购买和管理ECS就可以直接部署容器应用，这种假话的容器实例产品形态和ASK形成了一个完美地组合</p></li><li><p>用户可以直接使用ECI Open API创建容器资源实例，但在容器场景中用户普遍需要一个编排系统，来负责容器的调度、高可用编排等能力，而ASK正式这样的Kubernetes编排层。</p></li><li><p>对于ASK而言</p><ul><li><p>ECI让ASK容器服务免去了搭建后台计算资源池的必要，更不用为底层计算资源池的容量而担忧</p></li><li><p>基于ECI就意味着基于整个阿里云IaaS规模化资源池，天然拥有了库存和弹性优势</p></li><li><p>另外ECI和ECS复用资源池意味着 我们可以最大化释放规模化红利，给用户提供更低成本的计算服务</p></li></ul></li></ul><h3 id="容器生态支持"><a href="#容器生态支持" class="headerlink" title="容器生态支持"></a>容器生态支持</h3><ul><li><p>ASK比较适合的场景：</p><ul><li><p>CI&#x2F;CD</p></li><li><p>数据计算</p></li><li><p>AI</p></li><li><p>ServiceMesh</p></li><li><p>测试</p></li></ul></li><li><p>ASK集群不支持Helm v2，近期ACK&#x2F;ASK会发布Helm v3的支持，之后用户可以非常方便地在ASK集群中部署Charts</p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>ASK基本概念</p></li><li><p>ASK产品介绍</p></li><li><p>ASK优势</p></li><li><p>ASK架构介绍与思考</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;h3 id=&quot;Serverless基本概念&quot;&gt;&lt;a href=&quot;#Serverless基本概念&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ACK应用与发布管理</title>
    <link href="http://eryoung2.github.io/2023/03/10/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E5%BA%94%E7%94%A8%E4%B8%8E%E5%8F%91%E5%B8%83%E7%AE%A1%E7%90%86/"/>
    <id>http://eryoung2.github.io/2023/03/10/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E5%BA%94%E7%94%A8%E4%B8%8E%E5%8F%91%E5%B8%83%E7%AE%A1%E7%90%86/</id>
    <published>2023-03-10T06:44:25.000Z</published>
    <updated>2023-03-10T07:28:35.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>ACK应用与发布管理包括4种方式：</p><ul><li><p>灰度发布</p></li><li><p>手动发布</p></li><li><p>自动发布</p></li><li><p>Helm发布</p></li></ul><h2 id="灰度发布-又名金丝雀发布"><a href="#灰度发布-又名金丝雀发布" class="headerlink" title="灰度发布(又名金丝雀发布)"></a>灰度发布(又名金丝雀发布)</h2><h3 id="灰度发布概念"><a href="#灰度发布概念" class="headerlink" title="灰度发布概念"></a>灰度发布概念</h3><ul><li><p>灰度发布是将应用的旧版本A与新版本B同时部署在环境中，业务请求可能会被路由到版本A或者版本B的后端上，您可以自定义灰度发布策略，快速调整版本A和版本B的流量占比。</p></li><li><p>灰度发布可以再发布新版本应用时：</p><ul><li><p>自定义控制新版本应用流量比重</p></li><li><p>渐进式完成新版本应用的全量上线</p></li><li><p>最大限度地控制新版本发布带来的业务风险，降低故障带来的影响</p></li><li><p>同时支持快速回滚</p></li></ul></li></ul><h3 id="灰度发布实现"><a href="#灰度发布实现" class="headerlink" title="灰度发布实现"></a>灰度发布实现</h3><p>灰度发布是可以帮助您渐进式更新Deployment的工具</p><ul><li><p>他能结合路由控制器Ingress Controller实现多版本并存，发布暂停、流量百分比切换、健康检查等功能</p></li><li><p>极大解放灰度发布过程中的手动操作，全自动化实现线上灰度流量切换</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/10-15-07-11-%E6%88%AA%E5%B1%8F2023-03-10%2015.06.34.png"></p><h3 id="安装灰度发布组件"><a href="#安装灰度发布组件" class="headerlink" title="安装灰度发布组件"></a>安装灰度发布组件</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/10-15-07-22-%E6%88%AA%E5%B1%8F2023-03-10%2015.06.51.png"></p><h2 id="手动发布"><a href="#手动发布" class="headerlink" title="手动发布"></a>手动发布</h2><ul><li><p>在使用灰度发布的手动发布方式的时候，您需要创建一个Ingress、Service和Deployment结构的应用。</p></li><li><p>目前灰度发布只支持基于Deployment和Ingress的灰度发布流程。</p></li></ul><h3 id="手动发布流程"><a href="#手动发布流程" class="headerlink" title="手动发布流程"></a>手动发布流程</h3><ol><li><p>创建测试应用：可使用YAML文件来创建Deployment、Ingress向外暴露服务</p></li><li><p>创建灰度发布：创建灰度发布时，设置上述创建的Deployment、Service、Ingress，然后设置发布方式为手动发布</p></li><li><p>执行灰度发布：</p><ul><li><p>初始化完毕后，就可以进行灰度发布</p></li><li><p>开始灰度发布前，您需要更新应用</p></li></ul></li><li><p>查看历史记录：在灰度发布页面的历史记录区域，您可以查看所有创建的灰度发布的发布记录，在每个创建的灰度发布详情页面下方的发布日志区域，查看发布过程。</p></li></ol><h2 id="自动发布"><a href="#自动发布" class="headerlink" title="自动发布"></a>自动发布</h2><p>自动发布模式可以让您全自动化地完成灰度发布流程。</p><h3 id="自动发布流程"><a href="#自动发布流程" class="headerlink" title="自动发布流程"></a>自动发布流程</h3><ol><li><p>创建测试应用：可使用YAML文件来创建Deployment、Ingress向外暴露服务</p></li><li><p>创建灰度发布：创建灰度发布时，设置上述创建的Deployment、Service、Ingress，然后设置发布方式为自动发布，然后灰度发布即可自动运行。</p></li><li><p>查看历史记录：在灰度发布页面的历史记录区域，您可以查看所有创建的灰度发布的发布记录，在每个创建的灰度发布详情页面下方的发布日志区域，查看发布过程。</p></li></ol><h2 id="基于Helm的发布管理"><a href="#基于Helm的发布管理" class="headerlink" title="基于Helm的发布管理"></a>基于Helm的发布管理</h2><ul><li><p>阿里云Kubernetes服务集成了Helm包管理工具，帮助您快速构建云上应用，因为chart可以多次发布，这就带来一个发布版本管理的问题</p></li><li><p>因此，阿里云Kubernetes提供了发布功能，通过Web界面的方式对通过Helm发布的应用进行管理。</p></li></ul><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li><p>已经成功创建一个Kubernetes集群</p></li><li><p>已开通了应用目录或者服务目录功能，安装了Helm应用</p></li></ul><h3 id="查看发布详情"><a href="#查看发布详情" class="headerlink" title="查看发布详情"></a>查看发布详情</h3><ol><li><p>登录容器服务管理控制台</p></li><li><p>在控制台左侧导航栏中，单击集群</p></li><li><p>在集群列表页面中，单击目标集群名称或者目标集群右侧操作栏下的详情</p></li><li><p>在集群管理业左侧导航栏中，单击应用</p></li><li><p>单击Helm页签，进入发布列表页面</p></li><li><p>查看发布的详情信息，单击右侧的详情，进入该发布的详情页面</p></li><li><p>单击参数页签，您可查看该Helm包的参数设置</p></li></ol><h3 id="发布更新的版本"><a href="#发布更新的版本" class="headerlink" title="发布更新的版本"></a>发布更新的版本</h3><ol><li><p>在控制台左侧导航栏中，单击集群</p></li><li><p>在集群列表页面中，单击目标集群名称或者目标集群右侧操作栏下的详情</p></li><li><p>在集群管理业左侧导航栏中，单击应用</p></li><li><p>单击Helm页签，进入发布列表页面</p></li><li><p>您可更新该发布，单击右侧的更新，弹性更新发布对话框</p></li><li><p>在更新发布对话框中修改相关参数，随后单击更新，可对该发布进行更新</p></li></ol><h3 id="发布回滚"><a href="#发布回滚" class="headerlink" title="发布回滚"></a>发布回滚</h3><ol><li><p>单击Helm页签，进入发布列表页面</p></li><li><p>您可删除该发布，单击右侧的删除</p></li><li><p>在删除应用对话框中，勾选是否清楚发布记录，然后单击确定，可将应用、服务、部署一并删除。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;ACK应用与发布管理包括4种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;灰度发布&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;手动发布&lt;/p&gt;
&lt;/li&gt;</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - 安全管理</title>
    <link href="http://eryoung2.github.io/2023/03/10/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86/"/>
    <id>http://eryoung2.github.io/2023/03/10/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86/</id>
    <published>2023-03-10T05:25:49.000Z</published>
    <updated>2023-03-10T05:44:18.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阿里云容器服务ACK安全体系"><a href="#阿里云容器服务ACK安全体系" class="headerlink" title="阿里云容器服务ACK安全体系"></a>阿里云容器服务ACK安全体系</h2><ul><li><p>阿里云容器服务Kubernetes版安全体系</p><ul><li><p>提供从基础设施到上层用户业务应用全链条安全体系支撑</p></li><li><p>支持运行时刻的安全策略管理，应用安全配置巡检和运行时刻的安全监控和告警</p></li><li><p>提升容器安全整体纵深防御能力</p></li></ul></li><li><p>主要分为3个层级：运行时安全、可信软件供应链、基础架构安全</p></li></ul><h2 id="基础架构安全"><a href="#基础架构安全" class="headerlink" title="基础架构安全"></a>基础架构安全</h2><ul><li><p>从公有云、专有云、混合云等多角度覆盖</p></li><li><p>通过集群安全加固、身份验证管理、细粒度安全访问控制、集群日志审计、敏感数据加密等多个环节保障集群基础设施安全稳定高效运行</p></li><li><p>与ACK&#x2F;SLS深度绑定，可查询多维度的日志信息，以进行审计</p></li><li><p>KMS保证敏感数据安全加密</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/10-13-42-58-%E6%88%AA%E5%B1%8F2023-03-10%2013.42.46.png"></p><h2 id="可信软件供应链"><a href="#可信软件供应链" class="headerlink" title="可信软件供应链"></a>可信软件供应链</h2><ul><li><p>安全是企业在应用容器技术时最大的顾虑之一</p></li><li><p>为了系统化提升容器平台的安全性，就需要全方位进行安全防护</p></li><li><p>阿里云的做法是：</p><ul><li><p>将DevOps升级为DevSecOps</p></li><li><p>将安全概念融入整个软件生命周期之中</p></li><li><p>将安全防护能力转移到开发和交互阶段</p></li></ul></li><li><p>安全措施包括：镜像扫描、镜像签名、云原生应用交付链</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/10-13-42-23-%E6%88%AA%E5%B1%8F2023-03-10%2013.38.02.png"></p><h2 id="运行时安全"><a href="#运行时安全" class="headerlink" title="运行时安全"></a>运行时安全</h2><ul><li><p>安全巡检：ACK集群提供了应用运行时刻的安全配置巡检能力，帮您实时了解当前转台下运行应用的配置是否存在安全隐患</p></li><li><p>策略管理：安全策略PSP时Kubernetes中Pod部署时重要的安全校验手段，能够有效地约束应用运行时的行为安全</p></li><li><p>运行时监控和告警：阿里云容器服务和云安全中心深度集成了告警处理和漏洞检测能力，在应用运行时提供监控和告警能力</p></li><li><p>安全沙箱管理：安全沙箱为您提供一种新的容器运行时选项，可以让您的应用运行在一个轻量虚拟机沙箱环境中，拥有独立的内核、具备更好的安全隔离能力</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;阿里云容器服务ACK安全体系&quot;&gt;&lt;a href=&quot;#阿里云容器服务ACK安全体系&quot; class=&quot;headerlink&quot; title=&quot;阿里云容器服务ACK安全体系&quot;&gt;&lt;/a&gt;阿里云容器服务ACK安全体系&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;阿里云容器服务Kubern</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - 集群管理</title>
    <link href="http://eryoung2.github.io/2023/03/10/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/"/>
    <id>http://eryoung2.github.io/2023/03/10/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/</id>
    <published>2023-03-09T16:48:39.000Z</published>
    <updated>2023-03-10T06:43:28.774Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集群升级"><a href="#集群升级" class="headerlink" title="集群升级"></a>集群升级</h2><ul><li><p>可以通过容器服务控制台，可视化升级集群的Kubernetes版本</p></li><li><p>可以在kuberenetes集群列表页面查看集群的Kubernetes版本，以及当前是否有新的版本可供升级。升级集群的过程包含前置检查、升级Master、升级Node</p></li><li><p>集群升级策略：</p><ul><li><p>定义了您将使用怎样的策略对集群进行升级</p></li><li><p>默认策略为分批升级</p></li><li><p>升级Node阶段对集群内的节点进行分批升级，具体策略为：</p><ol><li><p>第一批升级的节点数为1，后续的批次为2的幂数进行增长。暂停后重新恢复升级的第一批次为1，后续也是以2的幂数进行增长。</p></li><li><p>每一批节点的最大数量不会超过节点总数的10%</p></li></ol></li></ul></li><li><p>集群升级前置检查在您开始集群升级之后，ACK会为您自动启动集群升级前置检查</p></li><li><p>该检查会对集群进行多项健康检查，以确保您的集群可以顺利的完成此次升级</p></li><li><p>如果您的集群存在不合理配置或潜在风险，将无法通过前置检查。</p></li><li><p>集群可以升级暂停或者升级停止，已完成的节点就升级完毕了，未升级的节点不升级。</p></li></ul><h2 id="管理维护组件步骤"><a href="#管理维护组件步骤" class="headerlink" title="管理维护组件步骤"></a>管理维护组件步骤</h2><ol><li><p>登录容器管理控制台</p></li><li><p>在控制台左侧导航栏中，单击集群</p></li><li><p>在集群列表页面，选择目标肌群，并在目标集群右侧操作列下，选择更多-系统组件管理</p></li><li><p>在组件管理页面，您可以：</p><ul><li><p>选择需要安装的组件，单击安装</p></li><li><p>选择需要卸载的组件，单击卸载</p></li><li><p>选择需要升级的组件，单击升级</p></li></ul></li></ol><p>组件主要包含：核心组件、存储组件、应用管理组件、网络组件、日志与监控组件、安全组件、其他组件</p><ul><li>核心组件无法卸载！</li></ul><h2 id="扩容集群步骤"><a href="#扩容集群步骤" class="headerlink" title="扩容集群步骤"></a>扩容集群步骤</h2><ol><li><p>登录容器服务管理控制台</p></li><li><p>在控制台左侧导航栏中，单击集群</p></li><li><p>在集群列表页面，选择目标集群，并在目标集群右侧操作列下，选择更多-集群扩容</p></li><li><p>在集群扩容页面进行扩容配置</p></li><li><p>根据业务需求扩容所需要的节点配置</p></li><li><p>配置内容与Worker节点配置一致</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集群升级&quot;&gt;&lt;a href=&quot;#集群升级&quot; class=&quot;headerlink&quot; title=&quot;集群升级&quot;&gt;&lt;/a&gt;集群升级&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可以通过容器服务控制台，可视化升级集群的Kubernetes版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以在</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - ACK自动伸缩</title>
    <link href="http://eryoung2.github.io/2023/03/09/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E8%87%AA%E5%8A%A8%E4%BC%B8%E7%BC%A9/"/>
    <id>http://eryoung2.github.io/2023/03/09/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E8%87%AA%E5%8A%A8%E4%BC%B8%E7%BC%A9/</id>
    <published>2023-03-09T05:59:48.000Z</published>
    <updated>2023-03-09T06:22:18.407Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>弹性伸缩是ACK特点功能之一，典型的场景包括：</p><ul><li><p>在线业务弹性</p></li><li><p>大规模计算训练</p></li><li><p>定时周期性负载变化等</p></li></ul><p>弹性伸缩分为两个维度：</p><ul><li><p>弹性调度层：主要负责修改负载的调度容量变化，在已有资源条件下进行pod调度</p></li><li><p>资源弹性层：主要负责扩充资源的方式调度容量的补充，对资源本社进行调度</p></li></ul><h2 id="资源层阶段弹性提供"><a href="#资源层阶段弹性提供" class="headerlink" title="资源层阶段弹性提供"></a>资源层阶段弹性提供</h2><ul><li><p>阿里云Kubernetes集群的一个重要特性，是集群的节点可以动态的增加或减少</p></li><li><p>有了这个特性，集群才能在计算资源不足的情况下扩充新的节点</p></li><li><p>同时，也可以在资源利用率降低的时候，释放节点以节省费用</p></li><li><p>资源层扩缩容可以分为：手动扩缩容、自动扩缩容</p></li></ul><h3 id="资源层弹性插件"><a href="#资源层弹性插件" class="headerlink" title="资源层弹性插件"></a>资源层弹性插件</h3><ul><li><p>Cluster-autoscaler: Kubernetes社区开源组件，节点水平伸缩软件，阿里云提供了独有的调度、弹性优化、成本优化的功能。</p></li><li><p>Virtual-node: ACK开源插件，提供无服务器运行时环境，开发者无需挂心节点资源，只需针对Pod按量付费即可。</p></li><li><p>Virtual-kubelet-autoscaler: ACK服务组件，提供无服务弹性伸缩能力</p></li></ul><h2 id="节点自动伸缩"><a href="#节点自动伸缩" class="headerlink" title="节点自动伸缩"></a>节点自动伸缩</h2><h3 id="节点自动伸缩机制"><a href="#节点自动伸缩机制" class="headerlink" title="节点自动伸缩机制"></a>节点自动伸缩机制</h3><p>定期检测集群中应用pod的状态，如果处于pending状态且日志中出现调度原因不足时，会触发cluster-autoscaler的模拟调度，会在各node中查询哪台机可以负载新的pod，如果有就分配；如果没有就触发资源调度，实现资源级别的自动伸缩。</p><h3 id="节点自动伸缩实现原理"><a href="#节点自动伸缩实现原理" class="headerlink" title="节点自动伸缩实现原理"></a>节点自动伸缩实现原理</h3><ul><li><p>阿里云容器服务ACK的自动伸缩能力，是通过节点自动伸缩组件(cluster-autoscaler)实现的。</p></li><li><p>可以按需弹出普通实例、GPU实例、竞价付费实例、支持多可用区、多实例规格、多种伸缩模式、满足不同的节点伸缩场景。</p><ul><li><p>伸缩配置：通过控制台配置伸缩节点的规格属性</p></li><li><p>自动伸缩组件监听：自动伸缩组件cluster-autoscaler，它以Pod的形式运行在K8S集群中、监听Pod状态，在Pod因为节点资源不足而不能被调度的状态时，启动自动伸缩规则</p></li><li><p>伸缩规则启动：根据伸缩配置的内容，启动ESS弹性伸缩服务</p></li><li><p>ESS弹性伸缩服务创建实例：通过ESS他行设所服务按照配置创建实例后，继续进行集群监听</p></li></ul></li></ul><h3 id="节点自动伸缩操作"><a href="#节点自动伸缩操作" class="headerlink" title="节点自动伸缩操作"></a>节点自动伸缩操作</h3><p>可分为3个步骤：</p><ul><li>执行自动伸缩</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-20-58-%E6%88%AA%E5%B1%8F2023-03-09%2014.03.14.png"></p><ul><li>弹性伸缩服务ESS授权</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-21-12-%E6%88%AA%E5%B1%8F2023-03-09%2014.03.33.png"></p><ul><li>配置自动伸缩</li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-21-29-%E6%88%AA%E5%B1%8F2023-03-09%2014.08.32.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-21-40-%E6%88%AA%E5%B1%8F2023-03-09%2014.04.24.png"></p><ul><li>查看结果</li></ul><h2 id="调度层弹性伸缩"><a href="#调度层弹性伸缩" class="headerlink" title="调度层弹性伸缩"></a>调度层弹性伸缩</h2><h3 id="调度层弹性介绍"><a href="#调度层弹性介绍" class="headerlink" title="调度层弹性介绍"></a>调度层弹性介绍</h3><ul><li><p>调度层弹性组件是指所有的弹性动作都是和pod相关的，并不关心具体的资源情况。</p></li><li><p>调度层弹性组件包括：容器水平伸缩(HPA)，容器垂直伸缩(VPA)，容器定时伸缩(CronHPA)</p></li></ul><h3 id="调度层弹性组件"><a href="#调度层弹性组件" class="headerlink" title="调度层弹性组件"></a>调度层弹性组件</h3><ul><li><p>HPA: Pod水平伸缩的组件</p><ul><li><p>除了社区支持的Resource Metrics和CustomMetrics，阿里云容器服务Kuberenetes还提供了external-metrics-adapter</p></li><li><p>支持云服务的指标作为弹性伸缩的判断条件</p></li><li><p>目前已经支持例如Ingress的QPS、RT等监控指标</p></li></ul></li><li><p>VPA：Pod的纵向伸缩的最贱，主要面向有状态服务的扩容和升级场景，用于大型单体应用</p></li><li><p>CronHPA：定时伸缩组件，主要面向的是周期性负载，通过资源画像可以预测有规律的负载周期，并通过周期性伸缩，实现资源成本的节约</p></li></ul><h3 id="调度层弹性组件使用场景及限制"><a href="#调度层弹性组件使用场景及限制" class="headerlink" title="调度层弹性组件使用场景及限制"></a>调度层弹性组件使用场景及限制</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-21-52-%E6%88%AA%E5%B1%8F2023-03-09%2014.04.24.png"></p><p>通常使用HPA+AutoScaler进行两层扩容，HPA负载容量管理，AutoScaler负责资源池的所扩容</p><h2 id="ACK开启HPA"><a href="#ACK开启HPA" class="headerlink" title="ACK开启HPA"></a>ACK开启HPA</h2><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-22-05-%E6%88%AA%E5%B1%8F2023-03-09%2014.04.32.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/03/09-14-22-13-%E6%88%AA%E5%B1%8F2023-03-09%2014.04.38.png"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>阿里云容器服务ACK弹性伸缩分为两个维度：</p><ul><li><p>调度层弹性：主要负责修改负载的调度容量变化</p></li><li><p>资源层调度：主要是集群的容量规划不能满足集群调度容量时，会通过扩充资源的方式进行调度容量的补充</p></li></ul></li><li><p>阿里云容器服务Kubernetes弹性调度资源：</p><p>通过调度与资源解耦的两层弹性模型来解决的，当集群的调度水位达到设置的阈值时会触发资源蹭的弹性扩容，当资源弹出后，无法调度的单元会自动调度到新弹出的节点上，从而降低整个应用的负载情况</p></li><li><p>阿里云容器服务ACK集群调度层弹性组件：</p><ul><li><p>容器水平伸缩(HPA)</p></li><li><p>容器垂直伸缩(VPA)</p></li><li><p>容器定时伸缩(CronHPA)</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;弹性伸缩是ACK特点功能之一，典型的场景包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在线业务弹性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大规模计算训</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客迁移 from mac to mac</title>
    <link href="http://eryoung2.github.io/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB-from-mac-to-mac/"/>
    <id>http://eryoung2.github.io/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB-from-mac-to-mac/</id>
    <published>2023-03-08T15:34:54.000Z</published>
    <updated>2023-03-08T15:49:44.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>前段时间我的MBP15留在家里给老妈做视频播放器了，这段时间重新收了一台Mac mini来使用。由于前一台电脑大部分内容均已备份，剩余的东西也就是此博客，所以我就把它放在iCloud里边，一并同步过来了。</p><p>但是我发现这个迁移也会遇到些蛋疼的问题，我们一个一个来说。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="1-node-modules依赖太多"><a href="#1-node-modules依赖太多" class="headerlink" title="1. node_modules依赖太多"></a>1. node_modules依赖太多</h3><p>我们都知道，对于hexo来说，它是用nodejs来搭建的，所以会有超多的小文件在node_modules下面。而我遇到的第一个问题则是，iCloud同步小文件时非常、非常、非常慢。</p><p>这个问题也好解决，把博客打个包然后拷贝出来就行了。可以直接使用Mac的实用工具进行打包，做完以后是一个zip文件，然后将其拷贝出来即可。</p><h3 id="2-node没安装"><a href="#2-node没安装" class="headerlink" title="2. node没安装"></a>2. node没安装</h3><p>由于我只是备份了文档，应用并未安装，所以需要重新安装nodejs。</p><p>这里可以移步官网，自行下载相应版本并进行安装，安装之后在terminal输入<strong>node -v</strong>进行验证。</p><h3 id="3-hexo组件未安装"><a href="#3-hexo组件未安装" class="headerlink" title="3. hexo组件未安装"></a>3. hexo组件未安装</h3><p>在解压并进入博客目录后，会发现大部分的内容是在的，只是hexo相关组件还未安装。</p><p>可以删除掉node_modules文件夹和package-lock.json文件，并重新安装hexo插件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf node_modules package-lock.json</span><br><span class="line">sudo npm install --unsafe-perm --verbose -g hexo  </span><br></pre></td></tr></table></figure><p>安装完毕之后，可使用hexo g或者hexo s进行测试，一般就ok的了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>此法用于Mac-&gt;Mac迁移，Mac-&gt;Windows会麻烦一些，之前我也做过一次，太蛋疼了，虽然成功了，但是还是不推荐这么迁移。</p><h2 id="引用与鸣谢"><a href="#引用与鸣谢" class="headerlink" title="引用与鸣谢"></a>引用与鸣谢</h2><blockquote><p>nodejs官网 <a href="https://nodejs.org/en/">Node.js</a></p><p><a href="https://gwang-cv.github.io/2017/08/25/%E5%AE%89%E8%A3%85Hexo%E7%9A%84%E9%97%AE%E9%A2%98/">安装Hexo的问题 | my lab</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h2&gt;&lt;p&gt;前段时间我的MBP15留在家里给老妈做视频播放器了，这段时间重新收了一台Mac mini来使用。由于前一台电脑大部分内容均已备份，剩余的东西</summary>
      
    
    
    
    <category term="博客迁移" scheme="http://eryoung2.github.io/categories/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/"/>
    
    
    <category term="hexo" scheme="http://eryoung2.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师 - 日志与监控</title>
    <link href="http://eryoung2.github.io/2023/03/08/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E6%97%A5%E5%BF%97%E4%B8%8E%E7%9B%91%E6%8E%A7/"/>
    <id>http://eryoung2.github.io/2023/03/08/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-%E6%97%A5%E5%BF%97%E4%B8%8E%E7%9B%91%E6%8E%A7/</id>
    <published>2023-03-08T04:34:04.000Z</published>
    <updated>2023-03-08T04:35:24.543Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>阿里云的可观测性体系： 日志管理、监控管理</p><h2 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h2><h3 id="Kubernetes可观测性体系概述"><a href="#Kubernetes可观测性体系概述" class="headerlink" title="Kubernetes可观测性体系概述"></a>Kubernetes可观测性体系概述</h3><ul><li><p>可观测性指如何从外部输出推测及衡量体系内部状态</p></li><li><p>Kubernetes可观测性体系包括：监控和日志，是大型分布式系统的重要基础设施</p><ul><li>监控可以帮助开发者插卡系统的运行状态</li><li>日志可以协助问题的排查和诊断</li><li>在Kubernetes中，监控和日志属于生态的一部分，他并不是核心组件，因此大部分的能力依赖上层的云厂商的适配。</li><li>Kubernetes定义了介入的接口标准和规范，任何符合接口的组件都可以快速集成。</li></ul></li><li><p>Logging-日志</p><ul><li>基于阿里云日志服务SLS提供了完整的日志方案，可以对应用日志进行收集、处理，并提供了操作审计，kubernetes事件中心等能力。</li></ul></li><li><p>Metrics-监控指标</p><ul><li>对基础设施服务(比如ECS、存储、网络)，云监控提供了全面的监控。</li><li>对于业务应用的性能指标，ARMS无需修改业务代码即可对Java和PHP应用提供全方位的性能监控。</li></ul></li><li><p>Tracing-全链路追踪</p><ul><li>Tracing Analysis为开发者提供了完整的分布式应用调用链路统计、拓扑分析等工具。</li><li>能够帮助开发者快速发现和诊断分布式应用中的性能瓶颈，提升微服务应用的性能和稳定性。</li></ul></li></ul><h3 id="Kubernetes日志使用场景"><a href="#Kubernetes日志使用场景" class="headerlink" title="Kubernetes日志使用场景"></a>Kubernetes日志使用场景</h3><p>Kubernetes日志使用场景主要分为四个大的场景：</p><ul><li>主机内核的日志： 协助开发者进行一些常见的问题与诊断：网络栈异常、驱动异常、文件系统异常、影像节点（内核）稳定的异常。</li><li>Runtime日志：主要包括Docker日志</li><li>核心组件的日志：APIServer日志可以用来审计，Scheduler日志可以诊断调度，etcd日志可以查看存储状态，Ingress日志可以分析接入层流量</li><li>部署应用的日志：可以通过应用日志分析插卡业务层的状态，状态异常。</li></ul><h3 id="Kubernetes日志的采集"><a href="#Kubernetes日志的采集" class="headerlink" title="Kubernetes日志的采集"></a>Kubernetes日志的采集</h3><p>从采集位置上划分，主要分为三种：</p><ul><li>宿主机文件</li><li>容器内文件</li><li>容器标准&#x2F;错误输出</li></ul><h3 id="阿里云ACK日志服务"><a href="#阿里云ACK日志服务" class="headerlink" title="阿里云ACK日志服务"></a>阿里云ACK日志服务</h3><p>可创建两种日志：</p><ul><li>集群日志服务</li><li>应用配置日志服务</li></ul><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="监控类型"><a href="#监控类型" class="headerlink" title="监控类型"></a>监控类型</h3><p>从监控类型上划分，在Kubernetes中可以分成4个不同的类型:</p><ul><li>资源监控：主要监控CPU、内存、网络等常规指标</li><li>性能监控：应用的内部监控，通常是通过Hook的机制在虚拟机层、字节码执行层通过隐式调用，或者是在应用层显示注入，获得更深层次的一个监控指标，一般是用来应用的调优和诊断的。</li><li>安全监控：安全监控主要是对安全进行的一系列的监控监控，类似像越权管理、安全漏洞扫描等。</li><li>事件监控：事件监控紧密贴合Kubernetes的设计理念，补充常规监控方案的欠缺和弊端。</li></ul><h3 id="监控工具"><a href="#监控工具" class="headerlink" title="监控工具"></a>监控工具</h3><ul><li>Cloud Monitor: 基础资源监控</li><li>SLS: 阿里云日志服务</li><li>AHAS: 架构感知监控，应用高可用服务AHAS</li><li>ARMS APM：阿里云应用性能监控ARMS</li><li>ARMS Prometheus：阿里云托管版Prometheus</li><li>XTrace：链路追踪Tracing Analysis</li></ul><h4 id="基础资源监控Cloud-Monitor"><a href="#基础资源监控Cloud-Monitor" class="headerlink" title="基础资源监控Cloud Monitor"></a>基础资源监控Cloud Monitor</h4><ul><li><p>云监控</p><ul><li>是一项针对阿里云资源和互联网应用进行监控的服务</li><li>云监控用于监控各云服务资源的监控指标，探测云服务ECS和运营商站点的可用性，并针对制定监控指标设置报警。</li><li>全面了解阿里云上资源的使用情况和业务运行状况，并及时对故障资源进行处理，保证业务正常运行。</li></ul></li><li><p>查看容器监控数据</p></li><li><p>管理报警规则</p></li></ul><h4 id="日志服务SLS"><a href="#日志服务SLS" class="headerlink" title="日志服务SLS"></a>日志服务SLS</h4><ul><li><p>主要负责日志的采集、分析</p></li><li><p>可采集以下日志：</p><ul><li>APIServer等核心组件的日志</li><li>Service Mesh&#x2F;Ingress等接入层的日志</li><li>应用的标准日志</li></ul></li><li><p>提供上层的日志分析能力</p></li><li><p>默认提供了基于API Server的审计分析能力、接入层的可观测性展现，应用层的日志分析</p></li></ul><h4 id="应用实时监控服务ARMS"><a href="#应用实时监控服务ARMS" class="headerlink" title="应用实时监控服务ARMS"></a>应用实时监控服务ARMS</h4><ul><li>是一款阿里云应用性能管理(APM)类监控产品</li><li>可以基于前端、应用、业务自定义等维度，迅速便捷地为企业构架秒级响应的业务监控能力</li><li>ARMS提供一系列的监控定制功能，包括数据接入、数据计算、数据存储、大盘展示与报警、下游API对接等环节</li><li>用户需要关心三件事：数据从哪里来、实时计算怎么编排、数据怎么用</li></ul><h4 id="架构感知监控AHAS"><a href="#架构感知监控AHAS" class="headerlink" title="架构感知监控AHAS"></a>架构感知监控AHAS</h4><ul><li>AHAS是架构感知监控，通常在Kubernetes集群中负载的类型大部分为微服务，微服务的调用拓扑也比较复杂，因此当集群的网络链路出问题时，如何快速定位问题、发现问题、诊断问题则成为了最大的难题。</li><li>AHAS通过网络的流量和走向，将集群的拓扑进行展现，提供更高层次的问题诊断方式。</li><li>为Kubernetes应用安装AHAS探针后，AHAS能自动识别系统中的Pod、Deployment、Service和它们与其他组件的依赖关系</li><li>通过采集Kubernetes元信息，构建Kubernetes资源的物理拓扑关系，支持自建Kubernetes集群、阿里云容器服务Kubernetes集群</li></ul><h3 id="不同层次的监控解决方案"><a href="#不同层次的监控解决方案" class="headerlink" title="不同层次的监控解决方案"></a>不同层次的监控解决方案</h3><p>从可观测性的角度，以ACK为基础的系统架构可以粗略分为4个层次，自下而上分别是：</p><ul><li>基础设施层</li><li>容器性能层</li><li>应用性能层</li><li>用户业务层</li></ul><h3 id="阿里云容器服务ACK监控方案详解"><a href="#阿里云容器服务ACK监控方案详解" class="headerlink" title="阿里云容器服务ACK监控方案详解"></a>阿里云容器服务ACK监控方案详解</h3><ul><li><p>基础设施层可观测性：包括架构可视化感知方案和基础设施指标监控方向</p></li><li><p>集群、容器的性能指标监控：阿里云托管版Prometheus监控方案、开源Prometheus监控方案、事件的监控方案</p></li><li><p>应用性能可观测性：无侵入应用监控APM监控方案、侵入应用监控APM监控方案</p></li><li><p>用户业务可观测性：自定义日志监控方案</p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>阿里云容器服务ACK版可观测性体系包括：</p><ul><li><p>Logging-日志</p></li><li><p>Metrics-监控指标</p></li><li><p>Tracing-全链路追踪</p></li></ul></li><li><p>阿里云容器服务ACK版集成了日志服务、在创建集群时启用日志服务、快速采集Kubernetes集群的容器日志、包括容器的标准输出以及容器内的文本文件</p></li><li><p>阿里云容器服务ACK版提供了云原生标准的监控接口</p><ul><li><p>它将监控的数据消费能力进行了标准化解耦</p></li><li><p>可以实现和不同云厂商提供的监控服务进行标准化接入</p></li><li><p>目前已经实现多个监控云服务打通接入</p></li></ul></li><li><p>阿里云容器服务ACK版监控生态解决方案分为：</p><ul><li><p>基础设施层场景的可观测性</p></li><li><p>容器性能层场景的可观测性</p></li><li><p>应用性能层场景的可观测性</p></li><li><p>用户业务层场景的可观测性</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;阿里云的可观测性体系： 日志管理、监控管理&lt;/p&gt;
&lt;h2 id=&quot;日志管理&quot;&gt;&lt;a href=&quot;#日志管理&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACP云原生容器工程师-ACK存储</title>
    <link href="http://eryoung2.github.io/2023/02/14/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E5%AD%98%E5%82%A8/"/>
    <id>http://eryoung2.github.io/2023/02/14/ACP%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E5%AD%98%E5%82%A8/</id>
    <published>2023-02-14T08:00:14.000Z</published>
    <updated>2023-03-09T02:33:18.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li><p>在Kubernetes里最小的管理单元是Pod</p></li><li><p>Pod中产生的数据都是临时的，Pod销毁后默认不保存</p></li><li><p>对于有状态的服务，需要数据持久化</p></li><li><p>所以Kubernetes给定了一些数据持久化的方案</p></li></ul><h2 id="Kubernetes存储应用场景"><a href="#Kubernetes存储应用场景" class="headerlink" title="Kubernetes存储应用场景"></a>Kubernetes存储应用场景</h2><ul><li><p>服务的基本配置文件读取、密码密钥管理等</p></li><li><p>服务的存储状态、数据存储等</p></li><li><p>不同服务或应用程序间共享数据</p></li></ul><h2 id="Kubernetes存储系统核心概念"><a href="#Kubernetes存储系统核心概念" class="headerlink" title="Kubernetes存储系统核心概念"></a>Kubernetes存储系统核心概念</h2><h3 id="Volumn"><a href="#Volumn" class="headerlink" title="Volumn"></a>Volumn</h3><ul><li><p>Pod可以同时使用任意数目的卷类型</p></li><li><p>临时卷类型的生命周期与Pod相同，但持久化卷可以比Pod的存活时间长</p></li><li><p>卷的存在时间会超出Pod中所有容器，且在Pod重启时会重新加载</p></li></ul><h3 id="持久卷-PV"><a href="#持久卷-PV" class="headerlink" title="持久卷(PV)"></a>持久卷(PV)</h3><ul><li><p>是集群中管理员集中配置的一块存储</p></li><li><p>它是集群中的资源，就和节点是集群资源一样，包含存储的类型、大小和访问模式等</p></li><li><p>PV是卷插件比如Volumes等。但是它的生命周期独立于使用PV的任何Pod个体。比如，Pod销毁时，PV会得以保留。</p></li></ul><h3 id="持久卷声明-PVC"><a href="#持久卷声明-PVC" class="headerlink" title="持久卷声明(PVC)"></a>持久卷声明(PVC)</h3><ul><li><p>是用户关于存储的请求</p></li><li><p>描述对PV的一个请求，请求信息包含PV大小、访问模式等，PVC会消耗PV资源</p></li></ul><h2 id="Kubernetes存储插件"><a href="#Kubernetes存储插件" class="headerlink" title="Kubernetes存储插件"></a>Kubernetes存储插件</h2><ul><li><p>Kubernetes可以直接调用某种存储插件，对接后端存储服务，现阶段存储插件有20多种。</p></li><li><p>Kubernetes的存储插件可以分为：In-tree和Out-of-tree两大类</p><ul><li><p>In-tree: 源码放在Kubernetes内部，和Kubernetes一起发布、更迭，缺点是及时迭代速度慢、灵活性差</p></li><li><p>Out-of-tree: Volume Plugins独立于Kubernetes，它是由存储商提供实现的。主要有FlexVolume和CSI两种，ACK主要使用此类插件</p></li></ul></li></ul><h2 id="ACK存储插件"><a href="#ACK存储插件" class="headerlink" title="ACK存储插件"></a>ACK存储插件</h2><h3 id="FlexVolume"><a href="#FlexVolume" class="headerlink" title="FlexVolume"></a>FlexVolume</h3><ul><li><p>社区较早实现的存储卷扩展机制</p></li><li><p>FlexVolume运行在host空间，不能使用RBAC访问Kubernetes API，导致功能受到很大限制</p></li><li><p>由Shell部署</p></li></ul><h3 id="CSI"><a href="#CSI" class="headerlink" title="CSI"></a>CSI</h3><ul><li><p>社区推荐的存储卷扩展机制</p></li><li><p>ACK集群提供的CSI存储插件兼容社区的CSI特性</p></li><li><p>CSI不仅仅支持Kubernetes平台存储插件接口，而是作为云原生生态中容器存储接口的标准</p></li><li><p>CSI是容器部署的</p></li></ul><h2 id="CSI存储插件"><a href="#CSI存储插件" class="headerlink" title="CSI存储插件"></a>CSI存储插件</h2><h3 id="概念要点"><a href="#概念要点" class="headerlink" title="概念要点"></a>概念要点</h3><ul><li><p>遵循标准CSI规范，支持EBS、NAS、OSS等存储类型的挂载行为</p></li><li><p>自ACK v1.16开始，部署集群会默认安装最新版本的CSI组件，可以通过CSI存储插件使用阿里云存储服务</p></li><li><p>CSI存储插件提供了数据卷的全生命管理周期，包括数据卷的：创建、挂载、卸载、删除、扩容等服务</p></li><li><p>ACK目前只支持一种存储插件，CSI或者FlexVolume</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-04-38-sp1.png"></p><h3 id="插件特性"><a href="#插件特性" class="headerlink" title="插件特性"></a>插件特性</h3><ul><li><p>CSI是Kubernetes社区推荐的存储插件方案，CSI插件包括以下两部分：</p><ul><li><p>CSI-Plugin: 实现数据卷的挂载、卸载功能。ACK默认提供云盘、NAS、OSS三种存储卷的挂载能力</p></li><li><p>CSI-Provisioner: 实现数据卷的自动创造能力，目前支持云盘、NAS两种存储卷创造能力。</p></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-04-48-plugin1.png"></p><h3 id="CSI存储插件选择-EBS-NAS-OSS"><a href="#CSI存储插件选择-EBS-NAS-OSS" class="headerlink" title="CSI存储插件选择(EBS, NAS, OSS)"></a>CSI存储插件选择(EBS, NAS, OSS)</h3><h4 id="选择EBS的情景"><a href="#选择EBS的情景" class="headerlink" title="选择EBS的情景"></a>选择EBS的情景</h4><p>EBS(阿里云云盘)是阿里云提供的数据块级别的块存储产品，优势是性能高、时延低，适合于OLTP数据库、NoSQL数据库等IO密集型的高性能、低时延的应用工作负载。</p><h4 id="选择NAS的情景"><a href="#选择NAS的情景" class="headerlink" title="选择NAS的情景"></a>选择NAS的情景</h4><p>无需修改应用，可直接挂在NAS。文件存储NAS适用于多计算节点、无状态集群的共享数据访问。</p><h4 id="选择OSS的情景"><a href="#选择OSS的情景" class="headerlink" title="选择OSS的情景"></a>选择OSS的情景</h4><p>OSS采用扁平化的文件组织形式，采用Restful API接口访问，不支持文件随机读写，适用于互联网架构的海量数据的上传下载和分发。</p><h2 id="通过控制台使用云盘静态存储卷"><a href="#通过控制台使用云盘静态存储卷" class="headerlink" title="通过控制台使用云盘静态存储卷"></a>通过控制台使用云盘静态存储卷</h2><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ol><li><p>已创建一个ACK集群，并且在该集群中部署CSI集群</p></li><li><p>创建了一个按需付费的云盘</p></li></ol><h3 id="创建PV"><a href="#创建PV" class="headerlink" title="创建PV"></a>创建PV</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-05-06-pv1.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-05-16-pv2.png"></p><h3 id="创建PVC"><a href="#创建PVC" class="headerlink" title="创建PVC"></a>创建PVC</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-05-28-pvc.png"></p><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-05-39-app1.png"></p><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/14-16-06-13-app2.png"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>Kubernetes存储核心概念：Volume、PV、PVC</p></li><li><p>Kubernetes插件存储分类：In-tree和Out-of-tree两类</p></li><li><p>ACK支持的存储插件模式：FlexVolume和CSI</p></li><li><p>ACK支持通过Pod绑定的三种存储形态：EBS、NAS、OSS</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Kubernetes里最小的管理单元是Pod&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pod中产生的数据都是临时的，Pod销毁</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>ACK云原生容器工程师-ACK网络(下)</title>
    <link href="http://eryoung2.github.io/2023/02/13/ACK%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E7%BD%91%E7%BB%9C-%E4%B8%8B/"/>
    <id>http://eryoung2.github.io/2023/02/13/ACK%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%B9%E5%99%A8%E5%B7%A5%E7%A8%8B%E5%B8%88-ACK%E7%BD%91%E7%BB%9C-%E4%B8%8B/</id>
    <published>2023-02-13T07:07:42.000Z</published>
    <updated>2023-02-13T07:17:23.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="容器网络规划"><a href="#容器网络规划" class="headerlink" title="容器网络规划"></a>容器网络规划</h2><ul><li><p>容器网络规划、VPC专有网络配置阶段、容器网络配置阶段、Service网络配置阶段</p></li><li><p>根据集群业务需求，实现容器网络的配置完成</p></li></ul><h2 id="容器网络实践"><a href="#容器网络实践" class="headerlink" title="容器网络实践"></a>容器网络实践</h2><h3 id="Flannel"><a href="#Flannel" class="headerlink" title="Flannel"></a>Flannel</h3><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/13-15-11-01-flannel1.png"></p><h3 id="Terway"><a href="#Terway" class="headerlink" title="Terway"></a>Terway</h3><h4 id="Terway网络规划注意事项"><a href="#Terway网络规划注意事项" class="headerlink" title="Terway网络规划注意事项"></a>Terway网络规划注意事项</h4><ul><li><p>建议选用高配ECS规格机型，如5代或6代的8G以上机型</p></li><li><p>共享ENI支持的最大Pod数&#x3D;(ECS支持的ENI数-1)×单个ENI支持的私有ip数</p></li><li><p>独占ENI支持的最大Pod数&#x3D;ECS支持的ENI数-1</p></li></ul><h4 id="Terway网络实践步骤"><a href="#Terway网络实践步骤" class="headerlink" title="Terway网络实践步骤"></a>Terway网络实践步骤</h4><h5 id="1-规划和准备集群网络"><a href="#1-规划和准备集群网络" class="headerlink" title="1. 规划和准备集群网络"></a>1. 规划和准备集群网络</h5><ul><li><p>在创建ACK Kubernetes集群时，需要指定VPC地址段、虚拟交换机、Pod地址段、Service地址段</p></li><li><p>需要先创建一个专有网络VPC，然后在VPC下创建两个虚拟交换机</p></li><li><p>虚拟交换机和Pod交换机需要在同一可用区下</p></li></ul><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/13-15-11-17-terway1.png"></p><h5 id="2-创建专有网络"><a href="#2-创建专有网络" class="headerlink" title="2. 创建专有网络"></a>2. 创建专有网络</h5><ol><li><p>登录专有网络管理控制台</p></li><li><p>在顶部菜单栏，选择地域，然后创建专有网络</p></li><li><p>创建专有网络和虚拟交换机。</p></li></ol><p><img src="https://raw.githubusercontent.com/ErYoung2/imgbed/master/2023/02/13-15-11-26-terway2.png"></p><h5 id="3-创建ACK集群"><a href="#3-创建ACK集群" class="headerlink" title="3. 创建ACK集群"></a>3. 创建ACK集群</h5><ol><li><p>登录阿里云容器服务ACK管理控制台</p></li><li><p>创建集群</p></li><li><p>在选择集群模板页面，单机标准托管集群下的创建</p></li></ol><h5 id="4-配置Terway网络"><a href="#4-配置Terway网络" class="headerlink" title="4. 配置Terway网络"></a>4. 配置Terway网络</h5><ol><li><p>配置的关键信息：专有网络、虚拟交换机、网络插件选Terway</p></li><li><p>配置Terway模式：独占弹性网卡或者共享弹性网卡(IPVlan)，是否支持NetworkPolicy选项(仅在共享弹性网卡模式下可选)，Pod网段，Service网段</p></li></ol><h5 id="5-配置节点实例及创建集群"><a href="#5-配置节点实例及创建集群" class="headerlink" title="5. 配置节点实例及创建集群"></a>5. 配置节点实例及创建集群</h5><p>选择节点实例，点击创建</p><h4 id="Terway和Flannel模式的不同"><a href="#Terway和Flannel模式的不同" class="headerlink" title="Terway和Flannel模式的不同"></a>Terway和Flannel模式的不同</h4><ul><li><p>Pod需要通过弹性网卡(ENI)接入虚拟交换机，来组件Pod网络</p></li><li><p>不同ECS规格所能支持的弹性网卡数不同</p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li><p>容器网络规划步骤介绍</p></li><li><p>容器网络实践</p><ul><li><p>Flannel</p></li><li><p>Terway，主要介绍了ENI模式下如何创建集群网络</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;容器网络规划&quot;&gt;&lt;a href=&quot;#容器网络规划&quot; class=&quot;headerlink&quot; title=&quot;容器网络规划&quot;&gt;&lt;/a&gt;容器网络规划&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;容器网络规划、VPC专有网络配置阶段、容器网络配置阶段、Service网络配置阶段&lt;/p&gt;</summary>
      
    
    
    
    <category term="考试" scheme="http://eryoung2.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
    <category term="阿里云ACP认证" scheme="http://eryoung2.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91ACP%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
</feed>
